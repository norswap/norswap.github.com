<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>norswap</title>
    <description></description>      
    <link>http://norswap.com/</link>
    <atom:link href="http://norswap.com/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Imperative Ambiguity</title>
      <description>
&lt;p&gt;A while ago I realized that something people value about &lt;a href=&quot;https://en.wikipedia.org/wiki/Purely_functional_programming&quot;&gt;purely functional
programming&lt;/a&gt; is the certainties it gives about a function&amp;#39;s signature. That
might seem obvious, after all there is no data mutation and no side effects.&lt;/p&gt;
&lt;p&gt;I, however, am not a fan of purely functional programming. This is not a debate
I want to wade in; it suffice to say that I enjoy using purely functional
programming techniques, but despise being forced to write my whole program using
that paradigm.&lt;/p&gt;
&lt;p&gt;I am much more interested in what it means not to have these guarantees, and the
resulting ambiguity in function signatures. And of course, how we could make
things better.&lt;/p&gt;
&lt;h2 id=&quot;an-ambiguous-function&quot;&gt;An Ambiguous Function&lt;/h2&gt;
&lt;p&gt;Consider the following function signature:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;List&amp;lt;T&amp;gt; process(List&amp;lt;T&amp;gt; list);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In a purely functional language, you know that &lt;code&gt;list&lt;/code&gt; cannot be modified, and
the returned list will depend only on &lt;code&gt;list&lt;/code&gt; and whatever data was captured via
&lt;a href=&quot;https://en.wikipedia.org/wiki/Closure_(computer_programming)&quot;&gt;closure&lt;/a&gt; at the function definition point (data which, of course, does not
change).&lt;/p&gt;
&lt;p&gt;In an imperative language, however, the following is unclear:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Can &lt;code&gt;process&lt;/code&gt; modify &lt;code&gt;list&lt;/code&gt;?&lt;/li&gt;
&lt;li&gt;Does &lt;code&gt;process&lt;/code&gt; modify any state beside &lt;code&gt;list&lt;/code&gt;?&lt;/li&gt;
&lt;li&gt;Does &lt;code&gt;process&lt;/code&gt; store a reference to &lt;code&gt;list&lt;/code&gt; in some other data structure?&lt;/li&gt;
&lt;li&gt;Does &lt;code&gt;process&lt;/code&gt; store a reference to the list it returns in some other data
structure?&lt;/li&gt;
&lt;li&gt;Can the returned list be &lt;code&gt;list&lt;/code&gt; itself?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The first two questions are about mutation, but the last three questions are
relevant &lt;em&gt;because of&lt;/em&gt; mutation. It&amp;#39;s important to know who can access the list,
because of the possibility it might be mutated.&lt;/p&gt;
&lt;h2 id=&quot;caller-and-callee&quot;&gt;Caller and Callee&lt;/h2&gt;
&lt;p&gt;It&amp;#39;s important for us to distinguish between the caller and the callee.
The caller is the entity that makes the function call, while the callee is the
entity to which the called function belongs.&lt;/p&gt;
&lt;p&gt;What are those entities? Different views can apply: they could be packages,
modules, classes, objects, clients or libraries.&lt;/p&gt;
&lt;p&gt;I think the most interesting case is when the caller and the callee are evolved
separately. In this scenario the author/maintainer of the callee does not need
to be aware of the caller, and the author/maintainer of the caller only needs to
be aware of the interface of the callee.&lt;/p&gt;
&lt;p&gt;When we talk about ambiguity, we talk about the ambiguity of this interface.&lt;/p&gt;
&lt;h2 id=&quot;interpretations&quot;&gt;Interpretations&lt;/h2&gt;
&lt;p&gt;Let&amp;#39;s consider a few possible interpretations of the function:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;List&amp;lt;T&amp;gt; process(List&amp;lt;T&amp;gt; list);
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Immutable&lt;/strong&gt;: no one can modify the argument list: not the caller, not the
callee, nor anyone else.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Read Loan&lt;/strong&gt;: the callee is allowed to read the list, but not write to it nor
create a reference that outlives the function&amp;#39;s execution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Write Loan&lt;/strong&gt;: the callee is allowed to read and write the list, but not
create a reference that outlives the function&amp;#39;s execution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Transfer&lt;/strong&gt;: the callee may do whatever it wants with the list, the caller may
not retain a reference to the list that outlives its execution; or, even more
stringently, may not access the list at all after the call to &lt;code&gt;process&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Pipe In&lt;/strong&gt;: the callee may read the list and retain a read-only reference that
outlives the function&amp;#39;s execution. The caller may still read and write the
list. Data is being &lt;em&gt;piped in&lt;/em&gt; the callee.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Pipe Out&lt;/strong&gt;: the callee may read or write the list and retain a reference that
outlives the functions&amp;#39;s execution. The caller may still read the list. Data
is being &lt;em&gt;piped out&lt;/em&gt; of the callee.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Sync&lt;/strong&gt;: the callee may read or write the list and retain a reference that
outlives the function&amp;#39;s execution. The caller may still read and write the
list.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since things are complex enough as it is, we omit discussing whether the
returned list is an alias or the argument list, as well as considerations
relating to concurrent execution.&lt;/p&gt;
&lt;h2 id=&quot;in-practice&quot;&gt;In Practice&lt;/h2&gt;
&lt;p&gt;Is it possible to disambiguate all these scenarios in a way that can be enforced
by a compiler?&lt;/p&gt;
&lt;p&gt;Maybe. We could imagine keywords on parameters to enforce those. Simple
(function-local) flow analysis should be sufficient to implement most of them.&lt;/p&gt;
&lt;p&gt;I&amp;#39;m eager to see new languages that engage with this problem.&lt;/p&gt;
&lt;p&gt;The closest thing we have currently is probably &lt;a href=&quot;https://en.wikipedia.org/wiki/Rust_(programming_language)&quot;&gt;Rust&lt;/a&gt;, but it restricts the
possible scenarios a lot for the sake of precisely tracking the ownership of a
piece of data, which is necessary for its &lt;abbr title=&quot;Garbage
Collection&quot;&gt;GC&lt;/abbr&gt;-less memory management system.&lt;/p&gt;
      </description>
      <pubDate>2017-11-11T23:00:00.000Z</pubDate>
      <link>http://norswap.com/imperative-ambiguity</link>
      <guid isPermaLink="true">http://norswap.com/imperative-ambiguity</guid>
    </item>
    <item>
      <title>Charlie Munger: Psychological Tendencies List</title>
      <description>
&lt;p&gt;This is post 4/4 in &lt;a href=&quot;/munger&quot;&gt;a series about Charlie Munger&amp;#39;s wisdom&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;01-reward-and-punishment-superresponse-tendency&quot;&gt;01. Reward and Punishment Superresponse Tendency&lt;/h2&gt;
&lt;p&gt;Everyone claims to understand it, yet it is still under-evaluated.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you would persuade, appeal to interest and not to reason.&lt;br&gt;â€” Benjamin Franklin&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Never, ever, think about something else when you should be thinking about the
power of incentives.&lt;/p&gt;
&lt;p&gt;Skinner (a famous psychologist) demonstrated again and again a great recurring,
generalized behavioral algorithm in nature: &amp;quot;Repeat behavior that works.&amp;quot; He
also demonstrated that prompt rewards worked much better than delayed rewards in
changing and maintaining behavior. And, once his rats and pigeons had
conditioned reflexes, caused by food rewards, he found what withdrawal pattern
of rewards kept the reflexive behavior longest in place: random distribution.&lt;/p&gt;
&lt;p&gt;The general antidotes here are: (1) especially fear professional advice when it
is especially good for the advisor; (2) learn and use the basic elements of your
advisor&amp;#39;s trade as you deal with your advisor; and (3) double check, disbelieve,
or replace much of what you&amp;#39;re told, to the degree that seems appropriate after
objective thought.&lt;/p&gt;
&lt;p&gt;Cost-plus-percent-of-cost contracts are evil: they incentivize contractors to
drive up the costs.&lt;/p&gt;
&lt;p&gt;Make it hard to cheat: cash register, good accounting practices. People will
steal if it&amp;#39;s very easy, and the stealing will become habitual. Make it hard to
cheat, otherwise you&amp;#39;re inflicting moral injury.&lt;/p&gt;
&lt;p&gt;Dread, and avoid as much you can, rewarding people for what can be easily faked.&lt;/p&gt;
&lt;p&gt;Punishments, of course, also strongly influence behavior and cognition, although
not so flexibly and wonderfully as rewards.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;02-liking-loving-tendency&quot;&gt;02. Liking/Loving Tendency&lt;/h2&gt;
&lt;p&gt;The Liking/Loving Tendency acts as a conditioning device that makes the liker or
lover tend to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ignore faults of and comply with wishes of, the object of his affection;&lt;/li&gt;
&lt;li&gt;favor people, products, and actions merely associated&lt;br&gt;with the object of his affection;&lt;/li&gt;
&lt;li&gt;distort other facts to facilitate love.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The phenomenon of liking and loving causing admiration also works in reverse.
Admiration also causes or intensifies liking or love. This can be both positive,
when liking someone admirable, or negative.&lt;/p&gt;
&lt;p&gt;Related to &lt;em&gt;&lt;a href=&quot;#03-disliking-hating-tendency&quot;&gt;03. Disliking/Hating Tendency&lt;/a&gt;&lt;/em&gt; and
&lt;em&gt;&lt;a href=&quot;#10-influence-from-mere-association-tendency&quot;&gt;10. Influence-from-Mere-Association Tendency&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;03-disliking-hating-tendency&quot;&gt;03. Disliking/Hating Tendency&lt;/h2&gt;
&lt;p&gt;We tend to disfavor people we already dislike and hate to level of
irrationality. This results in:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ignoring virtues of people we dislike;&lt;/li&gt;
&lt;li&gt;disliking people, products, and actions merely associated&lt;br&gt;with the object of our dislike;&lt;/li&gt;
&lt;li&gt;distorting facts in order to facilitate the hatred.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sibling rivalry. Historical enmity.&lt;/p&gt;
&lt;p&gt;The facts from both camps have very little overlap.&lt;/p&gt;
&lt;p&gt;Related to &lt;em&gt;&lt;a href=&quot;#02-liking-loving-tendency&quot;&gt;02. Liking/Loving Tendency&lt;/a&gt;&lt;/em&gt; and
&lt;em&gt;&lt;a href=&quot;#10-influence-from-mere-association-tendency&quot;&gt;10. Influence-from-Mere-Association Tendency&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;04-doubt-avoidance-tendency&quot;&gt;04. Doubt-Avoidance Tendency&lt;/h2&gt;
&lt;p&gt;The brain of man is programmed with a tendency to quickly remove doubt by
reaching some decision.&lt;/p&gt;
&lt;p&gt;As we shall see later when we get to &lt;em&gt;&lt;a href=&quot;#15-social-proof-tendency&quot;&gt;15. Social-Proof Tendency&lt;/a&gt;&lt;/em&gt;
and &lt;em&gt;&lt;a href=&quot;#17-stress-influence-tendency&quot;&gt;17. Stress-Influence Tendency&lt;/a&gt;&lt;/em&gt;, what usually triggers
Doubt-Avoidance Tendency is some combination of (1) puzzlement and (2) stress.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;05-inconsistency-avoidance-tendency&quot;&gt;05. Inconsistency-Avoidance Tendency&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;An ounce of prevention is worth a pound of cure.&lt;br&gt;â€” Benjamin Franklin&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Inconsistency-Avoidance Tendency makes it much easier to prevent a habit than to
change it.&lt;/p&gt;
&lt;p&gt;Also tending to be maintained in place by the anti-change tendency of the brain
are one&amp;#39;s previous conclusions, human loyalties, reputational identity,
commitments, accepted role in a civilization, etc.&lt;/p&gt;
&lt;p&gt;This tendency overlaps with what is known as &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Confirmation_bias&quot;&gt;confirmation bias&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;One corollary of Inconsistency-Avoidance Tendency is that a person making big
sacrifices in the course of assuming a new identity will intensify his devotion
to the new identity. After all, it would be quite inconsistent behavior to make
a large sacrifice for something that was no good.&lt;/p&gt;
&lt;p&gt;As he was rising from obscurity in Philadelphia and wanted the approval of some
important man, Franklin would often maneuver that man into doing Franklin some
unimporrant favor like lending Franklin a book. Thereafter the man would admire
and trust Franklin more because a nonadmired and nontrusted Franklin would be
inconsistent with the appraisal implicit in lending Franklin the book.&lt;/p&gt;
&lt;p&gt;When one is maneuvered into deliberately hurting some other person, one will
tend to disapprove or even hate that person.&lt;/p&gt;
&lt;p&gt;So strong is Inconsistency-Avoidance Tendency that it will often prevail after
one has merely pretended to have some identity habit, or conclusion. Many a
hypocrite is improved by his pretensions of virtue. And many a judge and juror,
while pretending objectivity, is gaining objectivity.&lt;/p&gt;
&lt;p&gt;It is important not to thus put one&amp;#39;s brain in chains before one has come
anywhere near his full potentiality as a rational person.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;06-curiosity-tendency&quot;&gt;06. Curiosity Tendency&lt;/h2&gt;
&lt;p&gt;Simply put: curiosity helps.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;07-kantian-fairness-tendency&quot;&gt;07. Kantian Fairness Tendency&lt;/h2&gt;
&lt;p&gt;Also known as &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Golden_RuleT&quot;&gt;the golden rule&lt;/a&gt;&lt;/em&gt;:&lt;br&gt;&lt;em&gt;do unto others as you would have them do unto you&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;As an obverse consequence of such &amp;quot;fair-sharing&amp;quot; conduct, much reactive
hostility occurs when fair-sharing is expected yet not provided.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;08-envy-jealousy-tendency&quot;&gt;08. Envy/Jealousy Tendency&lt;/h2&gt;
&lt;p&gt;It is not greed that drives the world, but envy.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;09-reciprocation-tendency&quot;&gt;09. Reciprocation Tendency&lt;/h2&gt;
&lt;p&gt;We tend to reciprocate favors and (perceived) slights.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can always tell the man off tomorrow if it is such a good idea.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Interplays with &lt;em&gt;&lt;a href=&quot;#01-reward-and-punishment-superresponse-tendency&quot;&gt;01. Reward and Punishment Superresponse Tendency&lt;/a&gt;&lt;/em&gt; and
&lt;em&gt;&lt;a href=&quot;#05-inconsistency-avoidance-tendency&quot;&gt;05. Inconsistency-Avoidance Tendency&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Reciprocating concessions: start with an outrageous demand then lower it to get
a better chance of compliance than if you had asked outright.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;10-influence-from-mere-association-tendency&quot;&gt;10. Influence-from-Mere-Association Tendency&lt;/h2&gt;
&lt;p&gt;For instance, associating price with quality. Mistaking correlation for
causation.&lt;/p&gt;
&lt;p&gt;Other example: killing the messenger.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;11-simple-pain-avoiding-psychological-denial&quot;&gt;11. Simple, Pain-Avoiding Psychological Denial&lt;/h2&gt;
&lt;p&gt;Simple but often underestimated.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;12-excessive-self-regard-tendency&quot;&gt;12: Excessive Self-Regard Tendency&lt;/h2&gt;
&lt;p&gt;Man mostly misappraises himself on the high side. This also extends to one
person&amp;#39;s major/minor possessions, friends, family.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Endowment_effect&quot;&gt;endowment effect&lt;/a&gt;&lt;/em&gt;: owned, a possession suddenly becomes worth more to him
than he would pay if they were offered for sale and he didn&amp;#39;t already own them.&lt;/p&gt;
&lt;p&gt;When members of a clique exhibit self-regard tendency, they will select new
members very much like themselves. The problems will get worse.&lt;/p&gt;
&lt;p&gt;Excesses of self-regard often cause bad hiring decisions because employers
grossly overappraise the worth of their own conclusions that rely on impressions
in face-to-face contact. The correct antidote to this sort of folly is to
underweigh face-to-face impressions and overweigh the applicant&amp;#39;s past record.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;13-overoptimism-tendency&quot;&gt;13. Overoptimism Tendency&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;What a man wishes, that also will he believe.&lt;br&gt;â€” Demosthenes&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&quot;14-deprival-superreaction-tendency&quot;&gt;14. Deprival-Superreaction Tendency&lt;/h2&gt;
&lt;p&gt;We gain less happiness from gaining 10$ than we lose from losing 10$.
This is also known as &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Loss_aversion&quot;&gt;loss aversion&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Almost getting something then having it denied will hurt as much as if it was
already owned.&lt;/p&gt;
&lt;p&gt;Loss avertion is often framed by availability: getting angry over losing 10$ out
of 300$ in our wallet when we have tens of thousands in the bank.&lt;/p&gt;
&lt;p&gt;This tendency acts to protect religious/ideological views against nonbelievers,
because the spread of nonbelievers&amp;#39; ideas and arguments will weaken the
position/influence of the views. It leads to ideology-based groupthink and
rejecting conflicting inputs.&lt;/p&gt;
&lt;p&gt;It will be triggered even more strongly when the nonbeliever is a former
believer: not only are the ideas challenged, but the group suffers the loss of
one of its members, and there is fear that this nonbeliever will be
extra-convincing because he was a former member. Hence the notion of &lt;em&gt;heresy&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;This tendency also interacts with &lt;em&gt;&lt;a href=&quot;#05-inconsistency-avoidance-tendency&quot;&gt;05. Inconsistency-Avoidance Tendency&lt;/a&gt;&lt;/em&gt;:
(1) in groupthink, (2) in continuing to pour ressources in a fruitless venture.&lt;/p&gt;
&lt;p&gt;This tendency explains gambling woes: it gives us an urge to get even after a
loss, and increases the emotional impact of near wins (two 7s, one cherry on the
slot machine where three 7s yield the jackpot).&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;15-social-proof-tendency&quot;&gt;15. Social-Proof Tendency&lt;/h2&gt;
&lt;p&gt;Young people are hardwired to respect their peers more than their parents. A
trick parents can use: control the quality of the peers.&lt;/p&gt;
&lt;p&gt;Social proof tendency is most easily triggered in the presence of puzzlement or
stress (see &lt;em&gt;&lt;a href=&quot;#04-doubt-avoidance-tendency&quot;&gt;04. Doubt-Avoidance Tendency&lt;/a&gt;&lt;/em&gt; and
&lt;em&gt;&lt;a href=&quot;#17-stress-influence-tendency&quot;&gt;17. Stress-Influence Tendency&lt;/a&gt;&lt;/em&gt;), or in particular both.&lt;/p&gt;
&lt;p&gt;Because both bad and good behavior are made contagious by social proof, it 
is important to (1) stop bad behaviour before it spreads and (2) foster and
display all good behaviour.&lt;/p&gt;
&lt;p&gt;In social proof, it is not only action by others that misleads but also their
inaction. In the presence of doubt, inaction by others becomes social proof that
inaction is the right course.&lt;/p&gt;
&lt;p&gt;Social-proof tendency often interacts in a perverse way
with &lt;em&gt;&lt;a href=&quot;#08-envy-jealousy-tendency&quot;&gt;08. Envy/Jealousy Tendency&lt;/a&gt;&lt;/em&gt;
and &lt;em&gt;&lt;a href=&quot;#14-deprival-superreaction-tendency&quot;&gt;14. Deprival-Superreaction Tendency&lt;/a&gt;&lt;/em&gt;: e.g. two kids vying for the
same toy, amongst a heap of almost identical toys.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;16-contrast-misreaction-tendency&quot;&gt;16. Contrast-Misreaction Tendency&lt;/h2&gt;
&lt;p&gt;We tend to contrast things with other things that are close to hand. Paying a
lot of money for something, because we just made a much (justifiably) bigger
purchase. The realtor that shows awful houses before a merely bad one.&lt;/p&gt;
&lt;p&gt;Also known as &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Anchoring&quot;&gt;anchoring&lt;/a&gt;&lt;/em&gt; and related to
&lt;em&gt;&lt;a href=&quot;#18-availability-misweighing-tendency&quot;&gt;18. Availability-Misweighing Tendency&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Cognition, misled by tiny changes involving low contrast, will often miss a
trend that is destiny.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A small leak will sink a great ship.&lt;br&gt;â€” Benjamin Franklin&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&quot;17-stress-influence-tendency&quot;&gt;17. Stress-Influence Tendency&lt;/h2&gt;
&lt;p&gt;Makes &lt;em&gt;&lt;a href=&quot;#15-social-proof-tendency&quot;&gt;15. Social-Proof Tendency&lt;/a&gt;&lt;/em&gt; more powerful.&lt;/p&gt;
&lt;p&gt;When heavy, can cause depression.&lt;/p&gt;
&lt;p&gt;Can disrupt &lt;a href=&quot;https://en.wikipedia.org/wiki/Availability_heuristic&quot;&gt;pavlovian conditioning&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Pavlov noticed that the harder a dog was to break, the hardest it was to return
to his pre-breakdown state. All dogs could be broken down, and he couldn&amp;#39;t
reverse a breakdown except through new stress.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;18-availability-misweighing-tendency&quot;&gt;18. Availability-Misweighing Tendency&lt;/h2&gt;
&lt;p&gt;Also known as &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Availability_heuristic&quot;&gt;availability bias&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;We overvalue evidence (or increase the importance of stuff) that is readily available.&lt;/p&gt;
&lt;p&gt;Vivid images are more readily available.&lt;/p&gt;
&lt;p&gt;In group environments, simple explanations of complex phenomena can rapidly gain
currency and spread even if theyâ€™re wrong. This is known as availability
cascade.&lt;/p&gt;
&lt;p&gt;This tendency can be fought by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;using checklists&lt;/li&gt;
&lt;li&gt;emphasizing discomfirming evidence&lt;/li&gt;
&lt;li&gt;using a devil&amp;#39;s advocate&lt;/li&gt;
&lt;li&gt;not speaking first so as not to influence others&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;19-use-it-or-lose-it-tendency&quot;&gt;19. Use-It-or-Lose-It Tendency&lt;/h2&gt;
&lt;p&gt;All skills attenuate with disuse.&lt;/p&gt;
&lt;p&gt;This tendency is tempered for the diligent: If a skill is raised to fluency,
instead of merely being crammed in briefly to enable one to pass some test, then
the skill (1) will be lost more slowly and (2) will come back faster when
refreshed with new learning. These are not minor advantages, and a wise man
engaged in learning some important skill will not stop until he is really fluent
in it.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;20-drug-misinfluence-tendency&quot;&gt;20. Drug Misinfluence Tendency&lt;/h2&gt;
&lt;p&gt;Obviously, and note one can be addicted to more than just chemicals â€” our body
is more than happy to manufacture the chemicals for us if we provide it with the
right inputs (see &lt;a href=&quot;https://www.youtube.com/watch?v=ReRcHdeUG9Y&quot;&gt;this video&lt;/a&gt; for instance).&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;21-senescence-misinfluence-tendencv&quot;&gt;21. Senescence-Misinfluence Tendencv&lt;/h2&gt;
&lt;p&gt;Practically no one is good at learning complex new skills when very old. But
some people remain pretty good in maintaining intensely practiced old skills
until late in life.&lt;/p&gt;
&lt;p&gt;Continuous thinking and learning, done with joy can somewhat help delay what is
inevitable.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;22-authority-misinfluence-tendency&quot;&gt;22. Authority-Misinfluence Tendency&lt;/h2&gt;
&lt;p&gt;We also trust leaders in areas where they are not experts. This is known as the
&lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Halo_effect&quot;&gt;halo effect&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;23-twaddle-tendency&quot;&gt;23. Twaddle Tendency&lt;/h2&gt;
&lt;p&gt;Twaddle is idle talk, in particular talk about something the person isn&amp;#39;t an
expert in.&lt;/p&gt;
&lt;p&gt;People that prattle incoherently are to be kept away from important work
and from importunating people that do it.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;24-reason-respecting-tendency&quot;&gt;24. Reason-Respecting Tendency&lt;/h2&gt;
&lt;p&gt;People accept directives better when the reasons are given.&lt;/p&gt;
&lt;p&gt;Tell Who has to do What, Where, When, and Why.&lt;/p&gt;
&lt;p&gt;Unfortunately also works with incorrect or invalid reasons.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;25-lollapalooza-tendency&quot;&gt;25. Lollapalooza Tendency&lt;/h2&gt;
&lt;p&gt;The tendency to get extreme consequences from confluences of psychological
tendencies acting in favor of a particular outcome.&lt;/p&gt;
&lt;p&gt;Effects can either bolster each other (lollapallooza) or cancel each other out.&lt;/p&gt;
      </description>
      <pubDate>2017-11-04T23:00:00.000Z</pubDate>
      <link>http://norswap.com/munger-psychology</link>
      <guid isPermaLink="true">http://norswap.com/munger-psychology</guid>
    </item>
    <item>
      <title>Charlie Munger on Learning</title>
      <description>
&lt;p&gt;This is post 3/4 in &lt;a href=&quot;/munger&quot;&gt;a series about Charlie Munger&amp;#39;s wisdom&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;My habit of committing far more time to learning and thinking than to doing is
no accident.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;More important than the will to win is the will to prepare.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Acquire Wordly Wisdom&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Spend each day trying to be a little wiser than you were when you woke up.
Discharge your duties faithfully and well. Step by step you get ahead, but not
necessarily in fast spurts. But you build discipline by preparing for fast
spurts. Slug it out one inch at a time, day by day. At the end of the day â€“ if
you live long enough â€“ most people get what they deserve.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Acquire worldly wisdom and adjust your behavior accordingly. If your new
behavior gives you a little temporary unpopularity with your peer group... then
to hell with them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Read a Lot&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;In my whole life, I have known no wise people (over a broad subject matter
area) who didn&amp;#39;t read all the time - none, zero. You&amp;#39;d be amazed at how much
Warren reads - and at how much I read.&lt;/p&gt;
&lt;p&gt;If it is wisdom youâ€™re after, youâ€™re going to spend a lot of time on your ass
reading.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;We read a lot. I donâ€™t know anyone whoâ€™s wise who doesnâ€™t read a lot. But
thatâ€™s not enough: You have a to have a temperament to grab ideas and do
sensible things. Most people donâ€™t grab the right ideas or donâ€™t know what to
do with them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;I insist on a lot of time being spent, almost every day, to just sit and
think. That is very uncommon in American business. I read and think. So I do
more reading and thinking, and make less impulse decisions than most people in
business. I do it because I like this kind of life.&lt;br&gt;â€” Warren Buffett&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Learn The Easily Learned Principles&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;I believe in the discipline of mastering the best that other people have ever
figured out. I donâ€™t believe in just sitting down and trying to dream it all up
yourself. Nobodyâ€™s that smart.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;It never ceases to amaze me to see how much territory can be grasped if one
merely masters and consistently uses all the obvious and easily learned
principles.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Take a simple idea and take it seriously.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;I am a biography nut myself. And I think when you&amp;#39;re trying to teach the great
concepts that work, it helps to tie them into the lives and personalities of
the people who developed them. I think you learn economics better if you make
Adam Smith your friend. That sounds funny, making friends among the eminent
dead, but if you go through life making friends with the eminent dead who had
the right ideas, I think it will work better for you in life and work better
in education. It&amp;#39;s way better than just giving the basic concepts.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Idea Destruction&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;We all are learning, modifying, or destroying ideas all the time. Rapid
destruction of your ideas when the time is right is one of the most valuable
qualities you can acquire. You must force yourself to consider arguments on
the other side.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;The ability to destroy your ideas rapidly instead of slowly when the occasion
is right is one of the most valuable things. You have to work hard on it. Ask
yourself what are the arguments on the other side. Itâ€™s bad to have an opinion
youâ€™re proud of if you canâ€™t state the arguments for the other side better
than your opponents. This is a great mental discipline.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Any year that passes in which you donâ€™t destroy one of your best loved ideas
is a wasted year.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;When a better tool (idea or approach) comes along, what could be better than
to swap it for your old, less useful tool?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Every Experience is a Chance To Learn&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Life will have terrible blows in it, horrible blows, unfair blows. It doesn&amp;#39;t
matter. And some people recover and others don&amp;#39;t. And there I think the
attitude of Epictetus is the best. He thought that every missed chance in life
was an opportunity to behave well. Every missed chance in life was an
opportunity to learn something and that your duty was not to be submerged in
self-pity. But instead to utilize the terrible blow in constructive fashion.
That is a very good idea.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;It is really useful to be reminded of your errors. I think Warren Buffett and
I are pretty good at that. We do kind of mentally rub our own noses in our own
mistakes. And that is a very good mental habit.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Focus Over a Long Timespan&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Concentrating hard on something thatâ€™s important, I canâ€™t succeed at all
without doing it. I did not succeed in life by intelligence. I succeeded
because I have a long attention span.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Simplicity is the end result of long, hard work, not the starting point.&lt;br&gt;â€” Frederick Maitland&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;You need to have a passionate interest in why things are happening. That cast
of mind, kept over long periods, gradually improves your ability to focus on
reality. If you dont have the cast of mind, you&amp;#39;re destined for failure even
if you have a high I.Q.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Learn to Fluency&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;The deep structure of the human mind requires that the way to full-scope
competency of virtually any kind is learn it all to fluency, like it or not.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;If a skill is raised to fluency, instead of merely being crammed in briefly to
enable one to pass some test, then the skill (1) will be lost more slowly and
(2) will come back faster when refreshed with new learning. These are not
minor advantages, and a wise man engaged in learning some important skill will
not stop until he is really fluent in it.&lt;/p&gt;
&lt;/blockquote&gt;
      </description>
      <pubDate>2017-10-30T23:00:00.000Z</pubDate>
      <link>http://norswap.com/munger-learning</link>
      <guid isPermaLink="true">http://norswap.com/munger-learning</guid>
    </item>
    <item>
      <title>Charlie Munger: How to Think and Make Decisions</title>
      <description>
&lt;p&gt;This is post 2/4 in &lt;a href=&quot;/munger&quot;&gt;a series about Charlie Munger&amp;#39;s wisdom&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Don&amp;#39;t Try to be Smart, Avoid Idiocy&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;It is remarkable how much long-term advantage people like us have gotten by
trying to be consistently not stupid, instead of trying to be very
intelligent. There must be some wisdom in the folk saying &amp;quot;Itâ€™s the strong
swimmers who drown.&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;We try to profit from always remembering the obvious than from grasping the
esoteric.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Other people are trying to be smart, all Iâ€™m trying to be is non-idiotic. Iâ€™ve
found thatâ€™s all you have to do to get ahead in life, be non-idiotic and live
a long time. Itâ€™s harder to be non-idiotic than most people think.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Organized common (or uncommon) sense is an enormously powerful tool. There are
huge dangers with computers. People calculate too much and think too little.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Use of the scientific method and effective checklists minimizes errors and
omissions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Don&amp;#39;t overlook the obvious by drowning in minutiae.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Restrict Yourself to your Circle of Competence&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Acknowledging what you donâ€™t know is the dawning of wisdom.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;If we have a strength, it is in recognizing when we are operating well within
our circle of competence and when we are approaching the perimeter.&lt;br&gt;â€” Warren Buffett&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Only in fairy tales are emperors told they are naked.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;If you try to predict the future of everything, you attempt too much. Youâ€™re
going to fail through lack of specialisation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Mimicking the herd, invites regression to the mean.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Above all, never fool yourself, and remember that you are the easiest person
to fool.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;You have to figure out what your own aptitudes are, If you play games where
other people have the aptitudes and you don&amp;#39;t, you&amp;#39;re going to lose.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Invert, Always Invert&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Invert, always invert: Turn a situation or problem upside down. Look at it
backward. What happens if all our plans go wrong? Where donâ€™t we want to go,
and how do you get there? Instead of looking for success, make a list of how
to fail instead. Tell me where Iâ€™m going to die, that is, so I donâ€™t go there.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;I was greatly helped in my quest by two turns of mind. First, I had long
looked for insight by inversion in the intense manner counseled by the great
algebraist, Jacobi: &amp;quot;Invert, always invert.&amp;quot; I sought good judgment mostly by
collecting instances of bad judgment, then pondering ways to avoid such
outcomes. Second, I became so avid a collector of instances of bad judgement
that I paid no attention to boundaries between professional territories.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Model Thinking&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Just as multiple factors shape almost every system, multiple models from a
variety of disciplines, applied with fluency, are needed to understand that
system.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;The most important thing to keep in mind is the idea that especially big forces
often come out of these one hundred models. When several models combine, you get
lollapalooza effects; this is when two, three, or four forces are all operating
in the same direction. And, frequently, you dont get simple addition. It&amp;#39;s often
like a critical mass in physics where you get a nuclear explosion if you get to
a certain point of mass - and you dont ger anything much worth seeing if you
don&amp;#39;t reach the mass. Sometimes the forces just add like ordinary quantities and
sometimes they combine on a breakpoint or critical-mass basis.&lt;/p&gt;
&lt;p&gt;More commonly, the forces coming out of these one hundred models are
conflicting to some extent. And you get huge, miserable tradeoffs. But if you
can&amp;#39;t think in terms of tradeoffs and recognize tradeoffs in what you&amp;#39;re
dealing with, you&amp;#39;re a horse&amp;#39;s patoot. You clearly are a danger to the rest of
the people when serious thinking is being done. You have to recognize how
these things combine.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;I&amp;#39;ve long believed that a certain system - which almost any intelligent person
can learn - works way better than the systems that most people use. What you
need is a latticework of mental models in your head. And, with that system,
things gradually get to fit together in a way that enhances cognition.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Especially important examples of these models include the redundancy/backup
system model from engineering, the compound interest model from mathematics,
the breakpoint / tipping-moment / autocatalysis models from physics and
chemistry, the modern Darwinian synthesis model from biology, and cognitive
misjudgment models from psychology.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Personally, I&amp;#39;ve gotten so that I now use a kind of two-track analysis. First,
what are the factors that really govern the interests invoked, rationally
considered? And second, what are the subconscious influences where the brain
at a subconscious level is automatically forming conclusions in various ways -
which, by and large, are useful - but which often malfunction?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;How can smart people so often be wrong? They don&amp;#39;t do what I&amp;#39;m telling you to
do: use a checklist to be sure you get all the main models and use them
together in a multimodular way.&lt;/p&gt;
&lt;/blockquote&gt;
      </description>
      <pubDate>2017-10-15T22:00:00.000Z</pubDate>
      <link>http://norswap.com/munger-thinking</link>
      <guid isPermaLink="true">http://norswap.com/munger-thinking</guid>
    </item>
    <item>
      <title>Charlie Munger&#39;s Big Lesson: Prepare for Opportunity</title>
      <description>
&lt;p&gt;This is the first post in &lt;a href=&quot;/munger&quot;&gt;a serie about Charlie Munger&amp;#39;s wisdom&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;When proper circumstances present themselves, act with decisiveness and
conviction.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;You can get very remarkable investment results if you think more like a
winning pari-mutuel player. Just think of it as a heavy odds against game full
of craziness with an occasional mispriced something or other. And you&amp;#39;re
probably not going to be smart enough to find thousands in a lifetime. And
when you get a few, you really load up. It&amp;#39;s just that simple.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;When Warren lectures at business schools, he says, &amp;quot;I could improve your
ultimate financial welfare by giving you a ticket with only 20 slots in it so
that you had 20 punches â€” representing all the investments that you got to
make in a lifetime. And once you&amp;#39;d punched through the card, you couldn&amp;#39;t make
any more investments at all.&amp;quot;&lt;/p&gt;
&lt;p&gt;He says, &amp;quot;Under those rules, you&amp;#39;d really think carefully about what you did
and you&amp;#39;d be forced to load up on what you&amp;#39;d really thought about. So you&amp;#39;d do
so much better.&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Experience tends to confirm a long-held notion that being prepared, on a few
occasions in a lifetime, to act promptly in scale, in doing some simple and
logical thing, will often dramatically improve the financial results of that
lifetime. A few major opportunities, clearly recognizable as such, will
usually come to one who continuously searches and waits, with a curious mind
that loves diagnosis involving multiple variables. And then all that is
required is a willingness to bet heavily when the odds are extremely
favorable, using resources available as a result of prudence and patience in
the past.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Our game is to recognize a big idea when it comes along, when one doesnâ€™t come
along very often. Opportunity comes to the prepared mind.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Youâ€™re looking for a mispriced gamble. Thatâ€™s what investing is. And you have
to know enough to know whether the gamble is mispriced. That&amp;#39;s value
investing. [...] You should remember that good ideas are rare â€” when the odds
are greatly in your favor, bet heavily.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;What is the most important personal quality an investor can have?&lt;/p&gt;
&lt;p&gt;Patience... followed by pretty aggressive conduct. It is given to human beings
who work hard at itâ€”who look and sift the world for a mispriced bet â€” that
they can occasionally find one. And the wise ones bet heavily when the world
offers them that opportunity. They bet big when they have the odds. And the
rest of the time, they donâ€™t. Itâ€™s just that simple.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;It takes character to sit there with all that cash and do nothing. I didnâ€™t
get to where I am by going after mediocre opportunities.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Ted Williams is the only baseball player who had a .400 single-season hitting
record in the last seven decades. He divided the strike zone into
seventy-seven cells, each representing the size of a baseball. He would insist
on swinging only at balls in his &amp;#39;best&amp;#39; cells, even at the risk of striking
out, because reaching for the &amp;#39;worst&amp;#39; spots would seriously reduce his chances
of success.&lt;/p&gt;
&lt;p&gt;As a securities investor, you can watch all sorts of business propositions in
the form of security prices thrown at you all the time. For the most part, you
dont have to do a thing other than be amused. Once in a while, you will find a
fat pitch that is slow, straight, and right in the middle of your sweet spot.
Then you swing hard. This way, no matter what natural ability you start with,
you will substantially increase your hitting average.&lt;/p&gt;
&lt;p&gt;One common problem for investors is that they tend to swing too often.
However, the opposite problem is equally harmful to long-term results: you
discover a &amp;#39;fat pitch&amp;#39; but are unable to swing with the full weight of your
capital.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;We just look for no-brainer decisions. As Buffett and I say over and over
again, we don&amp;#39;t leap seven-foot fences. Instead, we look for one-foot fences
with big rewards on the other side. So we&amp;#39;ve succeeded by making the world
easy for ourselves, not by solving hard problems.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;You have to be aversive to the standard stupidities... you donâ€™t have to be
smart. We look for easy decisions, but we find it very hard to find &amp;quot;easy
decisions&amp;quot;. Really, Iâ€™m just out there trying to be non-idiotic.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Our job is to find a few intelligent things to do, not to keep up with every
damn thing in the world.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;When proper circumstances present themselves, act with decisiveness and
conviction.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Be fearful when others are greedy, and greedy when others are fearful&lt;/li&gt;
&lt;li&gt;Opportunity doesn&amp;#39;t come often, so seize it when it does&lt;/li&gt;
&lt;li&gt;Opportunity meeting the prepared mind: that&amp;#39;s the game&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;upon proper circumstances, act with decisiveness and conviction&lt;/li&gt;
&lt;li&gt;search/wait for mispriced gambles, where the odds are in your favor&lt;/li&gt;
&lt;li&gt;when one turns out, bet heavily&lt;/li&gt;
&lt;li&gt;or: patience, followed by an agressive conduct&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Addendum&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The above seems to imply big make-or-break decisions. In reality, while the bets
should be few and far between, there should be enough of them to balance the
potential losses.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You don&amp;#39;t win by predicting the future; you win by getting the odds right. You
can be right about the future and still not make any money. At the racetrack,
for example, the favorite horse may be the one most likely to win, but since
everyone wants to bet on the favorite, how likely is it that betting on the
favorite will make you money? The horse to bet on is the one more likely to
win than most people expect. That&amp;#39;s the one that gives you the best odds.
That&amp;#39;s the bet that pays off over time.&lt;/p&gt;
&lt;/blockquote&gt;
      </description>
      <pubDate>2017-10-09T22:00:00.000Z</pubDate>
      <link>http://norswap.com/munger-opportunity</link>
      <guid isPermaLink="true">http://norswap.com/munger-opportunity</guid>
    </item>
    <item>
      <title>The Wisdom of Charlie Munger</title>
      <description>
&lt;p&gt;Over the past two months, I&amp;#39;ve read through the
book &lt;a href=&quot;https://www.goodreads.com/book/show/944652.Poor_Charlie_s_Almanack&quot;&gt;Poor Charlie&amp;#39;s Almanack&lt;/a&gt; and a few related source, which
expound the wisdom of &lt;a href=&quot;https://en.wikipedia.org/wiki/Charlie_Munger&quot;&gt;Charlie Munger&lt;/a&gt; â€” better known as Warren Buffett&amp;#39;s
business partner.&lt;/p&gt;
&lt;p&gt;The books serves a hearty dose of down-to-earth wisdom. It&amp;#39;s a far cry from the
tone of many business books. On the other hand, most of it â€” while most sensible
â€” isn&amp;#39;t particularly earth-shattering. But that&amp;#39;s sort of the point. Charlie
prides himself of trying to be non-idiotic rather than smart.&lt;/p&gt;
&lt;p&gt;Nevertheless, Charlies does have unconvential ideas. Try to be non-idiotic
rather than smart; be prepared for big opportunities through voracious learning
â€” meaning that most of your time should be spent waiting and learning instead of
pursuing some goal. Other ideas find echo elsewhere but are given an excellent
succint treatment, notably improving your thinking by using models from
different disciplines, and in particular knowledge of psychological biases.&lt;/p&gt;
&lt;p&gt;I&amp;#39;ll share my notes over the course of four blog posts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/munger-opportunity&quot;&gt;Prepare for Opportunity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/munger-thinking&quot;&gt;How to Think and Make Decisions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/munger-learning&quot;&gt;On Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/munger-psychology&quot;&gt;Psychological Tendencies List&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I hope you enjoy these summaries as much as I enjoyed the book!&lt;/p&gt;
      </description>
      <pubDate>2017-10-09T22:00:00.000Z</pubDate>
      <link>http://norswap.com/munger</link>
      <guid isPermaLink="true">http://norswap.com/munger</guid>
    </item>
    <item>
      <title>Muse - Black Holes &amp; Butterflies (Fan Album)</title>
      <description>
&lt;p&gt;And now, for something completely different.&lt;/p&gt;
&lt;p&gt;I have an ongoing project of going through my considerable music library to
isolate, rank and categorize its best tracks.&lt;/p&gt;
&lt;p&gt;When the band Muse came under the microscope, I was very tempted to make a
compilation of my favourite tracks; and so I did just that.&lt;/p&gt;
&lt;p&gt;Muse occupies a special place in my musical pantheon. I realized a few years ago
that I liked pretty much everything that they put out, which for me happens very
rarely. I&amp;#39;m more inclined to listen to a hodge podge of individual tracks rather
than to complete albums.&lt;/p&gt;
&lt;p&gt;I wanted this compilation to feel like a real album. Therefore it had to have
some kind of thematical consistency, some sense of continuity, and a pleasant
pacing. Oh, and it had to fit on a 80 minutes CD! I&amp;#39;m pleased with the result,
and I hope you can enjoy it too.&lt;/p&gt;
&lt;p&gt;Without further ado, &lt;a href=&quot;https://www.youtube.com/playlist?list=PLiZkNl164CsD_jMZcBIMLrAh1V0Oakq6L&quot;&gt;the album&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/posts/muse-black-holes-butterflies/cover2.jpg&quot; alt=&quot;Muse - Black Holes &amp;amp; Butterflies Album Cover&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;hr&gt;&lt;/p&gt;
&lt;h3 id=&quot;-listen-on-youtube-listen-&quot;&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLiZkNl164CsD_jMZcBIMLrAh1V0Oakq6L&quot;&gt;Listen on YouTube&lt;/a&gt;&lt;/h3&gt;
&lt;hr&gt;

&lt;pre&gt;&lt;code&gt;01. New Born
02. Starlight
03. MK Ultra
04. Unnatural Selection
05. Supremacy
06. Hysteria
07. Plug In Baby
08. Supermassive Black Hole
09. Map Of The Problematique
10. Butterflies &amp;amp; Hurricanes
11. Knights Of Cydonia
12. Thoughts Of A Dying Atheist
13. Time Is Running Out
14. Feeling Good
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;

&lt;p&gt;Now for some trivia about the making of the pie...&lt;/p&gt;
&lt;h3 id=&quot;title&quot;&gt;Title&lt;/h3&gt;
&lt;p&gt;I gave the album the title &lt;em&gt;Black Holes &amp;amp; Butterflies&lt;/em&gt;, a mash up of the
track title &lt;em&gt;Butterflies &amp;amp; Hurricanes&lt;/em&gt; and the album title &lt;em&gt;Black Holes &amp;amp;
Revelations&lt;/em&gt; (a line from the song &lt;em&gt;Starlight&lt;/em&gt;). The title can be interpreted in
many different ways, but doesn&amp;#39;t really have any fixed meaning.&lt;/p&gt;
&lt;p&gt;At some point, I hesitated to call the album &lt;em&gt;Uprising&lt;/em&gt;, as the story told by
the songs can be interpreted as a journey of dissension. However, Muse already
has track called &lt;em&gt;Uprising&lt;/em&gt;, which doesn&amp;#39;t feature on this album. And in the
end, the poetry of &lt;em&gt;Black Holes &amp;amp; Butterflies&lt;/em&gt; quite rightfully won out.&lt;/p&gt;
&lt;h3 id=&quot;track-origin&quot;&gt;Track Origin&lt;/h3&gt;
&lt;p&gt;Let&amp;#39;s look at the tracks&amp;#39; original albums:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Black Holes &amp;amp; Revelations   x4 (02, 08, 09, 11)
Absolution                  x4 (06, 10, 12, 13)
Origin of Symmetry          x3 (01, 07, 14)
The Resistance              x2 (03, 04)
The 2nd Law                 x1 (05)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If I had to make a ranking of my favourite Muse albums:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Black Holes and Revelations (2006)&lt;/li&gt;
&lt;li&gt;Absolution (2003)&lt;/li&gt;
&lt;li&gt;Origin of Symmetry (2001)&lt;/li&gt;
&lt;li&gt;The Resistance (2009)&lt;/li&gt;
&lt;li&gt;Showbiz (1999)&lt;/li&gt;
&lt;li&gt;The 2nd Law (2012)&lt;/li&gt;
&lt;li&gt;Drones (2015)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This is more or less consistent with the songs&amp;#39; origin, with &lt;em&gt;Drones&lt;/em&gt; not
featuring at all. Muse&amp;#39;s debut album &lt;em&gt;Showbiz&lt;/em&gt; doesn&amp;#39;t feature either.
Thematically and musically, I feel it is rather distinct to the other albums:
it&amp;#39;s a bit as if it happened before Muse found it&amp;#39;s own grandiose
conspiracy-fueled self.&lt;/p&gt;
&lt;h3 id=&quot;discarded-tracks&quot;&gt;Discarded Tracks&lt;/h3&gt;
&lt;p&gt;Now for some tracks I really like but that didn&amp;#39;t make the cut:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bliss (Origin of Symmetry)&lt;/li&gt;
&lt;li&gt;Sing for Absolution (Absolution)&lt;/li&gt;
&lt;li&gt;Apocalypse Please (Absolution)&lt;/li&gt;
&lt;li&gt;Stockholm Syndrome (Absolution)&lt;/li&gt;
&lt;li&gt;Ruled By Secrecy (Absolution)&lt;/li&gt;
&lt;li&gt;United States of Eurasia (The Resistance)&lt;/li&gt;
&lt;li&gt;Follow Me (The 2nd Law)&lt;/li&gt;
&lt;li&gt;Panic Station (The 2nd Law)&lt;/li&gt;
&lt;li&gt;Dead Inside (Drones)&lt;/li&gt;
&lt;li&gt;Mercy (Drones)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For most of them, the reason is pretty simple: they didn&amp;#39;t fit musically,
thematically, or both.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Sing for Absolution&lt;/em&gt; is probably the track I would have liked to include most.
While it&amp;#39;s super powerful, the album isn&amp;#39;t really about regrets, but more about
strife. It always looks forward, not backward.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Apocalypse Please&lt;/em&gt; could have been included, but it&amp;#39;s an ending track, and the
ending is already strong, between &lt;em&gt;Thoughts of a Dying Atheist&lt;/em&gt; and &lt;em&gt;Time is
Running Out&lt;/em&gt;. I was also keen to have &lt;em&gt;Feeling Good&lt;/em&gt; as final track, to end on
an ethereal fresh note. Nevertheless, this would definitely have been included
if not for the time restriction.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Ruled by Secrecy&lt;/em&gt; would have been a strong contender if I needed a lull
somewhere in the album (which would have made a lot of sense if it had been
longer). Finally, &lt;em&gt;Stockholm Syndrome&lt;/em&gt; would have blended in just fine, but it
was just a weaker candidate all around.&lt;/p&gt;
&lt;h3 id=&quot;cover-art&quot;&gt;Cover Art&lt;/h3&gt;
&lt;p&gt;I actually made two versions of the cover art: the one you can see on the
youtube videos and just below, and the one towards the top of the article.&lt;/p&gt;
&lt;p&gt;The one below I found by searching for pictures of black holes. I used it to
upload the videos. But then I found the second picture, which depicts the
&lt;a href=&quot;https://en.wikipedia.org/wiki/NGC_6302&quot;&gt;butterfly nebula&lt;/a&gt;. I couldn&amp;#39;t resist the fact that it linked both compoments of
the album title, and it looks pretty neat too.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/posts/muse-black-holes-butterflies/cover1.jpg&quot; alt=&quot;Muse - Black Holes &amp;amp; Butterflies Alt Album Cover&quot;&gt;&lt;/p&gt;
      </description>
      <pubDate>2017-09-20T22:00:00.000Z</pubDate>
      <link>http://norswap.com/muse-black-holes-butterflies</link>
      <guid isPermaLink="true">http://norswap.com/muse-black-holes-butterflies</guid>
    </item>
    <item>
      <title>Java Reflection, 1000x Faster</title>
      <description>
&lt;p&gt;A few weeks ago I got to make some of my code 1000 times faster, without
changing the underlying complexity! As the title implies, this involved making
Java reflection calls faster.&lt;/p&gt;
&lt;p&gt;Let me explain my use case as well, because it&amp;#39;s relatively general, and a good
example of why one would use reflection in the first place.&lt;/p&gt;
&lt;p&gt;I had an interface (representing a tree node) and a slew of classes (100+)
implementing this interface. The trick is that the tree is heterogeneous, each
node kind can have different numbers of children, or store them differently.&lt;/p&gt;
&lt;p&gt;I needed some code te be able to walk over such a composite tree. The simple
approach is to simply add a &lt;code&gt;children()&lt;/code&gt; method to the interface and implement
it in every kind of node. Very tedious, and boilerplaty as hell.&lt;/p&gt;
&lt;p&gt;Instead, I noted that all children were either direct fields, or aggregated in
fields holding a collection of nodes. I could write a small piece of code that,
with reflection, would work for every node kind!&lt;/p&gt;
&lt;p&gt;I&amp;#39;ve put up &lt;a href=&quot;https://gist.github.com/norswap/09846a75092f49a7f1cbf1f00f85e9b6&quot;&gt;a much simplified version of the code on Github&lt;/a&gt;. I will link
the relevant parts as we go.&lt;/p&gt;
&lt;h3 id=&quot;initial-code&quot;&gt;Initial Code&lt;/h3&gt;
&lt;p&gt;Here is the version I came up with: &lt;a href=&quot;https://gist.github.com/norswap/09846a75092f49a7f1cbf1f00f85e9b6#file-walkerdemoslowest-java&quot;&gt;&lt;code&gt;WalkerDemoSlowest.java&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It&amp;#39;s fairly straightforward: get the methods of the node&amp;#39;s class, filter out
those that are not getters, then consider only that return either a node or a
collection of node. For those, invoke the method, and recursively invoke &lt;code&gt;walk&lt;/code&gt;
on the children.&lt;/p&gt;
&lt;p&gt;Will anyone be surprised if I tell them it&amp;#39;s very slow?&lt;/p&gt;
&lt;h3 id=&quot;caching&quot;&gt;Caching&lt;/h3&gt;
&lt;p&gt;There is a simple tweak we can apply that makes it much faster however: we can
cache the methods lookup.&lt;/p&gt;
&lt;p&gt;Here is the caching version: &lt;a href=&quot;https://gist.github.com/norswap/09846a75092f49a7f1cbf1f00f85e9b6#file-walkerdemoslow-java&quot;&gt;&lt;code&gt;WalkerDemoSlow.java&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It&amp;#39;s really the same except that for each class implementing &lt;code&gt;Node&lt;/code&gt;, we create a
&lt;code&gt;ClassData&lt;/code&gt; object that caches all the relevant getters, so we only have to look
them up once. This produces a satisfying ~10x speedup.&lt;/p&gt;
&lt;h3 id=&quot;lambdametafactory-magic&quot;&gt;LambdaMetafactory Magic&lt;/h3&gt;
&lt;p&gt;Unfortunately, this was still way too slow. So I took to Google, which turned
out this &lt;a href=&quot;https://stackoverflow.com/questions/19557829/faster-alternatives-to-javas-reflection&quot;&gt;helpful StackOverflow question&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The accepted answers proposes the use of &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/invoke/LambdaMetafactory.html&quot;&gt;&lt;code&gt;LambdaMetafactory&lt;/code&gt;&lt;/a&gt;, a standard
library class that supports lambda invocations in the language.&lt;/p&gt;
&lt;p&gt;The details are somewhat hazy to me, but it seems that by using these facilities
we can &amp;quot;summon the compiler&amp;quot; on our code and optimize the reflective access into
a native invocation. That&amp;#39;s the working hypothesis anyhow.&lt;/p&gt;
&lt;p&gt;Here is the code: &lt;a href=&quot;https://gist.github.com/norswap/09846a75092f49a7f1cbf1f00f85e9b6#file-walkerdemofast-java&quot;&gt;&lt;code&gt;WalkerDemoFast.java&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now, in my code, this worked wonders, unlocking another 100x speedup. While
writing this article however, I wanted to demonstrate the effect with some code
snippet, but didn&amp;#39;t manage to. I tried to give the interface three sub-classes,
and to give them bogus methods to be filtered out, to no avail. The second and
third version of the code would run at about the same speed.&lt;/p&gt;
&lt;p&gt;I re-checked the original code -- all seemed good. In my original code, the
trees are Abstract Syntax Trees (AST) derived by parsing some source files.
After fooling around some more, I noticed different results if I limited the
input to the first 14 source files.&lt;/p&gt;
&lt;p&gt;These files are relatively short (few 10s of lines) and syntactically simple.
With only those, the second and third version would run at about the same speed.
But add in the 15th file (a few 100s of lines) and the second version would take
a whopping 36 seconds while the third version would still complete in 0.2
seconds, a ~700x difference.&lt;/p&gt;
&lt;p&gt;My (somewhat shaky) hypothesis is that if the scenario is simple enough, the
optimizer notices what you are doing and optmizes away. In more complex cases,
it exhausts its optimization budget and falls back on the unoptimized version
and its abysmal performance. But the optimizer is devious enough that crafting a
toy example that would defeat it seems to be quite the feat.&lt;/p&gt;
&lt;h3 id=&quot;lambdametafactory-possibilities&quot;&gt;LambdaMetafactory Possibilities&lt;/h3&gt;
&lt;p&gt;I&amp;#39;m somewhat intrigued about what is possible with &lt;code&gt;LambdaMetafactory&lt;/code&gt;. In my
use case, it works wonders because reflection calls are much more expensive than
a simple cache lookup. But could it be used to optmize regular code in
pathological cases as well? It seems unlikely to help with &lt;a href=&quot;http://insightfullogic.com/2014/May/12/fast-and-megamorphic-what-influences-method-invoca/&quot;&gt;megamorphic call
sites&lt;/a&gt;, because the compiled method handle has to be retrieved somehow, and the
cost of that lookup would dwarf the gains.&lt;/p&gt;
&lt;p&gt;But what about piecing together code at run time, and optimizing it? In
particular, one could supply a data structure and an interpreter for that data
structure, and &amp;quot;compile&amp;quot; them together using &lt;code&gt;LambdaMetafactory&lt;/code&gt;. Would it be
smart enough to partially evaluate the code given the data structure, and so
turn your interpreter into the equivalent &amp;quot;plain&amp;quot; code?&lt;/p&gt;
&lt;p&gt;Incidentally, that is exactly the approach taken by the &lt;a href=&quot;https://github.com/graalvm/graal&quot;&gt;Truffle framework&lt;/a&gt;,
which runs on top of the Graal VM, so there is definitely something to the idea.
Maybe something precludes it with the current JVM, hence requiring the GraalVM
modification?&lt;/p&gt;
&lt;p&gt;In any case, there is something to be said in favor of making these capabilities
available as a library, which could be used in &amp;quot;regular programs&amp;quot; (i.e. not
compilers). Writing a simple interpreter is often the easiest approach to some
problems.&lt;/p&gt;
      </description>
      <pubDate>2017-09-12T22:00:00.000Z</pubDate>
      <link>http://norswap.com/fast-java-reflection</link>
      <guid isPermaLink="true">http://norswap.com/fast-java-reflection</guid>
    </item>
    <item>
      <title>New Publication</title>
      <description>
&lt;p&gt;New publication: &lt;strong&gt;Red Shift: Procedural Shift-Reduce Parsing&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To appear at &lt;a href=&quot;http://conf.researchr.org/track/sle-2017/sle-2017-papers&quot;&gt;SLE 2017&lt;/a&gt;.&lt;br&gt;&lt;a href=&quot;/pubs/sle2017.pdf&quot;&gt;Pre-print here&lt;/a&gt;.&lt;/p&gt;
      </description>
      <pubDate>2017-09-10T22:00:00.000Z</pubDate>
      <link>http://norswap.com/pub-red-shift</link>
      <guid isPermaLink="true">http://norswap.com/pub-red-shift</guid>
    </item>
    <item>
      <title>Ruby&#39;s `super` Keyword Weirdness</title>
      <description>
&lt;p&gt;The other day, my colleague BenoÃ®t was faced with a strange problem in his Ruby
code. Here is a greatly simplified version of the code that caused the problem:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-Ruby&quot;&gt;class A
    def foo
        p :A
    end
end

class B &amp;lt; A
end

module F
    def foo
        super
        p :F
    end
end

method = F.instance_method(:foo)
B.send(:define_method, :foo, lambda { |*args|
    method.bind(self).call(*args)
})

B.new.foo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What do you think the last line does?&lt;/p&gt;
&lt;p&gt;It seems like it should print &lt;code&gt;:F&lt;/code&gt;, then &lt;code&gt;:A&lt;/code&gt;. &lt;code&gt;B#foo&lt;/code&gt; becomes bounds to a
lambda, inside which we call &lt;code&gt;F#foo&lt;/code&gt; with &lt;code&gt;self&lt;/code&gt; bound to &lt;code&gt;self&lt;/code&gt; from the
lambda.&lt;/p&gt;
&lt;p&gt;Since the lambda is then bound to &lt;code&gt;B#foo&lt;/code&gt;, it would stand to reason to think
that the &lt;code&gt;super&lt;/code&gt; from &lt;code&gt;F#foo&lt;/code&gt; would invoke &lt;code&gt;A#foo&lt;/code&gt;. But here&amp;#39;s the rub: it
invokes &lt;code&gt;B#foo&lt;/code&gt; recursively.&lt;/p&gt;
&lt;p&gt;And so it turns out that the last line fails with &lt;code&gt;SystemStackError: stack level
too deep&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Of course, the code is actually needlessly complicated. You could do this:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-ruby&quot;&gt;method = F.instance_method(:foo)
B.send(:define_method, :foo, method)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And â€” plot twist â€” this actually works fine.&lt;/p&gt;
&lt;p&gt;This also works:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-ruby&quot;&gt;B.send(:define_method, :foo, lambda { |*args| super(*args); p :F })
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That&amp;#39;s interesting and wasn&amp;#39;t covered in
the &lt;a href=&quot;/ruby-dark-corners&quot;&gt;Ruby&amp;#39;s Dark Corners&lt;/a&gt; series can explain it. And of
course, &lt;a href=&quot;/ruby-specification-problem&quot;&gt;Ruby doesn&amp;#39;t have a specification&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I have an hypothesis: when a &amp;quot;callable&amp;quot; (unbound method, lambda, ...) is
directly bound to a method, then any &lt;code&gt;super&lt;/code&gt; reference in the callable are
correctly bound to that method. However, if &lt;code&gt;super&lt;/code&gt; is called through at least
one level of indirection (in our example above, we have a lambda that calls a
method), then &lt;code&gt;super&lt;/code&gt; simply calls the regular method (that is the &amp;quot;lowest&amp;quot; one
in the class hierarchy), no matter what method it was reached from.&lt;/p&gt;
&lt;p&gt;(This was tested with Ruby 2.3 on Windows and Ruby 2.4 on Mac OS)&lt;/p&gt;
      </description>
      <pubDate>2017-09-03T22:00:00.000Z</pubDate>
      <link>http://norswap.com/ruby-super-keyword</link>
      <guid isPermaLink="true">http://norswap.com/ruby-super-keyword</guid>
    </item>
  </channel>
</rss>
