<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>norswap</title>
    <description></description>      
    <link>http://norswap.com/</link>
    <atom:link href="http://norswap.com/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Chosen Tidbits 5</title>
      <description>
&lt;p&gt;Previously: &lt;a href=&quot;/chosen-tidbits-1/&quot;&gt;One&lt;/a&gt; / &lt;a href=&quot;/chosen-tidbits-2/&quot;&gt;Two&lt;/a&gt; / &lt;a href=&quot;/chosen-tidbits-3/&quot;&gt;Three&lt;/a&gt; / &lt;a href=&quot;/chosen-tidbits-4/&quot;&gt;Four&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/visakanv/status/1189756911677104128&quot;&gt;https://twitter.com/visakanv/status/1189756911677104128&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Mediocre magic beats optimal greatness.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Mediocre peasant with shabbily constructed crossbow pwned legendary
warrior-knight with one dumb shot.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://slatestarcodex.com/2014/11/21/the-categories-were-made-for-man-not-man-for-the-categories/&quot;&gt;The Categories Were Made For Man, Not Man For The Categories&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This cannot be summarized, but it is a joy to read, and comes with an important
lesson for your arguments and debates.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;http://tynan.com/regret&quot;&gt;http://tynan.com/regret&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To minimize regret, act without hesitation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/patio11/status/1195563505983746055&quot;&gt;https://twitter.com/patio11/status/1195563505983746055&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It is a high status and uncontroversial belief to say that writing makes you
better at substantially everything white collar people do.&lt;/p&gt;
&lt;p&gt;It is more controversial to believe being able to code makes you more effective
at everything white collar people do.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;“Exploit until the market corrects” is one of my preferred ways to deal with
sustained disagreements. I am told this is intellectually bankrupt. I therefore
commit to exploiting it until the market corrects.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/visakanv/status/1191665750391394304?s=09&quot;&gt;https://twitter.com/visakanv/status/1191665750391394304?s=09&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;men want sex but don&amp;#39;t know how to be sexy&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;the internet has made it so easy to know what women find sexy&lt;/p&gt;
&lt;p&gt;which suggests to me that many (most?) dudes are either too stupid or lazy (or
scared?) to do what it takes to get what they want&lt;/p&gt;
&lt;p&gt;and also, probably, that many (most?) don&amp;#39;t really want what they say they want&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;things I’ve known women to find disarmingly sexy:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;a man cooking, doing DIY, working on his car/guitar, working with his hands&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;being skilled+charming with a child or elder person in a strong, masculine way&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;smiling and laughing when she expected him to get upset/angry&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Things that are unsexy:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nitpicking&lt;/li&gt;
&lt;li&gt;“debating”&lt;/li&gt;
&lt;li&gt;condescension&lt;/li&gt;
&lt;li&gt;contempt&lt;/li&gt;
&lt;li&gt;“you can have this precious penis if you pass these following tests and jump through the following hoops”&lt;/li&gt;
&lt;li&gt;neediness&lt;/li&gt;
&lt;li&gt;solipsism&lt;/li&gt;
&lt;li&gt;insecurity&lt;/li&gt;
&lt;li&gt;lack of imagination&lt;/li&gt;
&lt;li&gt;inability to read subtext&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://www.calnewport.com/blog/2011/11/11/if-youre-busy-youre-doing-something-wrong-the-surprisingly-relaxed-lives-of-elite-achievers/&quot;&gt;If You’re Busy, You’re Doing Something Wrong: The Surprisingly Relaxed Lives of Elite Achievers&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The time diaries revealed that both groups (elite and average players) spent, on
average, the same number of hours on music per week (around 50).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The elite players were spending almost three times more hours than the average
players on deliberate practice — the uncomfortable, methodical work of
stretching your ability.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The average players, they discovered, spread their work throughout the day. The
elite players, by contrast, consolidated their work into two well-defined
periods (two peaks: in the morning and in the afternoon).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The elite players slept an hour more per night than the average players. The
elite players were significantly more relaxed than the average players.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hard work (delibrate practice) vs hard to do work (draining, busy).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The solution suggested by this research, as well as my own, is as simple as it
is startling: Do less. But do what you do with complete and hard focus. Then
when you’re done be done, and go enjoy the rest of the day.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://sivers.org/book/Overachievement&quot;&gt;https://sivers.org/book/Overachievement&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Performance coach, with a bent towards sports, surgery, and executive
performance, gives his thoughts on being a top performer. The key is the
&amp;quot;Trusting Mindset&amp;quot;: like a squirrel runs across a telephone wire. Just doing it,
without thought, because you&amp;#39;ve trained yourself plenty until that point.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The best in every business do what they have learned to do without questioning
their abilities — they flat out trust their skills, which is why we call this
high-performance state of mind the “Trusting Mindset.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;You cannot pull up all those years of education, training, and experience in
your memory as you perform — that’s the “Training” Mindset. In the Trusting
Mindset, you have to let all that expertise be there instinctively.&lt;/p&gt;
&lt;p&gt;Different, in fact, as you and a squirrel running across a telephone wire!
Squirrels cannot think.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Put a two-by-four board on the floor and walk from one end to the other. It is
not hard. Not one of my students has ever fallen off the board. If you videotape
yourself doing this exercise, you will see that your foot hits the middle of the
board every step of the way, as if you were walking down the street. Your eyes
just look past the board at the far end, to where you’re going, and your feet
just move. Now suspend that board thirty feet in the air and walk from one end
to the other.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Success depends on emptying your head rather than filling it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;I actually have recommended to some clients to create even more chaos at work
so that getting any work done at all will force them to be in the present.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Simplify and narrow what you think about: Just go out target shooting.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://sivers.org/book/PeakPerformance&quot;&gt;https://sivers.org/book/PeakPerformance&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Periodization: Balance the right amount of stress with the right amount of
rest. Stress + rest = growth.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Don’t multitask. Ever. Compartmentalize your day down to the hour. Each
compartment has a concrete objective. Be fully intentional with how you spend
your time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Walking tends to be more effective at fostering creativity than other
movements that require greater focus.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Being in nature, or even just looking at pictures of nature, helps with the
transition from stress to rest and promotes creative thinking.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://sivers.org/book/TalentCode&quot;&gt;https://sivers.org/book/TalentCode&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Group A studied the paper for four sessions.
Group B studied only once but was tested three times.
A week later both groups were tested, and Group B scored 50 percent higher than Group A.
They&amp;#39;d studied one-fourth as much yet learned far more.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Capture failure and turn it into skill. The trick is to choose a goal just
beyond your present abilities.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The more we fire a particular circuit, the more myelin optimizes that circuit,
and the stronger, faster, and more fluent our movements and thoughts become. The
best way to build a good circuit is to fire it, attend to mistakes, then fire it
again, over and over.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;How the human cardiovascular system actually works: that we can improve it by
targeting our aerobic or anaerobic systems, that we can strengthen our heart
and muscles by pushing ourselves to operate at the outer edges of our
ability - lifting a slightly heavier weight, or trying to run a slightly
farther distance.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://sivers.org/book/Peak&quot;&gt;https://sivers.org/book/Peak&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Gaining expertise is largely a matter of improving one’s mental processes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;If improvement is to occur, performances must not be automatic.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Purposeful practice requires getting out of one’s comfort zone. This is perhaps
the most important part.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;http://paulgraham.com/genius.html&quot;&gt;http://paulgraham.com/genius.html&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Everyone knows that to do great work you need both natural ability and
determination. But there&amp;#39;s a third ingredient that&amp;#39;s not as well understood:
an obsessive interest in a particular topic.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;When you look at the lives of people who&amp;#39;ve done great work, you see a
consistent pattern. They often begin with a bus ticket collector&amp;#39;s obsessive
interest in something that would have seemed pointless to most of their
contemporaries. One of the most striking features of Darwin&amp;#39;s book about his
voyage on the Beagle is the sheer depth of his interest in natural history. His
curiosity seems infinite. Ditto for Ramanujan, sitting by the hour working out
on his slate what happens to series.&lt;/p&gt;
&lt;p&gt;But there is a difference between Ramanujan and a bus ticket collector. Series
matter, and bus tickets don&amp;#39;t.&lt;/p&gt;
&lt;p&gt;It&amp;#39;s a mistake to think they were &amp;quot;laying the groundwork&amp;quot; for the discoveries
they made later. There&amp;#39;s too much intention in that metaphor. Like bus ticket
collectors, they were doing it because they liked it.&lt;/p&gt;
&lt;p&gt;If I had to put the recipe for genius into one sentence, that might be it: to
have a disinterested obsession with something that matters.&lt;/p&gt;
&lt;p&gt;Aren&amp;#39;t I forgetting about the other two ingredients? Less than you might
think. An obsessive interest in a topic is both a proxy for ability and a
substitute for determination. Unless you have sufficient mathematical
aptitude, you won&amp;#39;t find series interesting. And when you&amp;#39;re obsessively
interested in something, you don&amp;#39;t need as much determination: you don&amp;#39;t need
to push yourself as hard when curiosity is pulling you.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;But there are some heuristics you can use to guess whether an obsession might
be one that matters. For example, it&amp;#39;s more promising if you&amp;#39;re creating
something, rather than just consuming something someone else creates. It&amp;#39;s
more promising if something you&amp;#39;re interested in is difficult, especially if
it&amp;#39;s more difficult for other people than it is for you.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;But you can never be sure. In fact, here&amp;#39;s an interesting idea that&amp;#39;s also
rather alarming if it&amp;#39;s true: it may be that to do great work, you also have
to waste a lot of time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=21615415&quot;&gt;https://news.ycombinator.com/item?id=21615415&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;My advice would be: rigorously eliminate everything from your life which doesn&amp;#39;t
fit inside your top X critical priorities.&lt;/p&gt;
&lt;p&gt;Where X is as small as possible, and seek to cull it further by combining
equivalents and trying to identify why some &amp;#39;important&amp;#39; things might actually be
utter wastes of time in the first place.&lt;/p&gt;
&lt;p&gt;The world generally uses a ratchet approach to conquer your attention. Use a
ratchet to take it back.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://fivethirtyeight.com/features/media-bubbles-arent-the-biggest-reason-were-partisans/&quot;&gt;Media Bubbles Aren’t The Biggest Reason We’re Partisans&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“People have a notion from hearing about information echo chambers that most
Americans are getting news and information from a very slanted media diet,” he
told me. “Empirical evidence suggests that’s not true.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Two people might see the same facts about the current impeachment investigation
but interpret that news in wildly different ways.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/visakanv/status/1200707613526114305?s=09&quot;&gt;https://twitter.com/visakanv/status/1200707613526114305?s=09&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;guy: how become good writer&lt;/p&gt;
&lt;p&gt;me: write 100 things&lt;/p&gt;
&lt;p&gt;[later]&lt;/p&gt;
&lt;p&gt;guy: ive written 80 things... nobody seems to care. when do people start caring?&lt;/p&gt;
&lt;p&gt;me: do you care?&lt;/p&gt;
&lt;p&gt;guy: do I care if other people-?&lt;/p&gt;
&lt;p&gt;me: no. do &lt;em&gt;you&lt;/em&gt; care about your writing?&lt;/p&gt;
&lt;p&gt;guy: uhhh I guess?&lt;/p&gt;
&lt;p&gt;me: that’s not enough&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://www.lesswrong.com/posts/DctWqpGLZwTnrGdLT/tapping-out-in-two&quot;&gt;Tapping Out in Two&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What I do now is say something to the effect of: &amp;quot;after this, I&amp;#39;m limiting
myself to two more replies in this thread.&amp;quot;&lt;/p&gt;
&lt;p&gt;This has various advantages. It feels less rude. It doesn&amp;#39;t look like I&amp;#39;m
quitting because I have no reply. It helps the conversation reach a more natural
conclusion. And it also feels a lot easier to do, partly for the above reasons
and partly for the normal reasons precommitment helps me to do things.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://www.lesswrong.com/posts/KbCHcb8yyjAMFAAPJ/when-wishful-thinking-works&quot;&gt;When Wishful Thinking Works&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;But f could have multiple fixed points. Which one is right? You get to pick;
whichever fixed point you decide to believe ends up being correct, since they
are fixed points of the function determining the true probabilities from your
beliefs. Cases in which there are multiple such fixed points are cases in
which you actually can make something be true by believing it. So you may as
well believe the fixed point according to which you have the highest expected
utility.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;http://tynan.com/thekey&quot;&gt;Consistency is The Key&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The most productive people I know are people who absolutely master the basics.
They know how to fill the time in the day with the most important tasks they
have, and they know how to string those days together in such a way that
they&amp;#39;re making meaningful progress.&lt;/p&gt;
&lt;p&gt;The most important basic skill to master, without a doubt, is consistency.
Those who are able to be consistent end up with huge success, very often much
greater success than they expected or even hoped for.&lt;/p&gt;
&lt;p&gt;People in finance say that people aren&amp;#39;t able to comprehend the benefits of
compounding interest over time. Consistency in productivity creates compound
benefits which people are similarly not able to comprehend. Your starting
point doesn&amp;#39;t matter, because you can quickly scale up to your capacity once
you have a history and habit of consistency.&lt;/p&gt;
&lt;p&gt;Let&amp;#39;s say you wanted to write a book. Maybe you&amp;#39;d tried and failed before. If
you commit to writing for thirty minutes every day for a month, you&amp;#39;ll write
at least 10 to 15 thousand words. Not bad. Then the next month you up your
quota to just one hour. Now you have a cumulative 30 to 45 thousand words. Not
quite a book yet, but you&amp;#39;re a month away.&lt;/p&gt;
&lt;p&gt;And how easy does that process sound? Anyone can do half an hour a day. Anyone
who has done a half hour a day for a month can do an hour a day. And anyone
who has done an hour a day can do another month.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Interestingly, it doesn&amp;#39;t seem to matter what you choose to be consistent on
or how easy or difficult it is. I&amp;#39;ve experimented a lot with this, and even
the easiest tasks lead to a positive spiral of consistency. I&amp;#39;ve found that as
soon as I get a coaching client to be consistent with any tasks relevant to
their lives, they will generally remain consistent forever, with a few
variances here and there&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;http://sebastianmarshall.com/vita-brevis&quot;&gt;http://sebastianmarshall.com/vita-brevis&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Vīta brevis,
ars longa,
occāsiō praeceps,
experīmentum perīculōsum,
iūdicium difficile.&lt;/p&gt;
&lt;p&gt;Or in English —&lt;/p&gt;
&lt;p&gt;Life is short,
and art long,
opportunity fleeting,
experimentations perilous,
and judgment difficult.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://hotelconcierge.tumblr.com/post/113360634364/the-stanford-marshmallow-prison-experiment&quot;&gt;The Standford Marshmallow Experiment&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I’m not convinced that the Stanford Marshmallow Experiment tests for anything
even remotely resembling “innate willpower,” because waiting fifteen minutes
for a single marshmallow is a stupid thing to do.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The experiment could have lacked any tangible reward and some kids
still would have waited.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;There’s a type of joke that I think of as the “white people” joke, although
it’s rarely funny and it doesn’t have to be about someone who’s white. The
joke is about a mid-40’s housewife who is way too well-educated and bored to
be a housewife, and so she tries to find the Grail of healthy food (organic,
GMO-free, low acidity, one diet after another) and she plants a garden, and
she adopts pets, and she joins nonprofits, and she joins the school board, and
she reads every novel on NPR’s end of the year list, and she gets weekly
therapy and monthly massages (to about the same effect), and she meditates on
the present, and she achieves peace with the past, and she contemplates the
future, and everything is feng shui, and yet, despite all this, she feels
restless, anxious, unhappy, and she dreams of some sort of vacation.&lt;/p&gt;
&lt;p&gt;Or sometimes the joke is about an elderly businessman on his second hair
transplant and third cardiac stent and twenty-billionth dollar, and his kids
all have grandkids and his wife is deceased, and when he goes out he he orders
scotch more expensive than houses, but that isn’t too often—he’s seen enough
parties, he’s seen enough people, he has no strong affections, and he works
round the clock fighting tooth-and-nail for his billions, because he’s not
sure what else, exactly, he’s supposed to be doing.&lt;/p&gt;
&lt;p&gt;Or the joke is about a magazine-cover movie actress who has the adoration of
thousands and still feels worthless. Or the joke is about a virginal computer
science genius who has deleted his OKCupid and decided to eschew all noncoding
activities. Or the joke is about a millionaire athlete under investigation for
using anabolic steroids. Or the joke is about a 50-something cardiologist who
hates all his patients but knows that he’d hate being retired even more. Or
the joke is about a young power couple who like each other very much, love,
maybe, but they’re both distracted by the nagging feeling that they could do
better, that they should be shooting for something greater, and so they break
up and find new partners and the process repeats again.&lt;/p&gt;
&lt;p&gt;And the joke, which you hear on forums or sitcoms or in crowded sports bars,
goes: “Haha, even though these people are successful, they’re still
dissatisfied.&amp;quot;&lt;/p&gt;
&lt;p&gt;And I’m here to tell you that this joke is totally backwards. It’s because
these people have always been dissatisfied that they achieved success.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;This study implies that socially prescribed perfectionism is maladaptive and
self oriented perfectionism is adaptive, but it has the causality backwards. If
you ace a difficult O-chem test, do you want to believe that this was the result
of your übermensch willpower or “big surprise, my parents have been pushing me
for years”? Inversely, if you just failed an O-chem test, it’s much preferable
to think “My family thinks I’m a failure. They’re so unfair,” instead of “I’m a
loser.&amp;quot; This is Psych 101:&lt;/p&gt;
&lt;p&gt;Being intrinsically motivated doesn’t make you successful. Feeling successful
makes you intrinsically motivated.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/vgr/status/1205320897495625729&quot;&gt;100 Candid Political Opinions&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol start=&quot;30&quot;&gt;
&lt;li&gt;Cat people make for better political leaders but dog people are more
electable&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ol start=&quot;42&quot;&gt;
&lt;li&gt;Georgism is a good idea that Homo sapiens is not an enlightened enough
species to put into practice&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ol start=&quot;85&quot;&gt;
&lt;li&gt;The financial/investment world has no clue what&amp;#39;s going on, is afraid of
everything, and has been largely reduced to One Weird Trick: financialization.
The One Weird Trick is increasingly being executed by minds that have already
retreated to New Zealand bunkers&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ol start=&quot;90&quot;&gt;
&lt;li&gt;Most bad politics arises out of bad literary tastes, as in enjoying stories
about stereotypes. Good politics arises out of pattern matching archetypes while
they still have &amp;quot;alpha&amp;quot; (predictive power) with a tasteful literary sensibility&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ol start=&quot;91&quot;&gt;
&lt;li&gt;Stereotypes are real, and there is always a subset of every stereotyped
population that actually willingly conforms to that stereotype, performing it
with an aggressive deadness. These dead player zombies are the core of all
politics. All politics is about seeing dead people.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ol start=&quot;93&quot;&gt;
&lt;li&gt;Zizek is correct. The Normie ideology is cynicism, and conversely, all
ideology turns into cynicism by the time it goes normie. This is why Noble Lie
political philosophy is bs because there is no unawakened consciousness laboring
under from it.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ol start=&quot;97&quot;&gt;
&lt;li&gt;You have no obligation to be useful or interesting to the world.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/TheAnnaGat/status/1206922953729957888?s=09&quot;&gt;https://twitter.com/TheAnnaGat/status/1206922953729957888?s=09&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;No person would ever create anything unless they&amp;#39;re bored, scared or horny out
of their mind.&lt;/p&gt;
&lt;p&gt;Don&amp;#39;t dampen it in people, don&amp;#39;t make it all &lt;em&gt;mindful&lt;/em&gt;; you will lose that
too.&lt;/p&gt;
&lt;/blockquote&gt;
      </description>
      <pubDate>2020-08-14T22:00:00.000Z</pubDate>
      <link>http://norswap.com/chosen-tidbits-5</link>
      <guid isPermaLink="true">http://norswap.com/chosen-tidbits-5</guid>
    </item>
    <item>
      <title>Chosen Tidbits 4</title>
      <description>
&lt;p&gt;Previously: &lt;a href=&quot;/chosen-tidbits-1/&quot;&gt;One&lt;/a&gt; / &lt;a href=&quot;/chosen-tidbits-2/&quot;&gt;Two&lt;/a&gt; / &lt;a href=&quot;/chosen-tidbits-3/&quot;&gt;Three&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://www.lesswrong.com/posts/DoPo4PDjgSySquHX8/heads-i-win-tails-never-heard-of-her-or-selective-reporting&quot;&gt;Heads I Win, Tails?—Never Heard of Her; Or, Selective Reporting and the Tragedy
of the Green Rationalists&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The reliability of the Bayesian belief-updating process depends entirely on how
facts are being reported. If someone distorts the reporting, it won&amp;#39;t work.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Within your faction you are disincentivized to report things that are coded to
the other faction. So Bayesian updating becomes broken unless you take this
distortion into account.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://www.theatlantic.com/magazine/archive/2016/06/the-mind-of-donald-trump/480771/&quot;&gt;The Mind of Donald Trump&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;More than even Ronald Reagan, Trump seems supremely cognizant of the fact that
he is always acting. He moves through life like a man who knows he is always
being observed. If all human beings are, by their very nature, social actors,
then Donald Trump seems to be more so—superhuman, in this one primal sense.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;For Trump, the concept of “the deal” represents what psychologists call a
personal schema — a way of knowing the world that permeates his thoughts.
Cognitive-science research suggests that people rely on personal schemata to
process new social information efficiently and effectively. By their very
nature, however, schemata narrow a person’s focus to a few well-worn approaches
that may have worked in the past, but may not necessarily bend to accommodate
changing circumstances. A key to successful decision making is knowing what your
schemata are, so that you can change them when you need to.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Like all of us, presidents create in their minds personal life stories—or what
psychologists call narrative identities—to explain how they came to be who they
are. This process is often unconscious, involving the selective reinterpretation
of the past and imagination of the future. A growing body of research in
personality, developmental, and social psychology demonstrates that a life story
provides adults with a sense of coherence, purpose, and continuity over time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Trump has never forgotten the lesson he learned from his father and from his
teachers at the academy: The world is a dangerous place. You have to be ready to
fight. The same lesson was reinforced in the greatest tragedy that Trump has
heretofore known—the death of his older brother at age 43. Freddy Trump was
never able to thrive in the competitive environment that his father created.
Described by Blair in The Trumps as “too much the sweet lightweight, a mawkish
but lovable loser,” Freddy failed to impress his father in the family business
and eventually became an airline pilot. Alcoholism contributed to his early
death. Donald, who doesn’t drink, loved his brother and grieved when he died.
“Freddy just wasn’t a killer,” he concluded.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;http://theoryengine.org/mental-health/book-review-impro-by-keith-johnstone/&quot;&gt;Book Review: Impro by Keith Johnstone&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Play-acting to avoid failure:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Students will arrive with many techniques for avoiding the pain of failure. John
Holt’s ‘How Children Fail’ (Penguin, 1969, Pitman, 1970) gives examples of
children learning to get round problems, rather than learning to find solutions
to problems. If you screw your face up and bite on your pencil to show you’re
‘trying’, the teacher may write out the answer for you... I explain to the
students the devices they’re using to avoid tackling the problems – however easy
the problems are – and the release of tension is often amazing…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;This realisation that as adults we are avoiding problems by play-acting “please
be nice to me” signals, signals we learned as children to please overworked
teachers, that are a pointless distraction from actually doing something seems
an excellent insight.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;On status:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Johnstone came up with the idea of Status when finding a problem with his
actors in the studio – ordinary conversations on the stage seemed to be
incredibly dull and lifeless. At one point while watching another play, he was
inspired to think of strong or weak motivations for characters to do things,
and eventually asked his actors to try to seem very slightly higher or lower
in status than their partner. This method transformed the work.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Most people understand status very intuitively.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;These are just tricks to get students to experience status changes. If I speak
with a still head, then I’ll do many other high-status things quite
automatically. I’ll speak in complete sentences, I’ll hold eye contact. I’ll
move more smoothly, and occupy more ’space’. If I talk with my toes pointing
inwards I’m more likely to give a hesitant little ‘er’ before each sentence,
and I’ll smile with my teeth covering my bottom lip, and I’ll sound a little
breathless and so on. We were amazed to find that apparently unrelated things
could so strongly influence each other; it didn’t seem reasonable that the
position of the feet could influence sentence structure and eye contact, but
it is so.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But sometimes it&amp;#39;s not so intuitive:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As soon as I introduced status work at the Studio, we found that people play
one status while convinced that they are playing the opposite. This obviously
makes for very bad social meshing… and many of us had to revise out whole idea
of ourselves. In my own case I was astounded to find that when I thought I was
being friendly, I was actually being hostile! If some had said ‘I like your
play’, I would have said ‘Oh, it’s not up to much’, perceiving myself as
‘charmingly modest’. In reality I would have been implying that my admirer had
bad taste. I experience the opposite situation when people come up, looking
friendly and supportive and say, ‘We did enjoy the end of Act One’, leaving me
to wonder what was wrong with the rest.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The truth is that the best ideas are often psychotic, obscene and unoriginal.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/visakanv/status/1149362892157775874?s=09&quot;&gt;Visakanv on Friendship&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Possibly the most important thing in a friendship - including one with
yourself, or your spouse, or your child - is attention. Deep, focused,
undivided, non-judgemental attention.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;To really see + hear the other person, in a world where people constantly feel
unseen &amp;amp; unheard.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://www.takimag.com/article/the-great-awokening-conspiracy-theory/&quot;&gt;The Great Awokening Conspiracy
Theory&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The conspiracy theory is that the emergence of a socialist protest movement
three years after the economic collapse of 2008 terrified the rich. But they
noticed that Occupy was easily distracted from its class warfare by its urge
to indulge the perpetually wounded feelings of the “progressive stack.” The
more intersectional Pokémon Points that would-be speakers possess, the more
likely they are chosen to orate.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Rich white guys, who aren’t dumb, would have quickly figured out that their
biggest worry is not-rich white guys. In contrast, privileging more
intersectional personalities, such as black women, tended to get leftists
sidetracked from discussing confiscatory taxes into passionate diatribes about
how white Beckys were dissing their Afros.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;This theory that Woke Capital cynically conspired to divide and conquer
economic leftism by promoting the Great Awokening sounds plausible enough.
Certainly, Bernie Sanders feels that now-fashionable notions like reparations
and open borders are millstones around the necks of any Democrats’ seriously
hoping to stick it to the billionaires.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/csallen/status/1189244690840932352?s=09&quot;&gt;Tweet by Courtland Allen&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Underrated: The ability to steal the essence of what makes something else work
well, without also copying the superficial idiosyncratic details.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://slatestarcodex.com/2019/10/30/new-atheism-the-godlessness-that-failed/&quot;&gt;New Atheism: The Godlessness That
Failed&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;New Atheism was a failed hamartiology.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Hamartiology” is a subfield of theology dealing with the study of sin, in
particular, how sin enters the universe. Orthodox Christian hamartiology says we
all have original sin because Adam and Eve ate the apple. Gnostic hamartiologies
say we sin because we are ignorant of our true nature as celestial beings. Some
heretical hamartiologies say that all of this is irrelevant, and we sin because
we choose to.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Most movement atheists weren’t in it for the religion. They were in it for the
hamartiology. Once they got the message that the culture-at-large had settled on
a different, better hamartiology, there was no psychological impediment to
switching over. We woke up one morning and the atheist bloggers had all quietly
became social justice bloggers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;As it took its first baby steps, the Blue Tribe started asking itself “Who am I?
What defines me?”, trying to figure out how it conceived of itself. New Atheism
had an answer – “You are the people who aren’t blinded by fundamentalism” – and
for a while the tribe toyed with accepting it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;During the Bush administration, with all its struggles over Radical Islam and
Intelligent Design and Faith-Based Charity, this seemed like it might be a
reasonable answer. The atheist movement and the network of
journalists/academics/pundits/operatives who made up the tribe’s core started
drifting closer together.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Gradually the Blue Tribe got a little bit more self-awareness and realized this
was not a great idea. Their coalition contained too many Catholic Latinos, too
many Muslim Arabs, too many Baptist African-Americans. Remember that in 2008,
“what if all the Hispanic people end up going Republican?” was considered a
major and plausible concern. It became somewhat less amenable to New Atheism’s
answer to its identity question – but absent a better one, the New Atheists
continued to wield some social power.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Betweem 2008 and 2016, two things happened. First, Barack Obama replaced George
W. Bush as president. Second, Ferguson. The Blue Tribe kept posing its same
identity question: “Who am I? What defines me?”, and now Black Lives Matter gave
them an answer they liked better “You are the people who aren’t blinded by
sexism and racism.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Again, it was beautiful, simple, and perfect. We were “the reality-based
community”. They were ignoring Reason and basing all of their opinions on blind
hatred and prejudice. There was nothing confusing or unsettling at all about the
situation, and we did not need to question any of our own beliefs. It was just
that some people had been brainwashed by white supremacy and an all-consuming
desire to protect their own privilege, and so they did. Sin began with the apple
tree in Eden; conservativism began with the cotton plant in Jamestown. Language
separates us from the apes; not being blinded by bigotry separates us from the
Republicans.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=21376838&quot;&gt;Comment on &amp;quot;Thriving on the Technical Leadership Path&amp;quot;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;My experience has been that the value of very senior technical staff is not that
they solve &amp;quot;extremely high level&amp;quot; technical problems but they are very easily
able to see how what appears to be a complex problem is isomorphic to a much
simpler, easy to solve problem.&lt;/p&gt;
&lt;p&gt;The difference between expert and advanced/intermediate technical staff is that
the advanced engineer has an understanding of complex solution and mistakenly
tries to apply them everywhere, so the net effect is to increase complexity. The
expert typically sees simple solutions and method of resolving complexity and
has a net effect of reducing overall system complexity.&lt;/p&gt;
&lt;p&gt;Believing that the value add of experienced technical staff is to only solve
really hard problem is likely caused by having too many advanced/intermediate
people playing the role of experienced technical leads. All of the great
technical team member I worked with always make call solutions simpler and
easier to implement by knowing exactly what doesn&amp;#39;t need to be done and what is
essential.&lt;/p&gt;
&lt;/blockquote&gt;
      </description>
      <pubDate>2020-08-03T22:00:00.000Z</pubDate>
      <link>http://norswap.com/chosen-tidbits-4</link>
      <guid isPermaLink="true">http://norswap.com/chosen-tidbits-4</guid>
    </item>
    <item>
      <title>Reviews 7</title>
      <description>
&lt;p&gt;Previously: &lt;a href=&quot;/every-anime/&quot;&gt;One&lt;/a&gt; / &lt;a href=&quot;/more-anime/&quot;&gt;Two&lt;/a&gt; / &lt;a href=&quot;/even-more-anime/&quot;&gt;Three&lt;/a&gt; / &lt;a href=&quot;/reviews-4&quot;&gt;Four&lt;/a&gt; / &lt;a href=&quot;/reviews-5&quot;&gt;Five&lt;/a&gt; / &lt;a href=&quot;/reviews-6&quot;&gt;Six&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This time, I&amp;#39;m also reviewing books!&lt;/p&gt;
&lt;h2 id=&quot;darwins-game&quot;&gt;Darwin&amp;#39;s Game&lt;/h2&gt;
&lt;p&gt;I forgot to review this one &lt;a href=&quot;/reviews-6&quot;&gt;last time&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In short, it follows the &amp;quot;death game&amp;quot; formula: the protagonist gets sucked in a
game (via a smartphone app in this case) that gives him powers and in which
currency can be acquired by defeating (lethaly or not) other players. Of course
there&amp;#39;s a bunch of psychopaths, but also potential allies.&lt;/p&gt;
&lt;p&gt;Really enjoyed it, it was pretty fun. The show is thoughtful about powers and
how to use them. Nothing incredibly, but it&amp;#39;s only an 11-episode show and it&amp;#39;s
well worth a watch.&lt;/p&gt;
&lt;h2 id=&quot;erased-boku-dake-ga-inai-machi&quot;&gt;Erased (Boku Dake Ga Inai Machi)&lt;/h2&gt;
&lt;p&gt;I really liked this one. The basic plot is that the hero is sent back to his
elementary school past, where he endeavours to prevent the murder of three kids
in his home town. These events are also connected to his present.&lt;/p&gt;
&lt;p&gt;The story is really solid and there is some real mystery. The tone reminded of
&lt;a href=&quot;/reviews-4/#parasyte&quot;&gt;Parasyte&lt;/a&gt; a lot: it feels &amp;quot;mature&amp;quot; - it&amp;#39;s darker than most anime, but never
edgy.&lt;/p&gt;
&lt;p&gt;Like Parasyte, this had the advantage to be an adaption of a finished series,
and a short one at that — the anime is only 12 episodes long.&lt;/p&gt;
&lt;p&gt;Really solid recommendation from me, there is no reason not to watch this.&lt;/p&gt;
&lt;h2 id=&quot;unsong&quot;&gt;Unsong&lt;/h2&gt;
&lt;p&gt;And now, a book review! Unsong is a book you can &lt;a href=&quot;http://unsongbook.com/&quot;&gt;read for free online&lt;/a&gt;,
written by the brilliant Scott Alexander (of &lt;a href=&quot;https://slatestarcodex.com/&quot;&gt;Slate Star Codex&lt;/a&gt;&amp;#39;s fame — one of
my favorite blogs).&lt;/p&gt;
&lt;p&gt;As for the (wild!) plot: in 1972, instead of sending men on the moon, the Apollo
rocket crashed into the vast crystal sphere encircling the world. It turns out
it was part of the vast machinery of heaven built by archangel Uriel to slow the
divine light to a trickle, and ensure science works properly. With it cracked,
divine light enters the world once more and as some technology stop working, the
supernatural becomes possible once more. In particular, it is possible to speak
some of the names of god in order to produce spell-like effects.&lt;/p&gt;
&lt;p&gt;Unsong is imaginative and brilliant. There are many other things introduced in
the universe besides the names of god, and their consequences are taken
seriously (though always somewhat humorously as well). For instance, there is a
whole branch of government (the titular &lt;em&gt;Unsong&lt;/em&gt;) dedicated to enforcing
copyrights on the names of god.&lt;/p&gt;
&lt;p&gt;Unsong is brilliant, but it is also weird. Its lore centers around the
&lt;a href=&quot;https://en.wikipedia.org/wiki/Kabbalah&quot;&gt;Kabbalah&lt;/a&gt;, and it&amp;#39;s full of kabalistic jokes. Things like &amp;quot;this word means X
and Y and Z and so we get meanings A, B and C&amp;quot;. It&amp;#39;s clever and cute, but it
works better the first three times than the 50th time. Towards the end, I got a
bit tired of it, especially since it breaks the rythm of the descent towards the
conclusion.&lt;/p&gt;
&lt;p&gt;Unsong is really two intertwined stories of different magnitudes. On the one
hand it is the story happening in the story&amp;#39;s present in the 2010s, and on the
other hand it is the story of how the world evolved since 1972, under the
influence of the radical new conditions.&lt;/p&gt;
&lt;p&gt;It&amp;#39;s really hard to describe Unsong as a story I realize. I think the best thing
would be to give it a shot. If you generally like fiction that is a little weird
(e.g. Terry Pratchett, Snow Crash, ...) then I&amp;#39;d definitely recommend it. Ditto
if you tend to enjoy Scott&amp;#39;s normal writing.&lt;/p&gt;
&lt;h2 id=&quot;the-rise-and-fall-of-software-recipes&quot;&gt;The Rise and Fall of Software Recipes&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;banana-book.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Aka &lt;em&gt;the banana book&lt;/em&gt;, after the lovely fruit peel that adorns the cover.
It&amp;#39;s written by &lt;a href=&quot;https://www.dariusblasband.com/&quot;&gt;Darius Blasband&lt;/a&gt;, the founder of &lt;a href=&quot;https://www.raincode.com/&quot;&gt;Raincode&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now, from reading the book&amp;#39;s back cover, you&amp;#39;d be forgiven to think the book had
some grand thesis about &amp;quot;software recipes&amp;quot; and methodologies.&lt;/p&gt;
&lt;p&gt;In reality, the book never really bothers to define what a software recipe is
(it does convey that it is a cookie cutter pattern to make software). Instead,
it should be taken as Darius&amp;#39;s working, tech &amp;amp; business, memoir.&lt;/p&gt;
&lt;p&gt;In that sense, I think the book works relatively well. Darius describes himself
as a &amp;quot;codeaholic&amp;quot;, and he is definitely a compiler geek — which also happens to
be my case. As such many chapters of the book where of particular interest to
me. That being said, they remain accessible enough that any semi-competent
programmer should be able to understand the subject matter.&lt;/p&gt;
&lt;p&gt;I sometimes disagreed with Darius, and often wanted to add more nuance, but his
opinions never struck me as wrong-headed. There&amp;#39;s a lot of references to
projects and experiences on the ground that help to lend weight to some of his
points.&lt;/p&gt;
&lt;p&gt;The writing is snappy and fun enough to keep you engaged. Chapters are typically
not too long, and the books lends itself well to sporadic reading. It would
actually have made a great toilet book. That being said, don&amp;#39;t expect your mind
to be blown away either. This is a no-nonsense collection software advice,
stories and ideas. While there are definitely some nuggets of insight to glean
there, I don&amp;#39;t think this will cause anyone that wasn&amp;#39;t already on board to
reconsider their whole processes.&lt;/p&gt;
&lt;h2 id=&quot;kaguya-sama-love-is-war&quot;&gt;Kaguya-sama: Love is War&lt;/h2&gt;
&lt;p&gt;This was strongly recommended to me by my friend Gorby. And I have to admit:
it&amp;#39;s damn funny. The humor reminded me of &lt;a href=&quot;/reviews-4/#dumbbell-nan-kilo-moteru-how-heavy-are-the-dumbells-you-lift&quot;&gt;Dumbbell nan Kilo&lt;/a&gt;, in a good way.
Despite the silly tone, the last episode managed to have my heart in a vise.
That&amp;#39;s how you know it&amp;#39;s good.&lt;/p&gt;
&lt;p&gt;Also, I&amp;#39;m a sucket for that opening theme:&lt;/p&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot;
src=&quot;https://www.youtube-nocookie.com/embed/UqpdDTeHbd8&quot; frameborder=&quot;0&quot;
allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot;
allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;That Japanese crooner really did steal my heart 😍 I also like the visuals, it
reminisced me of the better James Bond openings.&lt;/p&gt;
&lt;h2 id=&quot;3-gatsu-no-lion-march-comes-in-like-a-lion&quot;&gt;3-gatsu no Lion (March Comes In Like a Lion)&lt;/h2&gt;
&lt;p&gt;3-gatsu no Lion has an excellent MyAnimeList score (8.45) and has is often
described as being great &amp;amp; artful. And I was curious to know what the fuss was
about. Well, I ended up dropping it (for the nonce at least) after 10 episodes
(out of 22 for the first season).&lt;/p&gt;
&lt;p&gt;It&amp;#39;s not bad by any stretch of the imagination. It&amp;#39;s just... very contemplative?
Slow? I think what I&amp;#39;ve seen so far could have been conveyed in half the time,
there are very repetitive scenes. At the same time, it might have been
deliberate. The anime certainly feels deliberate, and not like it&amp;#39;s trying to
please anyone, nor give itself a genre.&lt;/p&gt;
&lt;p&gt;Of course, this is related to the subject matter, which is ... complex. It&amp;#39;s
about the state of mind of this young pro shogi player. I&amp;#39;ll paste the MAL
description:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Having reached professional status in middle school, Rei Kiriyama is one of
the few elite in the world of shogi. Due to this, he faces an enormous amount
of pressure, both from the shogi community and his adoptive family. Seeking
independence from his tense home life, he moves into an apartment in Tokyo. As
a 17-year-old living on his own, Rei tends to take poor care of himself, and
his reclusive personality ostracizes him from his peers in school and at the
shogi hall.&lt;/p&gt;
&lt;p&gt;However, not long after his arrival in Tokyo, Rei meets Akari, Hinata, and
Momo Kawamoto, a trio of sisters living with their grandfather who owns a
traditional wagashi shop. Akari, the oldest of the three girls, is determined
to combat Rei&amp;#39;s loneliness and poorly sustained lifestyle with motherly
hospitality. The Kawamoto sisters, coping with past tragedies, also share with
Rei a unique familial bond that he has lacked for most of his life. As he
struggles to maintain himself physically and mentally through his shogi
career, Rei must learn how to interact with others and understand his own
complex emotions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ultimately, I dropped it because I found myself dragging my feet a little to
watch it, which is not a good sign. I &lt;em&gt;might&lt;/em&gt; give another chance at some point,
as I think there might be something great which I haven&amp;#39;t gotten to.&lt;/p&gt;
&lt;h2 id=&quot;mob-psycho-100-season-1&quot;&gt;Mob Psycho 100 (Season 1)&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;mob-psycho-100.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;I almost dropped Mob Psycho 100 after the first episode, which repeated its
&amp;quot;funny&amp;quot; shtick a bit too much, and I was unsure about the graphical style. I&amp;#39;m
glad I didn&amp;#39;t, as it turns out it&amp;#39;s quite entertaining, and you get used to the
goofiness.&lt;/p&gt;
&lt;p&gt;I wouldn&amp;#39;t call it groundbreaking or anything, but it&amp;#39;s short (12 episodes) and
watchable. I don&amp;#39;t really have much more to say about it. It seems to be a very
beloved show (8.5 rating on MAL), and I can understand, the anime is not
incredible, but it is emminently sympathetic.&lt;/p&gt;
&lt;h2 id=&quot;hamefura&quot;&gt;Hamefura&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;hamefura.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;(Whole title &amp;quot;Otome Game no Hametsu Flag ...&amp;quot; or &amp;quot;My Next Life as a Villainess:
All Routes Lead to Doom!&amp;quot;)&lt;/p&gt;
&lt;p&gt;This anime was not at all what I expected it to be. The premise is that the
titular character gets reincarnated in a &lt;a href=&quot;https://en.wikipedia.org/wiki/Visual_novel&quot;&gt;visual novel&lt;/a&gt; romance game, as the
villainess character.&lt;/p&gt;
&lt;p&gt;From this premise I expected a &lt;a href=&quot;/reviews-4/#the-rising-of-the-shield-hero&quot;&gt;Shield Hero&lt;/a&gt;-like situation: the main character
being treated unfairly and having (in this case) to battle its way to
recognition.&lt;/p&gt;
&lt;p&gt;Well, spoilers: that&amp;#39;s not at all what happens. Instead this is a very wholesome
sorta-kinda-harem anime.&lt;/p&gt;
&lt;p&gt;And I really really loved it. I don&amp;#39;t really know why - the story is nothing to
write home about. I&amp;#39;m guessing it&amp;#39;s the &lt;em&gt;wholesomeness&lt;/em&gt; of the whole affair that
just put me in a good mood. It reminded me a bit of what I liked about &lt;a href=&quot;/more-anime/#k-on&quot;&gt;K-On!&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;gleipnir&quot;&gt;Gleipnir&lt;/h2&gt;
&lt;p&gt;Plot-wise, Gleipnir is a sort of death game where protagonists have special
abilities. In that, it&amp;#39;s quite similar to last season&amp;#39;s &lt;a href=&quot;#darwin-s-game&quot;&gt;Darwin&amp;#39;s Game&lt;/a&gt;, but the
similarity stops there.&lt;/p&gt;
&lt;p&gt;Whereas Darwin&amp;#39;s game is very focused on the strategies and combat, Gleipnir is
more about the mystery of the game&amp;#39;s existence. Well, at least it tries to.&lt;/p&gt;
&lt;p&gt;The start is intriguing enough, but then the anime tramples around in its
midsection, not achieving much. The mystery plotline picks up towards the end,
just enough to keep things interesting. It&amp;#39;s not all that masterfully executed
however. They also could easily have concluded the 13 episode arc with some something
more impactful happening.&lt;/p&gt;
&lt;p&gt;I was ready to give up around episode 8, then got interested enough to finish,
but I&amp;#39;m not sure I&amp;#39;ll care enough for season 2 (if they make it).&lt;/p&gt;
&lt;h2 id=&quot;yesterday-wo-uttate&quot;&gt;Yesterday wo Uttate&lt;/h2&gt;
&lt;p&gt;I started watching this show on the basis of its wistful mood. I&amp;#39;d seen a short
review of it (part of an overview of the whole season) that praised its little
philosophical sentences — but as it turned out there were relatively few of
them.&lt;/p&gt;
&lt;p&gt;The show is about a sort of amorous ... rectangle (?) between two guys and two
gals. I won&amp;#39;t deny the setting and the mood is nice, but unfortunately the story
gets nowhere pretty fast. A lot of time is spent of repetitions rather than
evolution in the characters&amp;#39; relationship. The conclusion comes out of the blue,
and does not really feel satisfying, or really coherent with what transpired
before.&lt;/p&gt;
&lt;p&gt;Maybe it can just be seen as a realistic (or more realistic than usual) take on
human relationship — with a unmistakable Japanese flair.&lt;/p&gt;
&lt;p&gt;This feels like it could have been so much better if the story had been better
conceived though.&lt;/p&gt;
      </description>
      <pubDate>2020-08-03T22:00:00.000Z</pubDate>
      <link>http://norswap.com/reviews-7</link>
      <guid isPermaLink="true">http://norswap.com/reviews-7</guid>
    </item>
    <item>
      <title>Weight Training 7: All The Lifts, All The Time</title>
      <description>
&lt;p&gt;Previously: &lt;a href=&quot;/weight-training&quot;&gt;One&lt;/a&gt; / &lt;a href=&quot;/weight-training-2&quot;&gt;Two&lt;/a&gt; / &lt;a href=&quot;/weight-training-3&quot;&gt;Three&lt;/a&gt; / &lt;a href=&quot;/weight-training-4&quot;&gt;Four&lt;/a&gt; / &lt;a href=&quot;/weight-training-5&quot;&gt;Five&lt;/a&gt; / &lt;a href=&quot;/weight-training-6&quot;&gt;Six&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Let&amp;#39;s switch things up and talk about my training before it actually takes
place.&lt;/p&gt;
&lt;p&gt;I want to rethink my long-term training strategy, but that will require a fair
amount of reading and planning.&lt;/p&gt;
&lt;p&gt;In the meantime, and with the gym reopening, I want to get back into
powerlifting training. The approach I want to try this time is practicing every
lift (bench, squat, deadlift) every workout, thrice a week.&lt;/p&gt;
&lt;p&gt;There&amp;#39;s a twist, I would work in different rep ranges during each workout:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Squat 3x, Bench Press 6x, Deadlift 12x&lt;/li&gt;
&lt;li&gt;Deadlift 3x, Squat 6x, Bench Press 12x&lt;/li&gt;
&lt;li&gt;Bench Press 3x, Deadlift 6x, Squat 12x&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I&amp;#39;ve actually been told after this was written but not yet published that this
is an existing training programmation concept: &lt;a href=&quot;https://www.strongerbyscience.com/daily-undulating-periodization/&quot;&gt;Daily Undulating Periodization
(DUP)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are a number of reasons I want to try this approach:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I haven&amp;#39;t worked with heavy weights in a while due to quarantine (and even
before, I wasn&amp;#39;t working very heavy). I miss it, and I think I could use the
stimulus.&lt;/li&gt;
&lt;li&gt;The high volume will help me recover my previous level of performance faster.&lt;/li&gt;
&lt;li&gt;Hopefully, it could also help me go beyond my previous peak. Powerlifters
programs typically train the lifts more than what I&amp;#39;ve ever been doing. That
was under &lt;a href=&quot;/weight-training&quot;&gt;Stronglifts&lt;/a&gt;, and was per 2-week periods: 6x squat, 3x
deadlift, 3x bench. (1) I haven&amp;#39;t trained liked that in more than a year
however.&lt;/li&gt;
&lt;li&gt;That&amp;#39;s also how I see most competent powerlifters around me train. (2)&lt;/li&gt;
&lt;li&gt;Alternating rep ranges should help relieve the stress of repeating the same
movement pattern over and over, and help develop different &amp;quot;strength
qualities&amp;quot;. (3)&lt;/li&gt;
&lt;li&gt;Practicing the same lift often means there&amp;#39;s less pressure to perform great or
improve the lift during each given workout. It also gives three vectors on
which to improve (one for each rep ranges) for the same lift.&lt;/li&gt;
&lt;li&gt;It&amp;#39;s a similar approach to the proven &lt;a href=&quot;https://www.t-nation.com/workouts/531-how-to-build-pure-strength&quot;&gt;5/3/1&lt;/a&gt; program
(&lt;a href=&quot;https://www.powerliftingtowin.com/beyond-531/&quot;&gt;reviewed&lt;/a&gt;), but which dips in bodybuilding rep ranges (6+)
instead or staying within purely strength-focused rep ranges (1-6).&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;(1) That&amp;#39;s not enough deadlift and bench, and in a sense too much squat,
because all these trainings were in the same rep range — at the end of that
period, that was one heavy set of 3 followed by two lighter sets of 3.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;(2) The guy with the biggest bench press I met (not sure about the exact
number, but he casually benched 160kg for a couple reps) told me he got there by
benching every workout. Clearly it works for some people.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;(3) It&amp;#39;s difficult to explain, but anyone that has lifted seriously knows that
squat your max for 3 reps feels very different than squatting your max for 12
reps. The difficulty and challenges are not the in same place. The hope is that
the aspect that are most stimulated when working in that rep range will improve
and carry over to the other rep ranges.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That being said, the approach also comes with risks, most notably the risk of
increased fatigue because of the increased volume. To tackle this, I&amp;#39;ve made
multiple resolutions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Be very mindful of fatigue, and don&amp;#39;t try to macho it up. Since every lift is
practiced every workout, there is not less incentive to do this.&lt;/li&gt;
&lt;li&gt;Stay shy of failure, which takes a big toll on your body. This is standard
training advice, but I&amp;#39;ve never practiced it, as &lt;a href=&quot;/weight-training&quot;&gt;Stronglifts&lt;/a&gt; is a
beginner program. (4)&lt;/li&gt;
&lt;li&gt;Instead, try to stay within the feasible range. Occasionally trying to go
heavier and failing is okay. Or use &lt;a href=&quot;https://www.niashanks.com/double-progression-method/&quot;&gt;double progression&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;One question that is not entirely settled: per-workout volume. It&amp;#39;s planned to
adapt this depending on fatigue, but I might dabble in some formal scheme,
drawing inspiration from &lt;a href=&quot;/weight-training-5/#reactive-training-systems-rts&quot;&gt;Reactive Training
Systems (RTS)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Another RTS idea: Use pivot blocks (essentially extended deloads with
complementary work) whenever progress stop.&lt;/li&gt;
&lt;li&gt;And in fact, try to predict when progress will stop by tracking your Time To
Peak (TTP: the number of weeks you can train before progress stops). Curious
to see how that one works out.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;(4) Some will argue that beginners should also stay shy of failure, which is
fair enough I suppose. I actually have no idea if there is a definitive word
on this.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;... all the while cutting.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This might not be optimal in order to make strength gains, but should be fine as
long as I don&amp;#39;t overtrain.&lt;/p&gt;
&lt;p&gt;The rationale is that the strength stuff is fun, and interesting to investigate,
but I don&amp;#39;t attach much value to reaching particular strength milestone. On the
other hand, I do attach some value to getting to a leaner body composition.&lt;/p&gt;
&lt;p&gt;I have some more meditations on this, but I will have to wait for another post!&lt;/p&gt;
      </description>
      <pubDate>2020-07-26T22:00:00.000Z</pubDate>
      <link>http://norswap.com/weight-training-7</link>
      <guid isPermaLink="true">http://norswap.com/weight-training-7</guid>
    </item>
    <item>
      <title>Weight Training 6: Training at Home During Quarantine</title>
      <description>
&lt;p&gt;Previously: &lt;a href=&quot;/weight-training&quot;&gt;One&lt;/a&gt; / &lt;a href=&quot;/weight-training-2&quot;&gt;Two&lt;/a&gt; / &lt;a href=&quot;/weight-training-3&quot;&gt;Three&lt;/a&gt; / &lt;a href=&quot;/weight-training-4&quot;&gt;Four&lt;/a&gt; / &lt;a href=&quot;/weight-training-5&quot;&gt;Five&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here&amp;#39;s a long overdue post on how I trained at home during quarantine. In fact,
as I write this, I&amp;#39;ve just begun going back to the gym since one week.&lt;/p&gt;
&lt;h2 id=&quot;training-home&quot;&gt;Training @Home&lt;/h2&gt;
&lt;p&gt;I saw the quarantine as an opportunity to experiment with at-home training,
something that had been in the back of my mind for a while.&lt;/p&gt;
&lt;p&gt;With no clear best candidate to adopt for at-home training, I decided to adapt
&lt;a href=&quot;/weight-training-5&quot;&gt;my previous training regimen&lt;/a&gt; (based on Jeremy Ethier&amp;#39;s &lt;a href=&quot;https://my.builtwithscience.com/courses&quot;&gt;Intermediate
Build&lt;/a&gt; program) for home work.&lt;/p&gt;
&lt;p&gt;(In fact, Jeremy ended up releasing an adapted version of his program for home,
which includes barbell, bodyweight and resistance band versions of all workouts.
But that wasn&amp;#39;t available when I started quarantining.)&lt;/p&gt;
&lt;p&gt;The experiment was pretty successful. I was able to put on some weight, and get
past a sticking point I had between 89 and 90 kgs.&lt;/p&gt;
&lt;p&gt;In fact it was a bit too successful. The program calls for 5 workouts a week,
but I ended up burning out after a couple weeks, and scaling back to 3 workouts
a week while keeping the 5-workouts rotation. Probably not the most optimal
thing to do, but eh — choosing exercises is hard.&lt;/p&gt;
&lt;p&gt;Home training can mean widely different things. I already owned a &lt;a href=&quot;https://www.amazon.fr/dp/B019H12VG8&quot;&gt;pullup bar&lt;/a&gt;
and a couple &lt;a href=&quot;https://www.amazon.fr/gp/product/B074MTMMWH&quot;&gt;resistance bands&lt;/a&gt; and &lt;a href=&quot;https://www.amazon.fr/gp/product/B07D35TXXX&quot;&gt;tubular bands&lt;/a&gt;. Additionally, I decided to
invest in a pair of &lt;a href=&quot;https://www.amazon.fr/gp/product/B0828DJYQR&quot;&gt;adaptable dumbbells&lt;/a&gt;. Those are pretty pricey: the &amp;quot;cheap&amp;quot;
(as in both price and potentially, make) version I bought ran me 100€ for each,
while the &lt;a href=&quot;https://www.amazon.fr/dp/B078HDGG7H&quot;&gt;original brand product&lt;/a&gt; is 250€. Ultimately, it proved to be a good
investment: they held up until now and proved really invaluable and enabling me
to perform more exercises.&lt;/p&gt;
&lt;p&gt;Towards the end of quarantine I also bought a &lt;a href=&quot;https://www.amazon.fr/gp/product/B078KCM53F/&quot;&gt;suspension band&lt;/a&gt; (also known as
&amp;quot;TRX band&amp;quot;, after the most popular brand). This is super handy for back
workouts, which are othewise a bit awkwards excepted for pullups. Really
recommended if you&amp;#39;re going to work your back at home.&lt;/p&gt;
&lt;p&gt;The program went through multiple slight iterations — I&amp;#39;m just going to
reproduce the final version below, with links to demonstrations for all the
exercises. A few comments on its evolution will follow.&lt;/p&gt;
&lt;h2 id=&quot;the-program&quot;&gt;The Program&lt;/h2&gt;
&lt;p&gt;Note: No rep counts are included. Since I have only limited ability to overload
the movement with weights at home, most of these should simply be &amp;quot;as many as
possible&amp;quot;.&lt;/p&gt;
&lt;h3 id=&quot;upper-body&quot;&gt;Upper Body&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2x &lt;a href=&quot;https://youtu.be/-MRNjTr6xrE?t=1091&quot;&gt;Flat Triceps Dumbbell Extension&lt;/a&gt;&lt;br&gt;(disregard the comment about not locking out)&lt;/li&gt;
&lt;li&gt;2x &lt;a href=&quot;https://www.youtube.com/watch?v=xphvjGDZeYE&quot;&gt;Flat Dumbbell Press&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2x &lt;a href=&quot;https://www.youtube.com/watch?v=2srBm6QYGMM&quot;&gt;Single Arm Banded Lat Pulldowns&lt;/a&gt;
(&lt;a href=&quot;https://www.youtube.com/watch?v=aHgtwja2Xlc&quot;&gt;alt&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;OR: 2x &lt;a href=&quot;https://youtu.be/mjnseqLiVXM?t=90&quot;&gt;Ground Pullovers&lt;/a&gt;
(&lt;a href=&quot;https://youtu.be/vc1E5CfRfos?t=510&quot;&gt;alt&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;3x &lt;a href=&quot;https://youtu.be/8B_uf-lR8cI?t=37&quot;&gt;Cobra Pus-Ups 21 Style&lt;/a&gt;&lt;br&gt;(forgot it was supposed to be cobra-style (arms along the body) pretty fast)&lt;/li&gt;
&lt;li&gt;2x &lt;a href=&quot;https://youtu.be/8B_uf-lR8cI?t=62&quot;&gt;Triceps Bodyweight Extensions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;lower-body-1&quot;&gt;Lower Body 1&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2x Bodyweight Squat&lt;/li&gt;
&lt;li&gt;4x &lt;a href=&quot;https://www.youtube.com/watch?v=YwDTthfbGrA&quot;&gt;Band Crab Walk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(2x Bodyweight Squat)&lt;/li&gt;
&lt;li&gt;4x &lt;a href=&quot;https://youtu.be/SKr58wX-E_k?t=145&quot;&gt;Standing Band Pulls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2x &lt;a href=&quot;https://youtu.be/-AWLDxutS08?t=202&quot;&gt;Bulgarian Split Squat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2x &lt;a href=&quot;https://youtu.be/5JmWguyvu7Y?t=320&quot;&gt;Lying Leg Curls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2x &lt;a href=&quot;https://www.youtube.com/watch?v=nZACuG67cdg&quot;&gt;Seated Weight Calf Raise&lt;/a&gt;&lt;br&gt;(you can also use a plate or some raised platform to step on)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;push&quot;&gt;Push&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2x &lt;a href=&quot;https://youtu.be/-MRNjTr6xrE?t=1095&quot;&gt;Standing Triceps Extension&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2x &lt;a href=&quot;https://www.youtube.com/watch?v=xphvjGDZeYE&quot;&gt;Flat Dumbbell Press&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2x &lt;a href=&quot;https://www.youtube.com/watch?v=2srBm6QYGMM&quot;&gt;Single Arm Banded Lat Pulldowns&lt;/a&gt;
(&lt;a href=&quot;https://www.youtube.com/watch?v=aHgtwja2Xlc&quot;&gt;alt&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;OR: 2x &lt;a href=&quot;https://youtu.be/mjnseqLiVXM?t=90&quot;&gt;Ground Pullovers&lt;/a&gt;
(&lt;a href=&quot;https://youtu.be/vc1E5CfRfos?t=510&quot;&gt;alt&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;1x &lt;a href=&quot;https://www.youtube.com/watch?v=R5wFUdRWh9o&quot;&gt;Decline Wall Push-Up
Negatives&lt;/a&gt;&lt;br&gt;(the video is not what I did, but what I did was bullshit)&lt;/li&gt;
&lt;li&gt;3x &lt;a href=&quot;https://www.youtube.com/watch?v=oqO9T5rSOEQ&quot;&gt;Decline Pushups&lt;/a&gt;&lt;br&gt;(like the video, but with the knees on a higher support)&lt;/li&gt;
&lt;li&gt;(Low to High Cable Flies)&lt;/li&gt;
&lt;li&gt;2x &lt;a href=&quot;https://youtu.be/MWcJuLKB7RY?t=333&quot;&gt;Dumbell Lateral Raise&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;pull&quot;&gt;Pull&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2x &lt;a href=&quot;https://www.youtube.com/watch?v=sIvJTfGxdFo&quot;&gt;Pull-Ups&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2x &lt;a href=&quot;https://www.youtube.com/watch?v=d3mEoo5b0mw&quot;&gt;TRX Row&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2x &lt;a href=&quot;https://www.youtube.com/watch?v=UHU0rxi-8wM&quot;&gt;Straight Arm TRX Pulldown&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;2x &lt;a href=&quot;https://www.youtube.com/watch?v=4gLRdMisOeA&quot;&gt;TRX Reverse Flies&lt;/a&gt;
(do not neglect the eccentric part — true for other TRX exercises too)&lt;/li&gt;
&lt;li&gt;2x &lt;a href=&quot;https://youtu.be/20ibpB635Rw?t=183&quot;&gt;Incline Dumbbell Curls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(&lt;a href=&quot;https://www.youtube.com/watch?v=xG57S0fgXAk&quot;&gt;TRX Biceps Curls&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;3x &lt;a href=&quot;https://www.youtube.com/watch?v=rntSjJPz3Z4&quot;&gt;TRX Face Pulls&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;lower-body-2&quot;&gt;Lower Body 2&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2x &lt;a href=&quot;https://youtu.be/vc1E5CfRfos?t=410&quot;&gt;Alternating Sprinter Lunge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2x &lt;a href=&quot;https://youtu.be/vc1E5CfRfos?t=696&quot;&gt;High Hip Buck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2x &lt;a href=&quot;https://youtu.be/-MRNjTr6xrE?t=613&quot;&gt;Pistol Squat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2x &lt;a href=&quot;https://youtu.be/5JmWguyvu7Y?t=320&quot;&gt;Lying Leg Curls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2x &lt;a href=&quot;https://www.youtube.com/watch?v=Jy0aMkLNsKo&quot;&gt;Weighted Calf Raise&lt;/a&gt;&lt;br&gt;(you can also do them without a raised  surface)&lt;/li&gt;
&lt;li&gt;2x &lt;a href=&quot;https://www.youtube.com/watch?v=ViVhUZGk6i4&quot;&gt;Single Leg Romanian Deadlift&lt;/a&gt;&lt;br&gt;(I did those with a single weight on the side of the support leg)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;evolution&quot;&gt;Evolution&lt;/h2&gt;
&lt;p&gt;The most notable evolution the program went through is that most most exercises
that have two sets used to have three, but I reduced when deloading after
burning out on the early version. Subsequently I simply increase the volume on
those two sets instead of adding a third one. I&amp;#39;m not sure this is the best
thing to do (3 sets is often seen as somewhat of a standard), but the main
benefit was helping get the length of the workouts under control.&lt;/p&gt;
&lt;p&gt;As already mentionned, I bought the suspension band only partway through, and
that means that other exercises had to be selected for the back before that.&lt;/p&gt;
&lt;p&gt;Here are a few of the exercises I tried: &lt;a href=&quot;https://youtu.be/fYS-rSmedCE?t=346&quot;&gt;towel row&lt;/a&gt;, &lt;a href=&quot;https://youtu.be/mjnseqLiVXM?t=167&quot;&gt;superman&lt;/a&gt;, &lt;a href=&quot;https://youtu.be/mjnseqLiVXM?t=40&quot;&gt;back widow&lt;/a&gt;,
&lt;a href=&quot;https://www.youtube.com/watch?v=wVQjyeQQDIs&quot;&gt;resistance band seated row&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=cszJcRz5UB0&quot;&gt;reverse pushups&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=lmi9NXKw1fU&quot;&gt;overhand/underhand table
rows&lt;/a&gt;, tubular band face pulls, band-assisted pullups, scapular pullups.&lt;/p&gt;
&lt;p&gt;There was also some variation on the other workouts, though less. Most notably I
did some &lt;a href=&quot;https://www.youtube.com/watch?v=y4mCllu5Qps&quot;&gt;kitchen counter dips&lt;/a&gt;, and some of the exerecises outlined in this
&lt;a href=&quot;https://www.youtube.com/watch?v=GKdR83QGIcg&quot;&gt;chest workout&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;As I&amp;#39;ve said a couple times, this probably isn&amp;#39;t the most optimized home
workout. 5 workouts over 11 days is probably too long of a rotation. There are
too many exercises, and it would be better to have a bit more sets per exercise.&lt;/p&gt;
&lt;p&gt;On the other hand, I got positive results out of it, and it was pretty good
given the circumstances. If anything, my biggest success here was to be able to
back down when I felt the onset of fatigue and overtraining — which has been
hard for me in the past.&lt;/p&gt;
&lt;p&gt;As for what&amp;#39;s next, I&amp;#39;ve started to do all the big lifts (bench, squat &amp;amp;
deadlift) again, three times per week, all the while cutting on a moderate
deficit. This might be a terrible idea, but I&amp;#39;m giving it a try. More on that
soon (hopefully).&lt;/p&gt;
      </description>
      <pubDate>2020-07-21T22:00:00.000Z</pubDate>
      <link>http://norswap.com/weight-training-6</link>
      <guid isPermaLink="true">http://norswap.com/weight-training-6</guid>
    </item>
    <item>
      <title>Truffle Tutorial: Adding 1 and 1 Together</title>
      <description>
&lt;p&gt;I&amp;#39;ve now been working on &lt;a href=&quot;https://github.com/oracle/truffleruby&quot;&gt;TruffleRuby&lt;/a&gt; for about 7 months. TruffleRuby is a Ruby
implementation built on top of &lt;a href=&quot;https://www.graalvm.org/docs/&quot;&gt;GraalVM&lt;/a&gt; and its &lt;a href=&quot;https://www.graalvm.org/docs/Truffle-Framework/user/README&quot;&gt;Truffle API&lt;/a&gt;. Truffle allows
languages to be implemented on top of Graal as &lt;a href=&quot;https://en.wikipedia.org/wiki/Interpreter_(computing)#Abstract_syntax_tree_interpreters&quot;&gt;AST interpreters&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I wanted to share a little bit of what I learned of Graal and Truffle, so I
decided to write this tutorial, which demonstrates the basics of Truffle through
simplistic examples.&lt;/p&gt;
&lt;p&gt;We are setting our ambition very low for this post. We are going to implement
the almost-simplest possible language. It will only be able to add numbers and
strings together. Doing this will teach us about some core principles of
Truffle. Then, we will use the &lt;a href=&quot;https://docs.oracle.com/en/graalvm/enterprise/20/guide/reference/ideal-graph-visualizer.html&quot;&gt;Ideal Graph Visualizer (IGV)&lt;/a&gt; tool to
inspect the result of compilation.&lt;/p&gt;
&lt;h2 id=&quot;what-graal-and-truffle-do&quot;&gt;What Graal and Truffle Do&lt;/h2&gt;
&lt;p&gt;Before entering into the minute details, I want to give you an overview of what
Graal and Truffle actually do, and why it&amp;#39;s interesting to use them at all.&lt;/p&gt;
&lt;p&gt;Why build your language on Graal/Truffle? The one line answer is that you can
make it go fast, easily. The more dynamic / abstract your language, the more it
will benefit from the optimizations offered by Truffle: writing your own
advanced JIT compiler is not a light undertaking.&lt;/p&gt;
&lt;p&gt;You will also get other goodness, such as debugging support for free. There are
two good articles that should sell you on the technology: &lt;a href=&quot;https://blog.plan99.net/graal-truffle-134d8f28fb69&quot;&gt;&amp;quot;Graal &amp;amp; Truffle&amp;quot; by
Mike Hearn&lt;/a&gt; (hype check: not every promise is entirely realized, but it&amp;#39;s
in the works) and &lt;a href=&quot;https://medium.com/graalvm/graalvm-ten-things-12d9111f307d&quot;&gt;&amp;quot;Top 10 Things To Do With GraalVM&amp;quot; by Chris Seaton&lt;/a&gt;
(hype check: this is all real).&lt;/p&gt;
&lt;p&gt;As for how the technology actually works, the best explanation for Graal is
probably Chris Seaton&amp;#39;s talk &lt;a href=&quot;https://chrisseaton.com/truffleruby/jokerconf17/&quot;&gt;Understanding How GraalVM Works&lt;/a&gt; (a
full transcript with inline slides is available!). This is deep technical
content, clearly explained. It doesn&amp;#39;t cover Truffle, however.&lt;/p&gt;
&lt;p&gt;Here is my own broad overview of how Graal/Truffle makes your code fast:&lt;/p&gt;
&lt;p&gt;When using the Truffle API, Graal (which includes a &lt;a href=&quot;https://en.wikipedia.org/wiki/Just-in-time_compilation&quot;&gt;just in time (JIT)
compiler&lt;/a&gt;) will compile &lt;a href=&quot;https://en.wikipedia.org/wiki/Hot_spot_(computer_programming)&quot;&gt;hot parts of the AST&lt;/a&gt; to efficient
machine code. In particular, the hot parts of the AST will be &lt;a href=&quot;https://en.wikipedia.org/wiki/Partial_evaluation&quot;&gt;partially
evaluated&lt;/a&gt;. While this has multiple performance implications, it will most
notably avoid a lot of the &lt;a href=&quot;https://dzone.com/articles/too-fast-too-megamorphic-what&quot;&gt;megamorphic call overhead&lt;/a&gt; that an AST
interpreter would normally suffer from.&lt;/p&gt;
&lt;p&gt;The Truffle API also offers other ways to improve performance. Most notably is
its reliance on &lt;a href=&quot;https://en.wikipedia.org/wiki/Inline_caching#Polymorphic_inline_caching&quot;&gt;(polymorphic) inline caching&lt;/a&gt;. In a program, there are
regularities that are hard or impossible to detect statically. For instance,
maybe a function works on different kinds of values, but in practice only ever
receives a single kind. Truffle lets you specify &lt;em&gt;specializations&lt;/em&gt; which handle
a subset of all cases that are allowed to occur. Then, at runtime, Truffle will
generate optimized code only for the specializations that were actually
encountered in practice, and insert a check to verify that we do not encounter
other cases (in which case we need to throw away the compiled code and start the
process again). This is called &lt;em&gt;inline caching&lt;/em&gt; because we cache the encountered
specializations in the AST. We&amp;#39;ll cover the specialization mechanism in detail
in this article.&lt;/p&gt;
&lt;p&gt;The typical use case for inline caching is method lookup: virtual method calls
have a tendency to always be done on an instance of the same class. Using inline
caching, we can store this class, and specialize the code for it, which avoids
repeating the costly method lookup. However, Truffle&amp;#39;s caches are very flexible,
and it&amp;#39;s possible to specialize on arbitrary conditions — depending on what the
language implementer specifies. See &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/dsl/Specialization.html&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/dsl/Cached.html&quot;&gt;there&lt;/a&gt;
for more details.&lt;/p&gt;
&lt;p&gt;The Truffle API also offers more advanced utilities to optimize your language,
such as &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/CompilerDirectives.CompilationFinal.html&quot;&gt;compilation final values&lt;/a&gt; and &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/Assumption.html&quot;&gt;assumptions&lt;/a&gt; (in particular, those two
help improve the result of partial evaluation). We won&amp;#39;t talk about these here,
but maybe some other time.&lt;/p&gt;
&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;
&lt;p&gt;To follow along with the examples, you&amp;#39;ll need to install GraalVM. In
particular, I used the 20.1.0 version with OpenJDK 11. You can &lt;a href=&quot;https://www.graalvm.org/downloads/&quot;&gt;download it
here&lt;/a&gt;. Then follow the &lt;a href=&quot;https://www.graalvm.org/getting-started/&quot;&gt;installation instructions&lt;/a&gt;. You can also add
it as a SDK to your IDE, usually you&amp;#39;ll need to point it to the Java home
directory (the thing you&amp;#39;re told to put in &lt;code&gt;JAVA_HOME&lt;/code&gt; in the installation
instructions).&lt;/p&gt;
&lt;p&gt;Note that if you&amp;#39;re on macOS and you&amp;#39;re hit with an error that reads
&lt;code&gt;“graalvm-ce-java11-20.1.0” cannot be opened because the developer cannot be verified.&lt;/code&gt; or &lt;code&gt;macOS cannot verify that this app is free from malware.&lt;/code&gt; when
trying one of GraalVM&amp;#39;s binaries (&lt;code&gt;java&lt;/code&gt;, &lt;code&gt;javac&lt;/code&gt;, ...), you can fix the
situation by running:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo xattr -dr com.apple.quarantine graalvm-ce-java11-20.1.0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(Replace &lt;code&gt;graalvm-ce-java11-20.1.0&lt;/code&gt; by the path to the root directory of your
GraalVM installation.)&lt;/p&gt;
&lt;p&gt;You&amp;#39;ll also need the Ideal Graph Visualizer (IGV), (again, I used version 20.1.0
for Java 11). IGV is normally part of the (paid/licensed) Entreprise Edition of
GraalVM, but you can evaluate it for free. Be aware that, in principle, the code
you evaluate IGV on cannot be used commercially (&lt;a href=&quot;https://en.wikipedia.org/wiki/IANAL&quot;&gt;IANAL etc&lt;/a&gt;). You can &lt;a href=&quot;https://www.oracle.com/downloads/graalvm-downloads.html&quot;&gt;download
it here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Same as before, if you get an error on macOS, you might need to run the
following (where &lt;code&gt;idealgraphvisualizer&lt;/code&gt; is the directory where you extracted
IGV):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo xattr -dr com.apple.quarantine idealgraphvisualizer&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I&amp;#39;m going to walk through my whole language example, showing you the code as I
go. However, the entire source is avaiable &lt;a href=&quot;https://github.com/norswap/truffle-tutorial&quot;&gt;on this Github repository&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let&amp;#39;s get started. We&amp;#39;ll use Maven to build the project and pull in the
dependencies. To install it, just use your package manager of choice, or follow
the &lt;a href=&quot;http://maven.apache.org/install.html&quot;&gt;install instruction&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here is the Maven config file for the project (&lt;a href=&quot;https://github.com/norswap/truffle-tutorial/blob/master/pom.xml&quot;&gt;&lt;code&gt;pom.xml&lt;/code&gt; 🔗&lt;/a&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;project xmlns=&amp;quot;http://maven.apache.org/POM/4.0.0&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; xsi:schemaLocation=&amp;quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;quot;&amp;gt;
    &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;
    &amp;lt;groupId&amp;gt;com.norswap&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;exni&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;1.0.0-SNAPSHOT&amp;lt;/version&amp;gt;
    &amp;lt;build&amp;gt;
        &amp;lt;sourceDirectory&amp;gt;src&amp;lt;/sourceDirectory&amp;gt;
        &amp;lt;plugins&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;3.8.1&amp;lt;/version&amp;gt;
                &amp;lt;configuration&amp;gt;
                    &amp;lt;source&amp;gt;11&amp;lt;/source&amp;gt;
                    &amp;lt;target&amp;gt;11&amp;lt;/target&amp;gt;
                &amp;lt;/configuration&amp;gt;
            &amp;lt;/plugin&amp;gt;
        &amp;lt;/plugins&amp;gt;
    &amp;lt;/build&amp;gt;
    &amp;lt;properties&amp;gt;
        &amp;lt;project.build.sourceEncoding&amp;gt;UTF-8&amp;lt;/project.build.sourceEncoding&amp;gt;
        &amp;lt;graalvm.version&amp;gt;20.1.0&amp;lt;/graalvm.version&amp;gt;
    &amp;lt;/properties&amp;gt;
    &amp;lt;dependencies&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.graalvm.truffle&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;truffle-api&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${graalvm.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.graalvm.truffle&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;truffle-dsl-processor&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${graalvm.version}&amp;lt;/version&amp;gt;
            &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;
    &amp;lt;/dependencies&amp;gt;
&amp;lt;/project&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There&amp;#39;s nothing incredibly tricky going on here. Sources go to &lt;code&gt;src&lt;/code&gt;
(&lt;a href=&quot;https://maven.apache.org/guides/introduction/introduction-to-the-standard-directory-layout.html&quot;&gt;&lt;code&gt;src/main/java&lt;/code&gt;&lt;/a&gt; can burn in hell), we&amp;#39;re using Java version 11, and pulling down
the Truffle API and Truffle annotation processor version 20.1.0.&lt;/p&gt;
&lt;p&gt;I&amp;#39;m calling this project &lt;code&gt;exni&lt;/code&gt; for &amp;quot;ex nihilo&amp;quot;. I&amp;#39;m cute like that.&lt;/p&gt;
&lt;h2 id=&quot;building-the-ast&quot;&gt;Building the AST&lt;/h2&gt;
&lt;p&gt;The first thing we need to do is to build a simple AST to be evaluated.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/norswap/truffle-tutorial/blob/master/src/exni/nodes/ExniNode.java&quot;&gt;&lt;code&gt;ExniNode.java&lt;/code&gt; 🔗&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;package exni.nodes;

import com.oracle.truffle.api.frame.VirtualFrame;
import com.oracle.truffle.api.nodes.Node;

public abstract class ExniNode extends Node
{
    /** main execute method */
    public abstract Object execute (VirtualFrame frame);
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We&amp;#39;ll use this as the parent class for all our AST nodes. It inherits from the
Truffle &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/nodes/Node.html&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; class itself. The &lt;code&gt;execute&lt;/code&gt; method evaluates the node and returns
a result of type &lt;code&gt;Object&lt;/code&gt;. It takes a &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/frame/VirtualFrame.html&quot;&gt;&lt;code&gt;VirtualFrame&lt;/code&gt;&lt;/a&gt;, which represents a
&lt;a href=&quot;https://en.wikipedia.org/wiki/Call_stack&quot;&gt;stack frame&lt;/a&gt;: that of the &amp;quot;function&amp;quot; (or equivalent concept) to which the node belongs.&lt;/p&gt;
&lt;p&gt;The name &lt;code&gt;execute&lt;/code&gt; is special in Truffle. Truffle is aware of node methods whose
name start with &lt;code&gt;execute&lt;/code&gt; and will call the appropriate one when it needs to
evaluate the children of another AST node. Which &lt;code&gt;execute&lt;/code&gt; method is appropriate
depends on the requested value type (&lt;code&gt;Object&lt;/code&gt; being the most general, and
therefore always applicable) as well as available parameters.&lt;/p&gt;
&lt;p&gt;Let&amp;#39;s move to the simplest node implementation possible:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/norswap/truffle-tutorial/blob/master/src/exni/nodes/IntLiteralNode.java&quot;&gt;&lt;code&gt;IntLiteralNode.java&lt;/code&gt; 🔗&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;package exni.nodes;

import com.oracle.truffle.api.frame.VirtualFrame;

public final class IntLiteralNode extends ExniNode
{
    public final long value;

    public IntLiteralNode (long value) {
        this.value = value;
    }

    @Override public Object execute (VirtualFrame frame) {
        return value;
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This node represents an integer literal that appears in source code. We
implement the &lt;code&gt;execute&lt;/code&gt; method to simply return that number.&lt;/p&gt;
&lt;p&gt;Now, a node for the &lt;code&gt;+&lt;/code&gt; operator:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/norswap/truffle-tutorial/blob/master/src/exni/nodes/AddNode.java&quot;&gt;&lt;code&gt;AddNode.java&lt;/code&gt; 🔗&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;package exni.nodes;

import com.oracle.truffle.api.dsl.Fallback;
import com.oracle.truffle.api.dsl.NodeChild;
import com.oracle.truffle.api.dsl.Specialization;
import exni.ExniException;

@NodeChild(&amp;quot;left&amp;quot;)
@NodeChild(&amp;quot;right&amp;quot;)
public abstract class AddNode extends ExniNode
{
    public static AddNode create (ExniNode left, ExniNode right) {
        return AddNodeGen.create(left, right);
    }

    @Specialization protected long addLongs (long left, long right) {
        return left + right;
    }

    @Specialization String addStrings (String left, String right) {
        return left + right;
    }

    @Fallback protected void typeError (Object left, Object right) {
        throw new ExniException(&amp;quot;type error: args must be two longs, or two strings&amp;quot;, this);
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The two &lt;code&gt;NodeChild&lt;/code&gt; annotations define children nodes of this AST node. By
default, these have the type of the superclass (&lt;code&gt;ExniNode&lt;/code&gt; in this case), but
it&amp;#39;s also possible to specify the type explicitly with the &lt;code&gt;type&lt;/code&gt; annotation
element.&lt;/p&gt;
&lt;p&gt;This class is abstract, but Truffle will generate a concrete implementation for
us, named &lt;code&gt;AddNodeGen&lt;/code&gt;. If you load &lt;a href=&quot;exni-github&quot;&gt;the project&lt;/a&gt; in your IDE, you
can navigate there easily (import the Maven project and build first). We will
examine this class shortly.&lt;/p&gt;
&lt;p&gt;The logic of the class is implemented using the &lt;em&gt;specialization system&lt;/em&gt;. Instead
of overriding the &lt;code&gt;execute&lt;/code&gt; method(s), we mark a series of method with the
&lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/dsl/Specialization.html&quot;&gt;&lt;code&gt;Specialization&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/dsl/Fallback.html&quot;&gt;&lt;code&gt;Fallback&lt;/code&gt;&lt;/a&gt; annotations.&lt;/p&gt;
&lt;p&gt;The idea is that when the node is executed, Truffle will pick the first matching
specialization and run it. There are two criteria used when matching
specializations: the type of its parameters and additionals conditions specified
by the &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/dsl/Specialization.html#guards--&quot;&gt;&lt;code&gt;guards&lt;/code&gt;&lt;/a&gt; annotation element.&lt;/p&gt;
&lt;p&gt;This is a very simple node, so it only has two specializations and a fallback,
one for when both values are &lt;code&gt;long&lt;/code&gt; (Truffle will automatically perform unboxing
whenever required), and one for when both values are strings. Additionally,
there is a fallback specialization. A fallback specialization is a
specialization that will always match when (and only when) no other
specialization does. In this case, we just throw an type error.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The implementation of &lt;code&gt;ExniException&lt;/code&gt; is irrelevant, excepted that all
exceptions thrown during guest language execution must implement
&lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/TruffleException.html&quot;&gt;&lt;code&gt;TruffleException&lt;/code&gt;&lt;/a&gt; — excepted those exceptions that represent errors in the
implementation itself.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Note that the names of the specialization methods are irrelevant, they could
have been anything, including the same name (as long as it generates distinct
method overloads, of course).&lt;/p&gt;
&lt;h2 id=&quot;specializations-under-the-hood&quot;&gt;Specializations: Under The Hood&lt;/h2&gt;
&lt;p&gt;Let&amp;#39;s look at the class generated by Truffle to implement our abstract
&lt;code&gt;AddNode&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://gist.github.com/norswap/a235123a4aa3a236fbdeb653ea389362#file-addnodegen-java&quot;&gt;&lt;code&gt;AddNodeGen 🔗&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;package exni.nodes;
// ...

@GeneratedBy(AddNode.class)
public final class AddNodeGen extends AddNode {

    @Child private ExniNode left_;
    @Child private ExniNode right_;
    @CompilationFinal private int state_;

    private AddNodeGen(ExniNode left, ExniNode right) {
        this.left_ = left;
        this.right_ = right;
    }

    @Override
    public Object execute(VirtualFrame frameValue) {
        int state = state_;
        Object leftValue_ = this.left_.execute(frameValue);
        Object rightValue_ = this.right_.execute(frameValue);
        if ((state &amp;amp; 0b1) != 0 /* is-active addLongs(long, long) */ &amp;amp;&amp;amp; leftValue_ instanceof Long) {
            long leftValue__ = (long) leftValue_;
            if (rightValue_ instanceof Long) {
                long rightValue__ = (long) rightValue_;
                return addLongs(leftValue__, rightValue__);
            }
        }
        if ((state &amp;amp; 0b10) != 0 /* is-active addStrings(String, String) */ &amp;amp;&amp;amp; leftValue_ instanceof String) {
            String leftValue__ = (String) leftValue_;
            if (rightValue_ instanceof String) {
                String rightValue__ = (String) rightValue_;
                return addStrings(leftValue__, rightValue__);
            }
        }
        CompilerDirectives.transferToInterpreterAndInvalidate();
        return executeAndSpecialize(leftValue_, rightValue_);
    }

    private Object executeAndSpecialize(Object leftValue, Object rightValue) {
        int state = state_;
        if (leftValue instanceof Long) {
            long leftValue_ = (long) leftValue;
            if (rightValue instanceof Long) {
                long rightValue_ = (long) rightValue;
                this.state_ = state = state | 0b1 /* add-active addLongs(long, long) */;
                return addLongs(leftValue_, rightValue_);
            }
        }
        if (leftValue instanceof String) {
            String leftValue_ = (String) leftValue;
            if (rightValue instanceof String) {
                String rightValue_ = (String) rightValue;
                this.state_ = state = state | 0b10 /* add-active addStrings(String, String) */;
                return addStrings(leftValue_, rightValue_);
            }
        }
        this.state_ = state = state | 0b100 /* add-active typeError(Object, Object) */;
        typeError(leftValue, rightValue);
        return null;
    }

    @Override
    public NodeCost getCost() { /* ... */ }

    private static boolean fallbackGuard_(int state, Object leftValue, Object rightValue) {
        if (((state &amp;amp; 0b1)) == 0 /* is-not-active addLongs(long, long) */ &amp;amp;&amp;amp; leftValue instanceof Long &amp;amp;&amp;amp; rightValue instanceof Long) {
            return false;
        }
        if (((state &amp;amp; 0b10)) == 0 /* is-not-active addStrings(String, String) */ &amp;amp;&amp;amp; leftValue instanceof String &amp;amp;&amp;amp; rightValue instanceof String) {
            return false;
        }
        return true;
    }

    public static AddNode create(ExniNode left, ExniNode right) {
        return new AddNodeGen(left, right);
    }

}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It has three fields. The first two were generated by the &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/dsl/NodeChild.html&quot;&gt;&lt;code&gt;NodeChild&lt;/code&gt;&lt;/a&gt;
annotations. There is also a &lt;code&gt;create&lt;/code&gt; method at the bottom, which can be used to
get create an instance of &lt;code&gt;AddNode&lt;/code&gt; if given its two children. The third field
(&lt;code&gt;state_&lt;/code&gt;) keeps track of what specializations are active for the node.&lt;/p&gt;
&lt;p&gt;Active specializations? What does that even mean? Well, whenever a
specialization is first used, it becomes active. One node can have multiple
specializations active at the same time. A new node starts with no active
specializations.&lt;/p&gt;
&lt;p&gt;For instance, let&amp;#39;s imagine a small syntax and a dummy program for our language:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def add(x, y)
    return x + y; // AddNode 1

add(1, 2)
add(&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;)
1 + 2 // AddNode 2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I have used comments to mark the two locations where an &lt;code&gt;AddNode&lt;/code&gt; is generated.
&lt;code&gt;AddNode 1&lt;/code&gt; will see both integer and string values, and so both specializations
will become active. &lt;code&gt;AddNode 2&lt;/code&gt;, on the other hand, will only ever see integers.&lt;/p&gt;
&lt;p&gt;But why do we need to distinguish between active and inactive specializations?
Doing so helps Graal&amp;#39;s JIT compiler generate better compiled code. Whenever the
node has to be JIT-compiled, Graal will only emit machine code for the
specializations that have been activated. Having less possibilities has multiple
benefits. First there are less cases to check. Second, the reduced set of
possibilities may enable further optimizations (especially when there is only a
single active specialization). Finally, all else being equal, shorter code is
generally faster (more efficient cache utilisation).&lt;/p&gt;
&lt;p&gt;This raises one more question: what happens if, after generating compiled code,
we encounter a case covered by a specialization that hasn&amp;#39;t been activated yet?
In that case, the compiled code is invalidated, and the new specialization is
activated. New compiled code may subsequently be generated.&lt;/p&gt;
&lt;p&gt;Let&amp;#39;s go back to the code. Truffle has automatically generated the &lt;code&gt;execute&lt;/code&gt;
method that was left abstract (in &lt;code&gt;ExniNode&lt;/code&gt;, &lt;code&gt;AddNode&lt;/code&gt;&amp;#39;s superclass). It has
also generated an &lt;code&gt;executeAndSpecialize&lt;/code&gt; method that &lt;code&gt;execute&lt;/code&gt; calls. Relating
to our previous discussion, &lt;code&gt;execute&lt;/code&gt; should be understood as running the active
specializations, while &lt;code&gt;executeAndSpecialize&lt;/code&gt; is responsible to activate new
specializations.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;execute&lt;/code&gt; starts by executing the two children nodes. Then, if our &lt;code&gt;addLongs&lt;/code&gt;
specialization is active, and if both resulting values can be cast to &lt;code&gt;long&lt;/code&gt;, it
calls &lt;code&gt;AddNode#addLongs&lt;/code&gt;. Otherwise, if our &lt;code&gt;addStrings&lt;/code&gt; specialization is
active and if the values can be cast to &lt;code&gt;String&lt;/code&gt;, it calls &lt;code&gt;AddNode#addStrings&lt;/code&gt;.
If that&amp;#39;s not possible either, it calls
&lt;code&gt;CompilerDirectives.transferToInterpreterAndInvalidate()&lt;/code&gt; and then
&lt;code&gt;executeAndSpecialize&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;executeAndSpecialize&lt;/code&gt; does almost the same thing, but does not check for
activated specializations, only for the specific conditions in which a
specialization may apply. Additionally, it activates any specialization it
calls. Finally, if none of the two specialization matches, it calls our fallback
specialization &lt;code&gt;AddNode#typeError&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now you might think from this that fallback specializations may never be
activated. This is not so. The only reason that &lt;code&gt;typeError&lt;/code&gt; does not appear in
&lt;code&gt;execute&lt;/code&gt; is that its return type (&lt;code&gt;void&lt;/code&gt;) is incompatible with that of
&lt;code&gt;execute&lt;/code&gt; (&lt;code&gt;Object&lt;/code&gt;). If we wanted the specialization to be activable, we could
change its return type to &lt;code&gt;Object&lt;/code&gt;. Since it is an extraordinary error
condition, I chose not do that here. I encourage you to try it and check that
the generated code changed accordingly.&lt;/p&gt;
&lt;p&gt;Note you can observe similar effects when multiple &lt;code&gt;execute&lt;/code&gt; methods have
different type parameters. The &lt;code&gt;execute&lt;/code&gt; methods will be JIT-compiled
separately, which can lead to more efficient code for the method whose signature
is more restrictive (as it doesn&amp;#39;t have to include the activated specializations
that don&amp;#39;t match the signature).&lt;/p&gt;
&lt;h3 id=&quot;how-the-magic-happens&quot;&gt;How the Magic Happens&lt;/h3&gt;
&lt;p&gt;Why is the logic split between &lt;code&gt;execute&lt;/code&gt; and &lt;code&gt;executeAndSpecialize&lt;/code&gt;? It&amp;#39;s
because &lt;code&gt;execute&lt;/code&gt; is what will become JIT-compiled. All its calls to
specializations are guarded by conditions on &lt;code&gt;_state&lt;/code&gt;. &lt;code&gt;_state&lt;/code&gt; is marked with
&lt;code&gt;CompilationFinal&lt;/code&gt; annotation. This annotation tells Truffle to consider that
the field is effectively final for partial evaluation and compilation purposes.
In practice, this means that calls to inactive specializations will be pruned
from the compiled code, hence only retaining the active specializations. It&amp;#39;s
exactly what we want to get the benefits I outlined a bit before.&lt;/p&gt;
&lt;p&gt;This also explains why specialization activation is relegated to
&lt;code&gt;executeAndSpecialize&lt;/code&gt;. That method will never be compiled, because it is only
called from the &lt;code&gt;execute&lt;/code&gt; methods, and always preceded by a call to
&lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/CompilerDirectives.html#transferToInterpreterAndInvalidate--&quot;&gt;&lt;code&gt;CompilerDirectives.transferToInterpreterAndInvalidate&lt;/code&gt;&lt;/a&gt; which tells Truffle to
invalidate the current compiled code for the method! Truffle is aware of this,
and so will never inline &lt;code&gt;executeAndSpecialized&lt;/code&gt; into &lt;code&gt;execute&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;That &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/CompilerDirectives.html#transferToInterpreterAndInvalidate--&quot;&gt;&lt;code&gt;CompilerDirectives.transferToInterpreterAndInvalidate&lt;/code&gt;&lt;/a&gt; call is also
what ensures that we discard the current compiled code when a new specialization
becomes active.&lt;/p&gt;
&lt;p&gt;You can learn more about the specialization system in &lt;a href=&quot;https://www.researchgate.net/publication/333510523_Truffle_DSL_A_DSL_for_Building_Self-Optimizing_AST_Interpreters&quot;&gt;Christian Hummer&amp;#39;s master
thesis&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;running&quot;&gt;Running&lt;/h2&gt;
&lt;p&gt;Okay, so we have our grand addition/concatenation node. Let&amp;#39;s actually use it.
Here is our main class:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/norswap/truffle-tutorial/blob/master/src/exni/ExniMain.java&quot;&gt;&lt;code&gt;ExniMain&lt;/code&gt; 🔗&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;package exni;

import com.oracle.truffle.api.Truffle;
import exni.nodes.AddNode;
import exni.nodes.IntLiteralNode;
import exni.nodes.ExniRootNode;

public abstract class ExniMain
{
    public static void main (String[] args)
    {
        var add = AddNode.create(new IntLiteralNode(1), new IntLiteralNode(2));
        var root = new ExniRootNode(add);
        var target = Truffle.getRuntime().createCallTarget(root);

        // Uncomment this in order to use a CountNode instead of an AddNode.
        // target = Truffle.getRuntime().createCallTarget(new MainNode(new CountNode()));

        System.out.println(target.call());

        // Uncomment this in order to force the compilation of the node.
        // while (true) target.call();
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;Don&amp;#39;t worry about the &amp;quot;uncomment&amp;quot; bit. We&amp;#39;ll get to those later.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We construct our &lt;code&gt;AddNode&lt;/code&gt; as expected, but then we wrap it into a
&lt;code&gt;ExniRootNode&lt;/code&gt;. This is an implementation of the Truffle &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/nodes/RootNode.html&quot;&gt;&lt;code&gt;RootNode&lt;/code&gt;&lt;/a&gt; class. In
Truffle, runnable nodes belong to a tree with &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/nodes/RootNode.html&quot;&gt;&lt;code&gt;RootNode&lt;/code&gt;&lt;/a&gt; at the root. For
instance, there is typically one &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/nodes/RootNode.html&quot;&gt;&lt;code&gt;RootNode&lt;/code&gt;&lt;/a&gt; per function definition.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/nodes/RootNode.html&quot;&gt;&lt;code&gt;RootNode&lt;/code&gt;&lt;/a&gt; also holds a reference to a &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/frame/FrameDescriptor.html&quot;&gt;&lt;code&gt;FrameDescriptor&lt;/code&gt;&lt;/a&gt; that describes the
parameters expected by the node (in the case of a function definition: the
function&amp;#39;s parameters). We do not need to specify this here, since our addition
expression does not take parameters.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ExniRootNode&lt;/code&gt; doesn&amp;#39;t do anything fancy by itself: it just wraps an &lt;code&gt;ExniNode&lt;/code&gt;,
and extends &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/nodes/RootNode.html&quot;&gt;&lt;code&gt;RootNode&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/norswap/truffle-tutorial/blob/master/src/exni/ExniRootNode.java&quot;&gt;&lt;code&gt;ExniRootNode&lt;/code&gt; 🔗&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;package exni.nodes;

import com.oracle.truffle.api.frame.VirtualFrame;
import com.oracle.truffle.api.nodes.RootNode;

public final class ExniRootNode extends RootNode
{
    @SuppressWarnings(&amp;quot;FieldMayBeFinal&amp;quot;)
    private @Child ExniNode root;

    public ExniRootNode(ExniNode root) {
        super(null);
        this.root = root;
    }

    @Override public Object execute (VirtualFrame frame) {
        return root.execute(frame);
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The next step is to call
&lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/TruffleRuntime.html#createCallTarget-com.oracle.truffle.api.nodes.RootNode-&quot;&gt;&lt;code&gt;Truffle.getRuntime().createCallTarget(root)&lt;/code&gt;&lt;/a&gt; to create a
&lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/CallTarget.html&quot;&gt;&lt;code&gt;CallTarget&lt;/code&gt;&lt;/a&gt;. The call target represents something you can call (in this case,
it&amp;#39;s our add expression).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that in general, expressions don&amp;#39;t have an associated &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/CallTarget.html&quot;&gt;&lt;code&gt;CallTarget&lt;/code&gt;&lt;/a&gt;. It&amp;#39;s
typically reserved for callable things like functions and methods. But our
language does not have those, and we need a &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/CallTarget.html&quot;&gt;&lt;code&gt;CallTarget&lt;/code&gt;&lt;/a&gt; to run the code.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We use a &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/CallTarget.html&quot;&gt;&lt;code&gt;CallTarget&lt;/code&gt;&lt;/a&gt; instead of call the node&amp;#39;s &lt;code&gt;execute&lt;/code&gt; method directly so
that Truffle may perform some bookkeeping on the call. In particular, the
&lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/CallTarget.html&quot;&gt;&lt;code&gt;CallTarget&lt;/code&gt;&lt;/a&gt; records how often our node is called, so that Truffle may decide
when to JIT-compile it. It can also be used for &lt;a href=&quot;https://en.wikipedia.org/wiki/Instrumentation_(computer_programming)&quot;&gt;instrumentation&lt;/a&gt;. Finally, it
wires up the &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/CallTarget.html&quot;&gt;&lt;code&gt;CallTarget&lt;/code&gt;&lt;/a&gt; so that it will automatically create an object
representing a &lt;a href=&quot;https://en.wikipedia.org/wiki/Call_stack&quot;&gt;stack frame&lt;/a&gt; (i.e. the &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/frame/VirtualFrame.html&quot;&gt;&lt;code&gt;VirtualFrame&lt;/code&gt;&lt;/a&gt; argument taken by our
various &lt;code&gt;execute&lt;/code&gt; methods) when called.&lt;/p&gt;
&lt;p&gt;All that is left to do is to invoke &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/CallTarget.html&quot;&gt;&lt;code&gt;CallTarget#call&lt;/code&gt;&lt;/a&gt; and print
the result.&lt;/p&gt;
&lt;p&gt;To run this after building with Maven, you can use the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;M2=$HOME/.m2/repository
java \
    -Dtruffle.class.path.append=target/classes \
    --add-exports org.graalvm.truffle/com.oracle.truffle.api.nodes=ALL-UNNAMED  \
    --add-exports org.graalvm.truffle/com.oracle.truffle.api=ALL-UNNAMED \
    -classpath target/classes:$M2/org/graalvm/truffle/truffle-api/20.1.0/truffle-api-20.1.0.jar:$M2/org/graalvm/sdk/graal-sdk/20.1.0/graal-sdk-20.1.0.jar \
    exni.ExniMain&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A couple practical points:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you need to be at the repository&amp;#39;s root&lt;/li&gt;
&lt;li&gt;&lt;code&gt;java&lt;/code&gt; must point to the GraalVM version&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$M2&lt;/code&gt; should point to your m2 repository (by default it&amp;#39;s &lt;code&gt;$HOME/.m2/repository&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;You can configure your IDE to run this instead, you&amp;#39;ll just need to specify
the main class and all the other non-classpath arguments.&lt;/li&gt;
&lt;li&gt;Don&amp;#39;t forget to run this with GraalVM&amp;#39;s &lt;code&gt;java&lt;/code&gt;! It will run with other &lt;code&gt;java&lt;/code&gt;
but Truffle nodes won&amp;#39;t be compiled specially.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lo and behold, your console should print the glorious number 3!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Extra technical note: The &lt;code&gt;add-exports&lt;/code&gt; arguments are needed because classes
in &lt;code&gt;com.oracle.truffle.api&lt;/code&gt; need to be loaded via Truffle&amp;#39;s own class loader.
The &lt;code&gt;add-exports&lt;/code&gt; arguments ensure that the class loader associated with the
module is used. Similarly, defining &lt;code&gt;truffle.class.path.append&lt;/code&gt; enables that
classloader to find our own node classes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;igv&quot;&gt;IGV&lt;/h2&gt;
&lt;p&gt;To run IGV, simply run the &lt;code&gt;bin/idealgraphvisualizer&lt;/code&gt; in your IGV install
directory (just wherever you unzipped the downloaded archive). This will tie up
the console in which IGV is run — if you it to run in the background, I
recommend using &lt;a href=&quot;https://www.man7.org/linux/man-pages/man1/screen.1.html&quot;&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;screen -dm -S igv bin/idealgraphvisualizer
screen -r igv # to attach to the screen&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next you&amp;#39;ll need to configure your java run command in order for it to generate
compilation graphs and send them to IGV. You can achieve this by adding the
following flags to your Java command: &lt;code&gt;-Dgraal.Dump=Truffle -Dgraal.PrintGraph=Network&lt;/code&gt;. Full command:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;M2=$HOME/.m2/repository
java \
    -Dtruffle.class.path.append=target/classes \
    --add-exports org.graalvm.truffle/com.oracle.truffle.api.nodes=ALL-UNNAMED  \
    --add-exports org.graalvm.truffle/com.oracle.truffle.api=ALL-UNNAMED \
    -classpath target/classes:$M2/org/graalvm/truffle/truffle-api/20.1.0/truffle-api-20.1.0.jar:$M2/org/graalvm/sdk/graal-sdk/20.1.0/graal-sdk-20.1.0.jar \
    -Dgraal.Dump=Truffle \
    -Dgraal.PrintGraph=Network \
    exni.ExniMain&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;Dump=Truffle&lt;/code&gt; option means to only dump graphs relevant to analysing
Truffle&amp;#39;s performance (for instance it won&amp;#39;t include graphs for compiled Java
code that is not related to Truffle).&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;PrintGraph=Network&lt;/code&gt; option means to send the graphs directly to a running
IGV over the network. If you omit this, it will default to dumping the graphs as
files in &lt;code&gt;graal_dumps/&lt;/code&gt; in the working directory, and you can open those later
from IGV.&lt;/p&gt;
&lt;p&gt;These flags are documented on Graal&amp;#39;s git repository &lt;a href=&quot;https://github.com/oracle/graal/tree/master/compiler/src/org.graalvm.compiler.debug/src/org/graalvm/compiler/debug/doc-files&quot;&gt;here
(master)&lt;/a&gt; (&lt;a href=&quot;https://github.com/oracle/graal/tree/32cd3db91fe4a141ee3016ac18b0f4cc9f51e447/compiler/src/org.graalvm.compiler.debug/src/org/graalvm/compiler/debug/doc-files&quot;&gt;future-proof(er), commit-specific
link&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;IGV lets you inspect the result of JIT compilation. Our code so far is very
simple, and does not trigger JIT compilation. However, we can trigger
compilation simply by calling our &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/CallTarget.html&quot;&gt;&lt;code&gt;CallTarget&lt;/code&gt;&lt;/a&gt; withing an infinite loop
(&lt;code&gt;while (true) target.call();&lt;/code&gt;).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Remember that we said that &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/CallTarget.html&quot;&gt;&lt;code&gt;CallTarget&lt;/code&gt;&lt;/a&gt; counts calls in order to decide what
to optimize? You will now see it&amp;#39;s true: calling inside a loop causes the
counter to cross the threshold for compilation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Run it, you should now see something like this in IGV:&lt;/p&gt;
&lt;img class=&quot;centered&quot; src=&quot;left_sidebar.png&quot; width=&quot;400rem&quot; /&gt;

&lt;p&gt;If you select the AST graph, you&amp;#39;ll see this, which is exactly the node hiearchy
we build in our main class:&lt;/p&gt;
&lt;img class=&quot;centered&quot; src=&quot;ast_sum.png&quot; width=&quot;300rem&quot; /&gt;

&lt;p&gt;The &amp;quot;call tree&amp;quot; graph is not interesting because our nodes do not contain a
guest language function call (our language doesn&amp;#39;t even have those).&lt;/p&gt;
&lt;p&gt;The &amp;quot;Graal Graphs&amp;quot; section contains graphs at various stages of the compilation
process. We&amp;#39;ll be particularly interested in &amp;quot;Before phase Lowering&amp;quot; which
contains the graphs obtained after all of Truffle&amp;#39;s optimizations have been run
(GraalMV still run generic optimizations after this however). In this case,
you&amp;#39;ll see this:&lt;/p&gt;
&lt;img class=&quot;centered&quot; src=&quot;graph_sum_truffle.png&quot; width=&quot;500rem&quot; /&gt;

&lt;p&gt;Which is to say, almost nothing! The compiler was smart and the addition of two
constants was completely optimized away. Do you see that small &lt;code&gt;62&lt;/code&gt; node? &lt;code&gt;C(3)&lt;/code&gt;
means &amp;quot;constant with value 3&amp;quot; and that&amp;#39;s the result of our addition. At this
stage, it still needs to &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/java/data/autoboxing.html&quot;&gt;box&lt;/a&gt; that value though. But if you look to any further
graph, you&amp;#39;ll see:&lt;/p&gt;
&lt;img class=&quot;centered&quot; src=&quot;graph_sum_further.png&quot; width=&quot;400rem&quot; /&gt;

&lt;p&gt;The result of the boxing operation is a constant instance of &lt;code&gt;Long&lt;/code&gt;, so we can
eliminate the boxing operation.&lt;/p&gt;
&lt;p&gt;You may wonder why this does not get optimized even further. After all, the
return value is never used. The answer is that the logic that calls the call
target (&lt;code&gt;target.call()&lt;/code&gt;) is quite complex and therefore cannot be optimized
away. You can actually get to see the graph for that by replacing the
&lt;code&gt;-Dgraal.Dump=Truffle&lt;/code&gt; flag by &lt;code&gt;-Dgraal.Dump=:1&lt;/code&gt; and looking for the code of the
main method (&lt;code&gt;exni.ExniMain.main&lt;/code&gt;). You can also move the loop to another method
if you want to get rid of the part of the graph that corresponds to the
construction of the AST. It looks &lt;a href=&quot;graph_main.png&quot;&gt;something like this&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So we can note that calling the call target within a loop is not a great idea.
We could probably see that our &lt;code&gt;AddNode&lt;/code&gt; gets optimized away completely if we
implemented a loop in the guest language itself.&lt;/p&gt;
&lt;h2 id=&quot;a-slightly-harder-graph-and-what-does-it-mean-anyway&quot;&gt;A slightly harder graph, and what does it mean, anyway?&lt;/h2&gt;
&lt;p&gt;Okay, so let&amp;#39;s see some actual graphs. We&amp;#39;ll create a new node that doesn&amp;#39;t
optimize away. This node will be a counter that updates a public field:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/norswap/truffle-tutorial/blob/master/src/exni/nodes/CountNode.java&quot;&gt;&lt;code&gt;CountNode&lt;/code&gt; 🔗&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;package exni.nodes;

import com.oracle.truffle.api.frame.VirtualFrame;

public final class CountNode extends ExniNode {

    public long counter;

    @Override public Object execute (VirtualFrame frame) {
        return counter++;
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Even though we&amp;#39;ll never read the counter, the field is public and the compiler
cannot prove that it won&amp;#39;t be read, so it has to be dutifully incremented.&lt;/p&gt;
&lt;p&gt;If you modify the main method to run this node instead, and go to the graphs
(still &amp;quot;Before phase Lowering&amp;quot;) — click for full size version:&lt;/p&gt;
&lt;a href=&quot;graph_counter_full.png&quot;&gt;
&lt;img class=&quot;centered&quot; src=&quot;graph_counter_full.png&quot; /&gt;
&lt;/a&gt;

&lt;p&gt;First off, all the green stuff is &amp;quot;state&amp;quot;. I&amp;#39;ll be honest: I&amp;#39;m not too sure what
&amp;quot;state&amp;quot; is supposed to be in general, but in this case (and in conjunction with
grey boxes), it shows you a couple of the methods invoked to start the node&amp;#39;s
execution, as well as relevant parameter to these methods. In particular, node
21 shows an instance of Truffle&amp;#39;s internal &lt;a href=&quot;https://github.com/oracle/graal/blob/7980245f92d00f4b6c38688d46f0a586ec397fde/compiler/src/org.graalvm.compiler.truffle.runtime/src/org/graalvm/compiler/truffle/runtime/FrameWithoutBoxing.java&quot;&gt;&lt;code&gt;FrameWithoutBoxing&lt;/code&gt;&lt;/a&gt; class, and all
the &lt;code&gt;VirtualArray&lt;/code&gt; nodes to the right of that are its fields.&lt;/p&gt;
&lt;p&gt;Anyway, you can hide the state in the &amp;quot;Filters&amp;quot; panel on the right in IGV. You
could also hit &amp;quot;Remove floating&amp;quot; to get rid of the grey boxes, but I want to
keep node 44 (+). Instead I&amp;#39;ve hidden the other grey boxes manually, and we&amp;#39;re
left with this:&lt;/p&gt;
&lt;img class=&quot;centered&quot; src=&quot;graph_counter_simple.png&quot; width=&quot;550rem&quot; /&gt;

&lt;p&gt;This is fairly simple to understand: our node loads the &lt;code&gt;counter&lt;/code&gt; field in node
41, and adds 1 to it in node 44. Notice how one operand comes from the blue
line, while the other is given by the small box 43 on top: &lt;code&gt;C(1) i64&lt;/code&gt; means that
the operand is the constant 1, which is a 64-bits integer. We store the result
of this operation back into the field in node 42. Notice how node 41 has a line
going to node 44 and one line going to node 72 (Box), which is the return value?
That&amp;#39;s because we used &lt;code&gt;return counter++&lt;/code&gt; (and not &lt;code&gt;return ++counter&lt;/code&gt;): the node
evaluates to the pre-incremented value!&lt;/p&gt;
&lt;p&gt;From this explanation, you can see that blue lines represent data flow: a blue
line going down means the data coming out of the higher node is being used by
the lower node. There is also a thick red line: that represents control flow,
i.e. it determines what operations happen before which others.&lt;/p&gt;
&lt;p&gt;We&amp;#39;ve barely scratched the surface of Graal graphs here (we haven&amp;#39;t even talked
about conditionals and loops). If you want to know more, I highly recommend
these two writeups by Chris Seaton (the first one is essentially a much shorter
teaser version of the second one, which you really ought to read in full if
you&amp;#39;re going to work with IGV):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://engineering.shopify.com/blogs/engineering/understanding-programs-using-graphs&quot;&gt;Understanding Programs Using Graphs @ Shopify Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://chrisseaton.com/truffleruby/basic-graal-graphs/&quot;&gt;Understanding Basic Graal Graphs @ chrisseaton.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;going-further&quot;&gt;Going Further&lt;/h2&gt;
&lt;p&gt;That&amp;#39;s it for today! I have some extra material that was cut from this article
that I might rework and post in a couple weeks. Namely, it covers how to set up
the boilerplate to create a &amp;quot;real&amp;quot; &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/TruffleLanguage.html&quot;&gt;Truffle guest language&lt;/a&gt; and how to implement
loops inside the guest language.&lt;/p&gt;
&lt;p&gt;If you want to learn more about Graal &amp;amp; Truffle, here a few pointers on where to
find information &amp;amp; documentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.researchgate.net/publication/333510523_Truffle_DSL_A_DSL_for_Building_Self-Optimizing_AST_Interpreters&quot;&gt;Christian Hummer&amp;#39;s master thesis&lt;/a&gt; document the Truffle DSL,
i.e. how to actually use Truffle. It&amp;#39;s very clearly written and if you&amp;#39;re
going to jump on the Truffle bandwagon, you really ought to read chapters 2
and 3. This will give you a good understanding of the principles behind the
Truffle DSL.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/&quot;&gt;The Truffle Javadoc&lt;/a&gt; is very decent, but it will rarely tell you the &lt;em&gt;why&lt;/em&gt; of
things.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;a href=&quot;https://github.com/graalvm/simplelanguage&quot;&gt;SimpleLanguage example&lt;/a&gt; is a full language implemented with a lot of
comments as an example of how things should generally be done in Truffle. It&amp;#39;s
the main ressource on how to actually do the advanced stuff.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I also encourage you to experiment with Truffle directly (showing you how was
the whole point of this article)!&lt;/p&gt;
&lt;p&gt;In closing, I want to thank my amazing and talented colleagues at Oracle, who
patiently answer my many questions, and in particular Benoit Daloze — for
teaching me most of what I know about Truffle, Christian Humer — for always
helping wherever Truffle is concerned, and Boris Spasojevic for supplying very
helpful feedback on the present article.&lt;/p&gt;
&lt;link href=&#39;https://cdnjs.cloudflare.com/ajax/libs/prism/1.19.0/themes/prism-tomorrow.min.css&#39; rel=&#39;stylesheet&#39; /&gt;
&lt;script
src=&#39;https://cdnjs.cloudflare.com/ajax/libs/prism/1.19.0/components/prism-core.min.js&#39;&gt;&lt;/script&gt;
&lt;script
src=&#39;https://cdnjs.cloudflare.com/ajax/libs/prism/1.19.0/plugins/autoloader/prism-autoloader.min.js&#39;&gt;&lt;/script&gt;
      </description>
      <pubDate>2020-07-17T22:00:00.000Z</pubDate>
      <link>http://norswap.com/truffle-tutorial</link>
      <guid isPermaLink="true">http://norswap.com/truffle-tutorial</guid>
    </item>
    <item>
      <title>Animes, Shows &amp; Movies Reviews 6</title>
      <description>
&lt;p&gt;Previously: &lt;a href=&quot;/every-anime/&quot;&gt;One&lt;/a&gt; / &lt;a href=&quot;/more-anime/&quot;&gt;Two&lt;/a&gt; / &lt;a href=&quot;/even-more-anime/&quot;&gt;Three&lt;/a&gt; / &lt;a href=&quot;/reviews-4&quot;&gt;Four&lt;/a&gt; / &lt;a href=&quot;/reviews-5&quot;&gt;Five&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;violet-evergarden&quot;&gt;Violet Evergarden&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;violet-evergarden.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;I knew this one by name, though I didn&amp;#39;t know what it was about. We
binged-watched in two sittings with a few friends.&lt;/p&gt;
&lt;p&gt;I think the word I dimly recall being associated with Violet Evergarden is
&amp;quot;poetry&amp;quot;. And I can understand it. It looks georgeous, and it&amp;#39;s also sentimental
without being overly hokey.&lt;/p&gt;
&lt;p&gt;I think the show&amp;#39;s perspective is uniquely interesting: we following a character
(Violet) that starts of as completely emotionally imature (in the sense of
wholly unaware what emotions are, and how they affect her and others) in a
journey of emotional discovery.&lt;/p&gt;
&lt;p&gt;Very recommended.&lt;/p&gt;
&lt;h2 id=&quot;my-hero-academia-season-4&quot;&gt;My Hero Academia Season 4&lt;/h2&gt;
&lt;p&gt;Previously: &lt;a href=&quot;/even-more-anime/#my-hero-academia-season-3&quot;&gt;Season 3&lt;/a&gt;, &lt;a href=&quot;/more-anime/#my-hero-academia&quot;&gt;Season 1 &amp;amp; 2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;My Hero Academia has been one of my favorite anime, and it&amp;#39;s still great.&lt;/p&gt;
&lt;p&gt;That being said, this season is perhaps the weakest so far (but still strong in
absolute terms).&lt;/p&gt;
&lt;p&gt;My criticism here is that the arcs are too drawn out, some episodes almost
bordering on being fillers. Not reeeeally, but what I mean is this: One of Hero
Academia&amp;#39;s strength is being relatively earnest, and clear with its message.
It&amp;#39;s going to tell you what it wants to say. In this season, they did that, but
also — or so it felt to me — occasionally beat you over the head with it. I&amp;#39;m
notably thinking of a whole episode where the whole point is to affirm how much
certain characters care about saving another character, in a way that isn&amp;#39;t very
interesting. And generally, things could have been condensed more.&lt;/p&gt;
&lt;p&gt;Interestingly, this criticism holds both for the first longer, &amp;quot;heavier&amp;quot; arc,
and for the second shorter more light-hearted arc.&lt;/p&gt;
&lt;h2 id=&quot;idinvaded&quot;&gt;ID:Invaded&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;id-invaded.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;ID: Invaded was a really good surprise of a show. It&amp;#39;s part murder-mystery, part
Matrix/Inception-style techno-thriller, part revenge flick.&lt;/p&gt;
&lt;p&gt;What I appreciated most about the show is how it dealt out information
sparingly, keeping you guessing at the nature of things, without ever being
confusing, nor relying on information dumps. The pacing is also pretty good.&lt;/p&gt;
&lt;p&gt;It&amp;#39;s even (at least on one occasion) really touching. And with only 13 episodes,
it&amp;#39;s damn short. A perfect binge-watching candidate.&lt;/p&gt;
&lt;h2 id=&quot;stranger-things-season-3&quot;&gt;Stranger Things, Season 3&lt;/h2&gt;
&lt;p&gt;I had watched season 1 and season 2 (but not reviewed them on here, I only did
anime back then), and enjoyed them a lot.&lt;/p&gt;
&lt;p&gt;Season 3 is, mostly, more of the same. The narrative structure is very similar.
I maybe felt that it took a bit too long to set things up, to get to the point
where our heroes are actually active rather than clueless. But maybe it was like
that for previous seasons too and I forgot.&lt;/p&gt;
&lt;p&gt;The ending redeems whatever slack the start may have. And what a sucker punch of
an ending that is! I&amp;#39;m glad season 4 has been confirmed and some things are
hinted at, otherwise I&amp;#39;d have been outraged that the series end on that note.&lt;/p&gt;
&lt;p&gt;I was also mildly annoyed at a lot of conflict between character without much
stakes or interestingness going on — that&amp;#39;s not the wholesomeness I look for in
Stranger Things!&lt;/p&gt;
&lt;p&gt;Also: good humanization of a certain character towards the end.&lt;/p&gt;
&lt;p&gt;Big like on Maya Hawke&amp;#39;s new character, Robin. Steve Harrington remains my
favorite character. The parts with them, Dustin and Erica are the best of the
season in my opinion.&lt;/p&gt;
&lt;h2 id=&quot;infinite-dendrogram&quot;&gt;Infinite Dendrogram&lt;/h2&gt;
&lt;p&gt;Here&amp;#39;s another watch-to-pass-time isekai. Honestly, it ended up better than I
expected, without never really approaching greatness.&lt;/p&gt;
&lt;p&gt;There&amp;#39;s something off about the thing. An artificiality that makes you think
that this is the thing that someones setting out to write an isekai could come
up with. I wish I was articulate enough to point out why the anime doesn&amp;#39;t quite
work and is hard to take completely at face value. It feels like the trappings
of the genre get in the way of telling a good story.&lt;/p&gt;
&lt;p&gt;That being said, it&amp;#39;s not bad. I finished it and enjoyed the ride for what it
was. From the initial reaction I&amp;#39;ve seen online, I thing this anime will largely
be overlooked and under-rated.&lt;/p&gt;
&lt;p&gt;For me, this is certainly not worse than &lt;a href=&quot;/even-more-anime/#that-time-i-got-reincarnated-as-a-slime&quot;&gt;Slime&lt;/a&gt;, and in many ways, better.&lt;/p&gt;
&lt;p&gt;I&amp;#39;ll have more to say about this in the review for &lt;a href=&quot;#samurai-champloo&quot;&gt;Samurai Champloo&lt;/a&gt;, but if
there&amp;#39;s at least something good you can say about Infinite Dendrogram is that it
takes itself earnestly.&lt;/p&gt;
&lt;h2 id=&quot;castlevania-all-3-seasons&quot;&gt;Castlevania (all 3 seasons)&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;castlevania.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Castlevania, the Netflix-produced American anime, was on the edge of my
consciousness for a long time, though I didn&amp;#39;t what it was in substance.&lt;/p&gt;
&lt;p&gt;With the hype of season 3, I finally gave it a go.&lt;/p&gt;
&lt;p&gt;First shock: it&amp;#39;s much shorter than one would expect. Season 1 is almost a
pilot, only 4 episodes. Season 2 has 8 and season 3 has 10.&lt;/p&gt;
&lt;p&gt;Content-wise, I must concede it&amp;#39;s pretty good, though I think it fell short of
what it could have been.&lt;/p&gt;
&lt;p&gt;Without spoiling, there are events in season 2 happening much too soon in my
opinion. The shows does play fast and loose with its premise, and I think that&amp;#39;s
a shame.&lt;/p&gt;
&lt;p&gt;In season 3, I thought one of the narrative arcs of the season (following a
certain vampire) was completely useless and ex machina. I liked the entailed
character development, but there were better, subtler, more believable ways to
get there. Fortunately it&amp;#39;s also very short in screen time (which is perhaps
also one of the reason it fails to work).&lt;/p&gt;
&lt;p&gt;All in all, we are presented with a compelling universe, interesting characters,
some mysteries to unravel. I wouldn&amp;#39;t add it to the hallowed list of the
must-watch, but it&amp;#39;s a solid recommendation from me.&lt;/p&gt;
&lt;p&gt;As a side note, this is an American production, but I watched it with the
Japanese dub. I found the English dub rather awkward. I noticed the fact it&amp;#39;s a
dub (and the lipsync is thus off) a lot, whereas I don&amp;#39;t in Japanese (simply due
to being unfamiliar with the language).&lt;/p&gt;
&lt;h2 id=&quot;samurai-champloo&quot;&gt;Samurai Champloo&lt;/h2&gt;
&lt;p&gt;This is something I started binge watched with friends. I think we saw 7 or 8
episodes. After that I decided not to continue watching it, I had other things
that needed doing and I wasn&amp;#39;t hyped.&lt;/p&gt;
&lt;p&gt;This anime is directed by Shinichiro Watanabe (*), as his next anime after &lt;a href=&quot;/every-anime/#cowboy-bebop&quot;&gt;Cowboy
Bebop&lt;/a&gt;. Excerpting my own &lt;a href=&quot;/every-anime/#cowboy-bebop&quot;&gt;review&lt;/a&gt; of it:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;My impression of Cowboy Bebop is that it&amp;#39;s an impressive anime — one with
mature themes and a real reflection — which happens to be buried in a heap of
goofy filler.
[...]
Still, if you manage to power through the initial filler (I almost didn&amp;#39;t), I
don&amp;#39;t think you&amp;#39;ll regret watching Cowboy Bebop.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(*) Interestingly, Watanabe is also the director of &lt;a href=&quot;/reviews-4/#carole--tuesday&quot;&gt;Carole &amp;amp; Tuesday&lt;/a&gt;, another
thing I dropped though I found it to be quite good.&lt;/p&gt;
&lt;p&gt;Having only watched 7 episodes of Samurai Champloo, it&amp;#39;s hard to say whether it
would be the same or not. The &lt;em&gt;goofy&lt;/em&gt; filler is there all right, and in spades.
Would the story take a turn for the serious towards the end? I must imagine it
would. But I&amp;#39;m not incredibly motivated to continue right now.&lt;/p&gt;
&lt;p&gt;One issue with my non-motivation, besides the uncertainty that it gets better,
is the characters. They&amp;#39;re not bad, but Mugen and Jin lack the aesthetic, almost
mystical, charism of Spike Spiegel. &amp;quot;Brave girl&amp;quot; Fuu is less interseting than
emotionally-stunted vixen Faye Valentine (though I do expect the rest of the
series has character development for her in relation with this sunflower
samurai).&lt;/p&gt;
&lt;p&gt;I think I&amp;#39;ll be back to Samurais Champloo, if only by curiosity. It does feel
like I&amp;#39;ve got better things to watch right now however.&lt;/p&gt;
&lt;p&gt;Samurai Champloo is an interesting data point on my own taste. Clearly, I&amp;#39;m not
into &amp;quot;goofy&amp;quot; story. In both Cowboy Bebop and this, the characters are somewhat
loveable, and somewhat dumb, and can&amp;#39;t help but to keep losing. The problem is,
I don&amp;#39;t find that very funny, and it makes for a poor story. It always circles
back to the same spot, nothing is learned, so character development is absent.
The stakes never move. Cowboy Bebop has a poignant story (and ending), but it
gets condensed in maybe four or five episodes worth of content, in a 26-episodes
series (some of those other episodes are genuinely good too though).&lt;/p&gt;
&lt;p&gt;But additionally, I think what bothers me greatly is that it makes me feel like
the story does not take itself seriously. It&amp;#39;s not earnest. It&amp;#39;s an unfunny
comedy, when what I want out of it is a thriller, an epic or a drama.&lt;/p&gt;
&lt;p&gt;I guess I&amp;#39;m a sucker for earnestness on the other hand. It&amp;#39;s why I watched the
whole of &lt;a href=&quot;#infinite-dendrogram&quot;&gt;Infinite Dendrogram&lt;/a&gt;. Objectively, it&amp;#39;s of lesser quality than Samurai
Champloo. But story never fails to take itself seriously (something that I think
many people will count as a mark &lt;em&gt;against&lt;/em&gt; it). But in all honesty, if Samurai
Champloo was airing weekly, I probably would have watched it all too.&lt;/p&gt;
&lt;h2 id=&quot;mo-dao-zu-shi&quot;&gt;Mo Dao Zu Shi&lt;/h2&gt;
&lt;p&gt;This is a popular Chinese anime (a &lt;em&gt;donghua&lt;/em&gt;) — honestly, the only dongua I&amp;#39;ve
ever heard about. Plot:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As the grandmaster who founded the Demonic Sect, Wei Wuxian roamed the world
in his wanton ways, hated by millions for the crimes he was accused. In the
end, he was stabbed in the back by his sworn brother Jiang Cheng and killed by
the vicious ghosts he controlled when the cultivation clans attacked his
stronghold to kill him. After 13 years, he is summoned into the body of a
lunatic called Mo Xuanyu, who was rejected by his clan and bullied by his
family, therefore sacrificing his own body to Wei Wuxian so he could avenge
him. He&amp;#39;ll soon meet a famous cultivator from his past, Lan Wangji.&lt;/p&gt;
&lt;p&gt;They will soon face a series of events that will take them to discover the
truth behind the tragic events that led to the death of many people and Wei
Wuxian himself.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I dropped it after 2 episodes.&lt;/p&gt;
&lt;p&gt;From the &lt;a href=&quot;https://www.youtube.com/watch?v=imUXzLeU__Y&quot;&gt;trailer&lt;/a&gt; it looked a stylish &lt;a href=&quot;/reviews-4/#demon-slayer&quot;&gt;Demon Slayer&lt;/a&gt; but more
earnest and noir. In reality, the first two episodes are mostly comprised of
characters bickering. It&amp;#39;s 30 minutes for an episode, so that&amp;#39;s 1 hours of
mostly bickering and some cool combat mixed in... and absolutely no reason to
care about the story whatsoever.&lt;/p&gt;
&lt;p&gt;Really though. In one hour of play time, the main character gets reincarnated
(that takes all of two minutes) then we are not given a single reason to really
care about him, or Lan Wangji which is the only other character of consequence
introduced. No real mystery is implanted either other than what is delivered as
backstory exposition: Wei Wuxian was this warlock master, who apparently did
some horrible things. What? Why?&lt;/p&gt;
&lt;p&gt;My second huge gripe is this: If Wei Wuxian was this badass warlock king, then
why as he is reincarnated in the body of a boy, does he take a definitely
un-badass, and in fact boyish personality? I guess that&amp;#39;s the only harp on the
mystery we get: how did someone with an apparently lame and kind disposition (he
does take some pain to save people) do such horrible things?&lt;/p&gt;
&lt;p&gt;But yeah. It wasn&amp;#39;t enjoyable viewing, and I was given no reason to keep
watching, so I dropped it.&lt;/p&gt;
&lt;p&gt;I guess the real mystery is why it has a 8.5 rating &lt;a href=&quot;https://myanimelist.net/anime/37208/Mo_Dao_Zu_Shi&quot;&gt;on
MyAnimeList&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I did parse the reviews in search for something that wasn&amp;#39;t a 10 or a 9 to find
some nuanced explanation but didn&amp;#39;t found anything that explains it. The 10 and
9 review mostly praise the aesthetics.&lt;/p&gt;
&lt;p&gt;I found this however, which I&amp;#39;ll confirm:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;On the other hand, the characters are less impressive. One of my biggest pet
peeves is same facing. Same facing is when an artist consistently draws the
same kind of face and the only way to distinguish them apart is from their
hair or clothing. MDZS is very guilty of this. I couldn&amp;#39;t tell anyone apart
because all the people from the same sect wore the same clothes and everyone
has the same face.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;rezero-frozen-bonds&quot;&gt;Re:Zero Frozen Bonds&lt;/h2&gt;
&lt;p&gt;Previously: &lt;a href=&quot;/even-more-anime/#rezero&quot;&gt;Season 1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A big coronavirus-induced disappointement this season was that Re:Zero season 2
was pushed back. However there is an OVA that came out at the end of 2019. Since
I really like Re:Zero, it was a no brainer to watch that.&lt;/p&gt;
&lt;p&gt;And ... it kinda sucks. I&amp;#39;m sure real fans will enjoy learning about the tiny
sliver of backstory we&amp;#39;re given here. But as a story on its own, it&amp;#39;s nothing to
write home about.&lt;/p&gt;
&lt;p&gt;Seriously, the thing just lacks &lt;em&gt;interestingness&lt;/em&gt;. The plot is basically (1)
people are afraid of Emilia, who is an unreasonably nice person, (2) an ennemy
appear, it has to be defeated.&lt;/p&gt;
&lt;p&gt;If you want the backstory without wasting your time, go read a summary.&lt;/p&gt;
&lt;h2 id=&quot;konosuba-legend-of-crimson&quot;&gt;Konosuba!: Legend of Crimson&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;konosuba-crimson.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;This is a movie (I had to look it up, but the main distinction seems to be that
a movie airs in theaters, while an OVA does not), this time for &lt;a href=&quot;/every-anime/#konosuba&quot;&gt;Konosuba!&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This was very unlike the Re:Zero OVA, and I enjoyed it a lot.&lt;/p&gt;
&lt;p&gt;It&amp;#39;s a spot on transcription of the show&amp;#39;s humor and feeling to a movie. It&amp;#39;s
also paced like a good &lt;em&gt;movie&lt;/em&gt;: it avoids the trap of feeling like a drawn-out
episode, or like something that would breathe better as a longer string of
episodes.&lt;/p&gt;
&lt;p&gt;Frankly, I&amp;#39;d forgotten how much I enjoyed Konosuba!, so this was really a nice
surprise.&lt;/p&gt;
&lt;p&gt;The franchise really has a unique texture to it. It&amp;#39;s quite funny in its own
unique way, but — despite the show never being overtly sentimal — it&amp;#39;s also warm
and fuzzy, when the characters reveal their underlying camaraderie in-between
bouts of bickering.&lt;/p&gt;
&lt;p&gt;Funnily enough, Konosuba! has a lot of the things I said I disliked in other
shows: bickering (&lt;a href=&quot;#mo-dao-zu-shi&quot;&gt;Mo Dao Zu Shi&lt;/a&gt;), the protagonist being loveable/dumb losers
(&lt;a href=&quot;#samurai-champloo&quot;&gt;Samurai Champloo&lt;/a&gt;), though crucially, in Konosuba! they do ultimately win and
it can be argued they do progress, albeit slowly).&lt;/p&gt;
&lt;p&gt;I guess the lesson is that everything can work under the right frame, and that
describing aesthetics and &amp;quot;texture&amp;quot; is hard.&lt;/p&gt;
&lt;p&gt;I realize I haven&amp;#39;t said much about the movie itself, but really it&amp;#39;s Konosuba!.
If you enjoy the show, you&amp;#39;ll enjoy the movie just as much. Very recommended.&lt;/p&gt;
&lt;h2 id=&quot;promare&quot;&gt;Promare&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;promare.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;As a fan of &lt;a href=&quot;/more-anime/#kill-la-kill&quot;&gt;Kill la Kill&lt;/a&gt; and &lt;a href=&quot;/every-anime/#gurren-lagann&quot;&gt;Gurren Lagann&lt;/a&gt;, I was naturally excited to see a
new movie featuring the same director and head writer (Hiroyuki Imaishi &amp;amp; Kazuki
Nakashima), especially since Promare is blatantly a riff on the same genre.
Heck, the main character (&lt;a href=&quot;https://www.google.be/search?q=promare+galo&amp;amp;tbm=isch&quot;&gt;Galo&lt;/a&gt;) even looks like Gurren Lagann&amp;#39;s &lt;a href=&quot;https://www.google.be/search?q=gurren+lagann+kamina&amp;amp;tbm=isch&quot;&gt;Kamina&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In fact, the ressemblance is so deep, it sometimes feels like an hommage.
Battles fuelled by fighting spirit, huge mechas that change, battle that
escalate to planetary scale, etc.&lt;/p&gt;
&lt;p&gt;While &lt;em&gt;ostensibly&lt;/em&gt; the movie is somewhat closer to Gurren Lagann, it found it
actually closer to Kill la Kill in terms of direction.&lt;/p&gt;
&lt;p&gt;It&amp;#39;s constant action that almost never lets up, ultra-fast pacing with no
useless downtime. This is a lot like Kill la Kill. Gurren Lagann is a story that
breathes more. Characters have more complex emotions that are given screen time
to be explored more in depth. Relationships are subtler.&lt;/p&gt;
&lt;p&gt;But all this would be complex to render in a movie, and still make a good action
flick. I reviewed the first &lt;a href=&quot;/even-more-anime/#gurren-lagann-the-movie-childhoods-end&quot;&gt;Gurren Lagann movie&lt;/a&gt;, which is an attempt to
condense the TV show to two movies. My conclusion was that it was an abject
failure — you&amp;#39;re rushed through emotional developments in a way that is simply
not satisfying or meaningful enough.&lt;/p&gt;
&lt;p&gt;But Promare is free of these shackles, and I found it to be &lt;em&gt;extremely&lt;/em&gt;
satisfying. It works as a movie version of the genre (in this it is a bit like
the &lt;a href=&quot;#konosuba-legend-of-crimson&quot;&gt;Konosuba! OVA&lt;/a&gt;). This is not to say that the characters don&amp;#39;t have emotions,
but they are less complex and fraught, and can be satisfyingly handled in a bit
less than two hours.&lt;/p&gt;
&lt;p&gt;The movie is not totally a re-thread. In particular, it has its own distinctive
visual style, that revolves around geometric shapes. Cubes feature prominently,
for instance ice-cube shooting guns. There are a lot of triangles as well, for a
distinctive low-polygon aesthetic on some effects (e.g. lightning). There is
also a very tasteful use of pastel colors that I personally found delightful.&lt;/p&gt;
&lt;p&gt;Still, it is &lt;em&gt;mostly&lt;/em&gt; a re-thread. If there is one bad thing to be said about
Promare, it&amp;#39;s that it avoids the risk of proposing something new, which would
really have made it stand out.&lt;/p&gt;
&lt;p&gt;If you&amp;#39;ve liked Gurren Lagann or Kill la Kill, go watch Promare. If you don&amp;#39;t
know about either, go watch one of those things and figure out if it&amp;#39;s your
style.&lt;/p&gt;
&lt;h2 id=&quot;lucky-star&quot;&gt;Lucky Star&lt;/h2&gt;
&lt;p&gt;Lucky Star was another anime we were slated to binge, but I couldn&amp;#39;t be there on
the first day. I tried to catch up on my own, but two episodes in, it was clear
it wasn&amp;#39;t for me.&lt;/p&gt;
&lt;p&gt;I think the first episode must be the most boring piece of anime I&amp;#39;ve seen in a
very long time.&lt;/p&gt;
&lt;p&gt;They just talk, about whatever (&amp;quot;how to eat a chocolate scone&amp;quot; is at topic that
takes up a big chunk of the time in that first episode).&lt;/p&gt;
&lt;p&gt;The second episode is a bit better, at least you get the passage of time for the
semblance of plot (it&amp;#39;s holiday and they have to do homework, and then it&amp;#39;s
school).&lt;/p&gt;
&lt;p&gt;Slice of life is not my big thing, but I can get into it. I liked &lt;a href=&quot;/more-anime/#k-on&quot;&gt;K-On!&lt;/a&gt; a lot.
But here it&amp;#39;s hard. There&amp;#39;s little sense of direction, absolutely no stakes or
tension. It&amp;#39;s not particularly funny (though I get how it could get one to
smile). I don&amp;#39;t begrudge the art style, but it&amp;#39;s not particularly pretty, and
it&amp;#39;s obviously low-budget. I&amp;#39;m not very observant of these things, but it struck
even me that there were no animated/detailed backgrounds in many scenes. Not
that I matters much, but the animation is not the show redeeming&amp;#39;s quality.&lt;/p&gt;
&lt;p&gt;At the same time, I kinda get it. In a way totally, utterly &lt;strong&gt;different&lt;/strong&gt; from
Samurai Champloo, I get how people can like this. There&amp;#39;s something about the
humor / aesthetic that&amp;#39;s kinda nice? If only they could manage to interest me at
all.&lt;/p&gt;
&lt;h2 id=&quot;westworld-season-3&quot;&gt;Westworld Season 3&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;westworld-3.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;(Note: I won&amp;#39;t spoil the events of the season below, but I will give some
meta-spoiler that will let you know what twists to expect or not. If you don&amp;#39;t
want that, now is the time to exit.)&lt;/p&gt;
&lt;p&gt;Since I&amp;#39;ve not reviewed the first two seaons, let&amp;#39;s recap first.&lt;/p&gt;
&lt;p&gt;I think Westworld season 1 is the best thing that&amp;#39;s ever been on TV. Ever. I
think it&amp;#39;s superior to most movies and TV shows. Maybe something like The Lord
of The Rings, The Dark Knight, or the first season of The Wire comes really
close.&lt;/p&gt;
&lt;p&gt;It&amp;#39;s a delightful story, there are (many) delightful mysteries that you can&amp;#39;t
help but get caught thinking about. The story is compelling, the acting is on
point, the dialogue is incredible. It&amp;#39;s one of the only things I&amp;#39;ve rewatched in
recent years, and it was still supremely enjoyable on second viewing, even
knowing all the twists.&lt;/p&gt;
&lt;p&gt;So yeah. Season 2 though? Not so good. It has the twists and mysteries, but
sometimes they feel a bit gratuitous, like they thought &amp;quot;Westworld is narrative
twists&amp;quot; and contorted the story to add them. Some of the main characters&amp;#39; arcs
are uninteresting, or downright bad (coughs &lt;em&gt;Shogun World&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;It&amp;#39;s still pretty good though, but a far cry from season 1. Just your &amp;quot;normal
better-than-average TV&amp;quot;.&lt;/p&gt;
&lt;p&gt;One sublime hit, one miss. Season 3 is the time of reckoning. Was season 2 a
fluke?&lt;/p&gt;
&lt;p&gt;Sadly it wasn&amp;#39;t. The more I think about season 3, the less I like it.&lt;/p&gt;
&lt;p&gt;It starts strong though, I&amp;#39;d say I was pretty excited until the middle, then I
progressively started feeling, with increased certainty with each passing
episode, that the conclusion would be sub-par.&lt;/p&gt;
&lt;p&gt;The premise is interesting. Aaron Paul&amp;#39;s character is very intriguing. All these
new elements appear and you&amp;#39;re like &amp;quot;hoo, mysteries, twists&amp;quot;. Well except there
is no real twist. Well there is a &amp;quot;twist&amp;quot; towards the middle of the season, but
no narrative-reframing timeline-magic everything-falls-into-place twist like in
the first two seasons. Yet there were signs... inconsistencies, small details in
a show that is known for its attention to details. I&amp;#39;ve seen people on the
&lt;a href=&quot;https://old.reddit.com/r/westworld/&quot;&gt;subreddit&lt;/a&gt; complain: have they become sloppy, or are they just messing with us?&lt;/p&gt;
&lt;p&gt;I enjoyed where it could have gone, but at the end of the season, there is no
part of it that I liked in its entirety. One of the main character arc is
completely useless, serving only to remind us that the character exists. Mostly
a waste of good screen time. One of the other main character&amp;#39;s motivation are
dumb and tired, a re-thread from previous seasons, and should have been put to
rest.&lt;/p&gt;
&lt;p&gt;And yet another of the main characters has big plans. But obviously the
showrunners have trouble writing a good (or even, clear) plan for a character
with unlimited resources.&lt;/p&gt;
&lt;p&gt;The mastermind played by Vincent Cassel was completely milquetoast compared to
Anthony Hopkins&amp;#39; Ford in the first season. The only thing interesting about him
was his biography, but nothing he says is particularly fascinating, the way
Ford&amp;#39;s monologues are.&lt;/p&gt;
&lt;p&gt;Besides twists and narratives, the big victim of the season is dialogue. There&amp;#39;s
too little of it, and it&amp;#39;s not good enough. Season 1 had all these philosophical
motifs that it would call often echo in dialogue, even if it wasn&amp;#39;t a deep
philosophical conversation (of which there were some too). Instead we get a lot
of action. Westworld is not so great with action. It&amp;#39;s not incompetent, but it&amp;#39;s
not impressive, and it&amp;#39;s often dumb in season 2 and 3 (a lot of shooting and not
a whole lot of hitting, some pretty heavy plot armors).&lt;/p&gt;
&lt;p&gt;All around, it felt like a dumbing down of the show. I wonder if this was
voluntary or not. Season 2 did worse than season 1. As it turns out, season 3
did significantly worse than season 2 (but as it is, it&amp;#39;s still HBO&amp;#39;s most
popular show this year).&lt;/p&gt;
&lt;p&gt;Let&amp;#39;s end on a positive note though, the show looks really good. The locations
(often in Singapore) are excellent, and the work on the environment (lighting,
etc) is really nice. Some of the shots (in particular those that frame the
characters agains the background locations) are very nice.&lt;/p&gt;
&lt;p&gt;It also sounds pretty damn nice. I especially like the choice of &lt;a href=&quot;https://www.tunefind.com/show/westworld/season-3&quot;&gt;insert songs&lt;/a&gt;,
from &amp;quot;Common People&amp;quot; to &amp;quot;Brain Damage&amp;quot;. On the more cinematic side, Ramin
Djawadi is &lt;a href=&quot;https://www.youtube.com/playlist?list=PLRWL5oACOrQV_R9cQKGxZBJ3w0lIjJTom&quot;&gt;still rocking&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Though it ain&amp;#39;t great, it&amp;#39;s also not that bad. I&amp;#39;m invested enough that I&amp;#39;ll
probably watch the next season.&lt;/p&gt;
      </description>
      <pubDate>2020-05-08T22:00:00.000Z</pubDate>
      <link>http://norswap.com/reviews-6</link>
      <guid isPermaLink="true">http://norswap.com/reviews-6</guid>
    </item>
    <item>
      <title>Book Notes - Influence: The Psychology of Persuasion</title>
      <description>
&lt;p&gt;I finished Robert Cialdini&amp;#39;s &lt;em&gt;Influence&lt;/em&gt; a couple months ago.&lt;/p&gt;
&lt;p&gt;The book is one of the most often cited when it comes to biases and our
psychological tendencies that work against us. It&amp;#39;s also heavily cited in
&lt;a href=&quot;https://www.readthesequences.com/&quot;&gt;&lt;em&gt;Rationality: From AI to Zombie&lt;/em&gt;&lt;/a&gt;, another book I&amp;#39;ve read and have yet to
write about.&lt;/p&gt;
&lt;p&gt;(If you&amp;#39;re interested in that general idea, be sure to check my post on &lt;a href=&quot;/munger-psychology&quot;&gt;Charlie
Munger&amp;#39;s list of psychological tendencies&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;More precisely, the book is about the big principles that &amp;quot;compliance
professionals&amp;quot; (marketers, salesmen and negotiators of all ilks) exploit in
order to influence us towards their preferred outcome.&lt;/p&gt;
&lt;p&gt;Cialdini identifies six such principles, which he describes in turn:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Reciprocation&lt;/li&gt;
&lt;li&gt;Consistency&lt;/li&gt;
&lt;li&gt;Social proof&lt;/li&gt;
&lt;li&gt;Liking&lt;/li&gt;
&lt;li&gt;Authority&lt;/li&gt;
&lt;li&gt;Scarcity&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Cialdini asserts that we humans come with a large store of evolved &lt;em&gt;automatic&lt;/em&gt;
responses. A very simple example is that we are prone to grant favors, when such
favors are requested with a reason, the quality of the reason notwithstanding!
Just adding &amp;quot;because I really need it&amp;quot; or &amp;quot;because I&amp;#39;m in a hurry&amp;quot; after your
requests apparently increases the chances they will be granted.&lt;/p&gt;
&lt;p&gt;Another such automatic response is that we tend to treat cost as a heuristic for
quality. Hence sometimes increasing the cost of a product makes it sell better.&lt;/p&gt;
&lt;p&gt;There are good reasons for these heuristics to exist. They are often pretty
useful, or at least were useful in the ancestral environment. Cialdini explains
for each principle why it is/was advantageous, how it is now being used against
us, and how to avoid falling for it.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I took a few note while reading, but I wasn&amp;#39;t quite sure what to do with them.&lt;/p&gt;
&lt;p&gt;One reason I take notes is that I&amp;#39;m not usually too great at remembering things
I have read. Making notes makes it easy to come back to a topic. But more than
just offloading the info to my hard drive, I also want to remember. It happens
too often that I&amp;#39;ve read a book, want to tell someone about it, and nothing but
uninteresting platitudes about the book come to mind.&lt;/p&gt;
&lt;p&gt;This book, in particular, seemed well suited for being &lt;em&gt;remembered&lt;/em&gt;. After all, if
you&amp;#39;re getting the feeling that someone is trying to get advantage of you, you&amp;#39;d
like to remembert the standard set of technique likely to be used against you,
wouldn&amp;#39;t you?&lt;/p&gt;
&lt;p&gt;So what I did it was boil down the content of the book to a set of very short
aphorism-like sentences. This probably won&amp;#39;t make much sense to people who
haven&amp;#39;t read the book, and possibly to people other than myself.&lt;/p&gt;
&lt;p&gt;The plan is to re-read this once in a while, so as to imprint some of the ideas.
&lt;a href=&quot;https://apps.ankiweb.net/&quot;&gt;Anki&lt;/a&gt; could be a useful tool for this too.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;1-reciprocation&quot;&gt;1. Reciprocation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;It&amp;#39;s rude to refuse a gift.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It&amp;#39;s rude to refuse repaying favor.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Small favors can lead to big favors.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Starting from a realistic first ask, the asker can back down to a smaller
favor, and you would be tempted to &amp;quot;reciprocate the concession&amp;quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reciprocate exploitation with exploitation.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;2-consistency&quot;&gt;2. Consistency&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Nobody likes (being) hypocrites.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Commitment can be weaponized, especially when small and progressive.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Writing produces powerful commitment, doubly so if public.&lt;br&gt;... even if the beliefs written down are not truly-held beliefs!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We feel committed to things we&amp;#39;ve put effort into, or have suffered for
(the &lt;a href=&quot;https://en.wikipedia.org/wiki/Sunk_cost&quot;&gt;sunk cost fallacy&lt;/a&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The commitment is great if someone has made an &amp;quot;inner choice&amp;quot;. Incentives
can be detrimental, the reasons for the choice must allow the subject to
take personal
responsibility (e.g. morals).  &lt;/p&gt;
&lt;p&gt;Throwing a lowball: adding and then removing incentive to produce inner
choice.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Own your inconsistencies, trust your gut signals.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;3-social-proof&quot;&gt;3. Social Proof&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Examples: canned laughter, seeding the tip jar.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Bystander_effect&quot;&gt;The bystander effect&lt;/a&gt;: pluralistic ignorance.&lt;br&gt;Fight it by tasking a specific person with a specific task.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We imitate people similar to us.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;4-liking&quot;&gt;4. Liking&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;We prefer granting requests from people we know and like.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;e.g. Tupperware parties, local Amnesty volunteers&lt;/li&gt;
&lt;li&gt;Endorsements are often enough.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Salesmen want us to like them.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Physical attractiveness: &lt;a href=&quot;https://en.wikipedia.org/wiki/Halo_effect&quot;&gt;halo effect&lt;/a&gt;, grooming.&lt;/li&gt;
&lt;li&gt;Similarity: &lt;a href=&quot;https://en.wikipedia.org/wiki/Cold_reading&quot;&gt;cold reading&lt;/a&gt;, posture/mood/verbal mirroring.&lt;/li&gt;
&lt;li&gt;Compliments, which work even if inaccurate.&lt;/li&gt;
&lt;li&gt;Emphasis on the familiar.&lt;/li&gt;
&lt;li&gt;Collaboration: emphasize common interest.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The message infects the messenger.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Guilt by association.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Association to glamour, aesthetics, or even &lt;a href=&quot;https://en.wikipedia.org/wiki/Classical_conditioning#Pavlov&amp;#39;s_research&quot;&gt;meals&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Association/dissociation: When things are good it&amp;#39;s &amp;quot;we&amp;quot;, when things are
bad, it&amp;#39;s &amp;quot;they&amp;quot;.  &lt;/p&gt;
&lt;p&gt;Stronger for people with low self-esteem, or whose self-esteem was
recently injured.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fight by explicitly dissociating &amp;quot;the product&amp;quot; from outside associations.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;5-authority&quot;&gt;5. Authority&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;e.g. &lt;a href=&quot;https://en.wikipedia.org/wiki/Milgram_experiment&quot;&gt;The Stanley Milgram experiment&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Works even with just the apparence of authority (attire, titles)&lt;br&gt;... or association to authority.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Clothing matters: uniforms or business suits. They work even in unrelated
domains.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Principal%E2%80%93agent_problem&quot;&gt;The principal agent problem&lt;/a&gt;&lt;br&gt;Small concessions to truth can help conceal a broader deception strategy.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fight by verying credentials and wondering about their relevance.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;6-scarcity&quot;&gt;6. Scarcity&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;The way to love anything is to realize that it might be lost.&lt;br&gt;— G. K. Chesterton&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The &lt;a href=&quot;https://en.wikipedia.org/wiki/Fear_of_missing_out&quot;&gt;fear of missing out (FOMO)&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Psychological reactance: we hate losing our freedoms, including our freedom of
choice.&lt;/li&gt;
&lt;li&gt;Ask for a commitment to buy commitment when the product is at its scarcest.&lt;/li&gt;
&lt;li&gt;The deadline technique: now or never.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We assign positive quality to that which we desire because we can&amp;#39;t
(or risk not) have it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Banned information: we desire it more, but also trust it more.&lt;/li&gt;
&lt;li&gt;Combo: when knowledge of scarcity is itself scarce.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;New scarcity is more powerful than pre-existing scarcity.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Revolutions often occurs when prosperity is followed by short sharp reversal.&lt;/li&gt;
&lt;li&gt;For this reasons, parents should apply consistent rules to their children.&lt;/li&gt;
&lt;li&gt;Even more potent when caused by social demand (i.e. &lt;a href=&quot;#3-social-proof&quot;&gt;social proof&lt;/a&gt;).&lt;br&gt;e.g. auctions, love triangles&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;False desires: the joy is not in experiencing a scarce commodity but in possessing it.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;bonus-perceptual-contrast&quot;&gt;Bonus: Perceptual Contrast&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Showing expensive items first to make cheaper alternative look cheap, period.&lt;br&gt;... or showing crappy items first to make the more expensive items look worth
their cost.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Negotiating cheaper addons after a big sale.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Leading with a bad news.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
      </description>
      <pubDate>2020-03-30T22:00:00.000Z</pubDate>
      <link>http://norswap.com/influence</link>
      <guid isPermaLink="true">http://norswap.com/influence</guid>
    </item>
    <item>
      <title>Chosen Tidbits 3</title>
      <description>
&lt;p&gt;Previously: &lt;a href=&quot;/chosen-tidbits-1/&quot;&gt;One&lt;/a&gt; / &lt;a href=&quot;/chosen-tidbits-2/&quot;&gt;Two&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;http://tynan.com/ignore&quot;&gt;Why I Ignore All Studies&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A p-value of 0.05 means 5% of results are wrong &lt;strong&gt;and&lt;/strong&gt; the uninteresting
results go unpublished so in practice it&amp;#39;s way more (p-value fishing).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Last, I lower my confidence in studies because every individual is different.
That doesn&amp;#39;t mean that I should smoke because maybe I&amp;#39;m not affected by
tobacco, but it does mean that if the average person needs 7 hours of sleep
but my own research shows that 8 works best for me, I should probably stick to
8.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://breakingsmart.substack.com/p/planning-to-start-planning-to-finish&quot;&gt;Planning to Start, Planning to Finish&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Over the years I’ve realized that a different distinction, within planning, is
probably much more important: between planning to start, and planning to finish.&lt;/p&gt;
&lt;p&gt;Planning to finish is the familiar kind, where you plan all the way to the end
and the terminal condition is the completed state of the activity. The finish
line, the deadline, the checkered flag.&lt;/p&gt;
&lt;p&gt;Planning to start though, is the more important kind for any creative work.
The French phrase mise en place, a favorite of Hercule Poirot, gets at this.
It roughly means “setting the stage”, especially with reference to cooking
preparations.&lt;/p&gt;
&lt;p&gt;When you plan to start, you get to the starting line rather than the finishing
line, by setting the stage for a more creative, improvised phase. You can call
it getting to the starting line, or as I prefer, by analogy to deadline, the
lifeline. A condition where a zombie set of parts is assembled together in a
way that makes it come alive.&lt;/p&gt;
&lt;p&gt;The difference relates to what Scott Adams called the difference between
systems and goals. When you plan to start, you undertake planned activities to
end in a functioning system where habits can flow.&lt;/p&gt;
&lt;p&gt;Another connection familiar to many of you is to James Carse’s notion of
finite versus infinite games. Planning to finish is playing a finite game to
win it and exit it. Planning to start is working to enter an infinite game and
continue playing it.&lt;/p&gt;
&lt;p&gt;Whatever you choose to call it, you should probably spend more time thinking
about this difference than about how much planning to do, which is often a
much simpler question.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;http://jsomers.net/blog/speed-matters&quot;&gt;Speed Matters&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Part of the activation energy required to start any task comes from the
picture you get in your head when you imagine doing it. It may not be that
going for a run is actually costly; but if it feels costly, if the picture in
your head looks like a slog, then you will need a bigger expenditure of will
to lace up.&lt;/p&gt;
&lt;p&gt;Slowness seems to make a special contribution to this picture in our heads.
Time is especially valuable. So as we learn that a task is slow, an especial
cost accrues to it. Whenever we think of doing the task again, we see how
expensive it is, and bail.&lt;/p&gt;
&lt;p&gt;That’s why speed matters.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://buddhism-for-vampires.com/eating-the-shadow&quot;&gt;Eating The Shadow&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We can embrace our monstrosity while cultivating our human nobility. We can
allow each to transform the other, so we become cheerful, kind, useful
monsters who are also overpowering, unpredictable, and dangerous heroes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;http://tynan.com/reducefriction&quot;&gt;Reduce Friction&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Reduce friction.&lt;/p&gt;
&lt;p&gt;Automation might be costly... but it removes friction — it pays for more than
just the effort.&lt;/p&gt;
&lt;p&gt;Sometimes not even automatization but making sure you can do stuff in an
optimized way.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://breakingsmart.substack.com/p/investing-in-your-ordinary-powers&quot;&gt;Investing In Your Ordinary Powers&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The personal growth world is somewhat obsessed with strengths and weaknesses,
or more generally, things that make you different from others, whether you
view those things as gifts or curses.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;To get past a strengths/weaknesses orientation, or more generally past your
specialness orientation, you have to get in touch with the things that make
you ordinary.&lt;/p&gt;
&lt;p&gt;An early adopter is a classic example of someone investing in their
ordinariness. There may be some mild strengths or weaknesses involved: maybe you
are slightly better at figuring out janky UIs (a minor strength), or slightly
more susceptible to distraction (a minor weakness). But mainly, being an early
adopter is exactly the same as being a late adopter, except you are early.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;You may attract a romantic partner through things that make you special, but
most relationship maintenance skills are based on investing in the ordinary.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://www.perell.com/blog/peter-thiel&quot;&gt;Peter Thiel&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Contrarians may be mostly wrong, but when they get it right, they get it really
right.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;According to Thiel, monopoly is the end state of every successful business. If
you want to create and capture lasting economic value, don’t compete. The more
unique companies are, the more the business world can flourish.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://www.lesswrong.com/posts/y5RoNDPcfJqm3vfQA/the-value-of-your-time-or-why-you-should-buy-an-ac&quot;&gt;How Much is Your Time Worth?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A post asking the question (among others): &amp;quot;should you buy an AC unit&amp;quot;?&lt;/p&gt;
&lt;p&gt;Interesting perspective.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://www.ribbonfarm.com/2019/09/16/mediocratopia-8/&quot;&gt;Mediocratopia 8&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Mediocrity is not being a completist about anything. Not finishing for the sake
of finishing.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;Mediocrity is not lack of attention to key details, it is to mainly care about
the key details and being willing to compromise on all other details. This is
often rational.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;After a lot of mediocre output, the result can start looking quite good. A bit
like in the pottery parable - but it&amp;#39;s not quite the point. You&amp;#39;re not trying
to cleverly solve for the &amp;quot;best&amp;quot; pot, you just have lower minimum standards
for pots. You&amp;#39;re not throwing away your mediocre pots, which are good enough.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;For a mediocratist, the level of caring is a design variable, not a fixed
performance parameter to be set at &amp;quot;maximum&amp;quot; by default.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;Where you decide to stop caring about what you&amp;#39;re doing reveals where you are
willing to start caring about yourself. And being a completist about
everything means not caring about yourself at all.&lt;/p&gt;
&lt;/blockquote&gt;
      </description>
      <pubDate>2020-03-26T23:00:00.000Z</pubDate>
      <link>http://norswap.com/chosen-tidbits-3</link>
      <guid isPermaLink="true">http://norswap.com/chosen-tidbits-3</guid>
    </item>
    <item>
      <title>A ps / pkill / pgrep Alternative</title>
      <description>
&lt;p&gt;As I was prepping my new computer, and &lt;a href=&quot;/unix-daemons/&quot;&gt;toying with unix daemons&lt;/a&gt;, I found
myself checking on running processes regularly, and occasionally killing them. I
also found myself being quite frustrated with the tools provided by the system
for this purpose.&lt;/p&gt;
&lt;h2 id=&quot;checking-processes&quot;&gt;Checking Processes&lt;/h2&gt;
&lt;p&gt;To check what a process is up to (or if it is running at all), you&amp;#39;d run a
command like this (here, assuming I&amp;#39;m interested in the status of the &lt;code&gt;sleep&lt;/code&gt;
process):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ ps aux | grep sleep
# norswap    58694   0.0  0.0  4399328    728 s006  S+    2:26PM   0:00.00 grep sleep
# norswap    58686   0.0  0.0  4268240    576 s003  S+    2:26PM   0:00.00 sleep 300&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is an incantation I&amp;#39;ve personally memorized a long time ago. I didn&amp;#39;t even
remember what those &lt;code&gt;aux&lt;/code&gt; flags meant.&lt;/p&gt;
&lt;p&gt;(As it turns out, omitting the dash (&lt;code&gt;-&lt;/code&gt;) toggles legacy mode, in which &lt;code&gt;u&lt;/code&gt;
displays more info. &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;x&lt;/code&gt; work like they do with a dash, respectively
displaying processes from all users and showing processes that are not attached
to a controlling terminal.)&lt;/p&gt;
&lt;p&gt;This is less than ideal. For one, the output includes a line that matches the
&lt;code&gt;grep&lt;/code&gt; command itself!&lt;/p&gt;
&lt;p&gt;Here is the remedy, where &lt;code&gt;grep -v&lt;/code&gt; excludes matching lines (and no, there is no
easy way to merge the two &lt;code&gt;grep&lt;/code&gt; commands):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ ps -ax | grep -v &amp;quot; grep &amp;quot; | grep foobar&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Frankly, not something you&amp;#39;d want to type each time.&lt;/p&gt;
&lt;p&gt;Another thing that bothers me is: what are all these numbers and letters? Do I
care?&lt;/p&gt;
&lt;p&gt;Let&amp;#39;s start by omitting our legacy &lt;code&gt;u&lt;/code&gt; option. Then, by default (at leasts on
stock macOS Catalina!), you&amp;#39;ll get the following fields:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ ps ax | head -1
#  PID   TT  STAT      TIME COMMAND&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You should know what the &lt;code&gt;PID&lt;/code&gt; is (the process ID), &lt;code&gt;TT&lt;/code&gt; is an identifier for
the controlling terminal (e.g. &lt;code&gt;s006&lt;/code&gt;) or &lt;code&gt;??&lt;/code&gt; if there are no controlling
terminal.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;STAT&lt;/code&gt; column lists flags that gives information on the status of the
process. Info about which can be found under the &amp;quot;state&amp;quot; heading when running
&lt;code&gt;man ps&lt;/code&gt; on my mac:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-none&quot;&gt;state     The state is given by a sequence of characters, for example, ``RWNA&amp;#39;&amp;#39;.
          The first character indicates the run state of the process:

  I       Marks a process that is idle (sleeping for longer than about 20 seconds).
  R       Marks a runnable process.
  S       Marks a process that is sleeping for less than about 20 seconds.
  T       Marks a stopped process.
  U       Marks a process in uninterruptible wait.
  Z       Marks a dead process (a ``zombie&amp;#39;&amp;#39;).

  Additional characters after these, if any, indicate additional state information:

  +       The process is in the foreground process group of its control terminal.
  &amp;lt;       The process has raised CPU scheduling priority.
  &amp;gt;       The process has specified a soft limit on memory requirements and is currently
          exceeding that limit; such a process is (necessarily) not swapped.
  A       the process has asked for random page replacement (VA_ANOM, from vadvise(2), for
          example, lisp(1) in a garbage collect).
  E       The process is trying to exit.
  L       The process has pages locked in core (for example, for raw I/O).
  N       The process has reduced CPU scheduling priority (see setpriority(2)).
  S       The process has asked for FIFO page replacement (VA_SEQL, from vadvise(2), for
          example, a large image processing program using virtual memory to sequentially
          address voluminous data).
  s       The process is a session leader.
  V       The process is suspended during a vfork(2).
  W       The process is swapped out.
  X       The process is being traced or debugged.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There is a different output (probably Linux) &lt;a href=&quot;https://askubuntu.com/questions/360252/what-do-the-stat-column-values-in-ps-mean#360253&quot;&gt;listed in this StackOverflow
answer&lt;/a&gt; that you might find handy.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;TIME&lt;/code&gt; column: the CPU time the process has consumed since it started, in
&lt;code&gt;&amp;lt;hours&amp;gt;:&amp;lt;minutes&amp;gt;.&amp;lt;second&amp;gt;&lt;/code&gt; format.&lt;/p&gt;
&lt;p&gt;And finally the &lt;code&gt;COMMAND&lt;/code&gt; itself.&lt;/p&gt;
&lt;h2 id=&quot;the-system-has-you-covered-maybe&quot;&gt;The System Has You Covered... Maybe?&lt;/h2&gt;
&lt;p&gt;So of course, the double &lt;code&gt;grep&lt;/code&gt; thing is insane. I think some people might have
some point have recognized this. What did these good souls do? Come up with
&lt;code&gt;pgrep&lt;/code&gt;, of course!&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ pgrep sleep
# 58686&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The number printed out is the PID of matched processes. That &lt;code&gt;pgrep sleep&lt;/code&gt;
command is approximately equivalent to the following full pipe:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ ps -ax | grep -v &amp;quot; grep &amp;quot; | grep sleep | awk &amp;#39;{ print $1 }&amp;#39;
# 58686&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But not exactly. On the plus side, it&amp;#39;s slightly more robust, for instance it
wouldn&amp;#39;t ignore entries in the very unlikely scneario where entries of interest
contain the &amp;quot; grep &amp;quot; string. &lt;code&gt;pgrep&lt;/code&gt; just ignores its own process and that&amp;#39;s it.&lt;/p&gt;
&lt;p&gt;Also, by default &lt;code&gt;pgrep&lt;/code&gt; only matches on the program name and not on the
arguments.&lt;/p&gt;
&lt;p&gt;On the other hand, you&amp;#39;ve now lost all ability to get any other information
about the process, which sucks.&lt;/p&gt;
&lt;p&gt;Pointedly, it even sucks if all you want to do is find the PID of a process in
order to kill it! You might have caught the wrong process, but since its name is
not displayed, you&amp;#39;ll never find out. And if your query matches more than one
process, you don&amp;#39;t have any visual feedback on how to refine the search.&lt;/p&gt;
&lt;p&gt;Ok, so &lt;code&gt;pgrep&lt;/code&gt; does have a &lt;code&gt;-l&lt;/code&gt; flag that will print out the name of the process
(and the arguments if &lt;code&gt;-f&lt;/code&gt;, which makes it match on the arguments as well, is
given). But there are no flags to retrieve any other piece of information.&lt;/p&gt;
&lt;h2 id=&quot;killing-processes&quot;&gt;Killing Processes&lt;/h2&gt;
&lt;p&gt;Once you have the PID, it&amp;#39;s quite easy. Just &lt;code&gt;kill -9 &amp;lt;PID&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;One way to do it is to run a &lt;code&gt;grep&lt;/code&gt; (or &lt;code&gt;pgrep&lt;/code&gt;) command and copy the PID by
hand.&lt;/p&gt;
&lt;p&gt;Another way is use some piping:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ ps -ax | grep sleep # identify process
$ ps -ax | grep sleep | grep -v &amp;quot; grep &amp;quot; | awk &amp;#39;{ print $1 }&amp;#39; | xargs kill -9 # kill it&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Adding &lt;code&gt;awk &amp;#39;{ print $1 }&amp;#39;&lt;/code&gt; outputs the first column (the PIDs), while &lt;code&gt;xargs&lt;/code&gt;
transmits them to &lt;code&gt;kill -9&lt;/code&gt; as arguments.&lt;/p&gt;
&lt;p&gt;Or using &lt;code&gt;pgrep&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ pgrep -l sleep # identify process
$ pkill !* # kill it&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here the trick is &lt;code&gt;!*&lt;/code&gt; which passes the same arguments as the previous command
 (&lt;code&gt;pgrep&lt;/code&gt;) to &lt;code&gt;pkill&lt;/code&gt;. &lt;code&gt;pkill&lt;/code&gt; is &lt;code&gt;pgrep&lt;/code&gt;&amp;#39;s cousin, which instead of printing
 the matched PIDs, kills them.&lt;/p&gt;
&lt;p&gt;Of course, we could also have used &lt;code&gt;xargs kill -9&lt;/code&gt; here.&lt;/p&gt;
&lt;h2 id=&quot;an-api-and-a-tool&quot;&gt;An API, and a Tool&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;pgrep&lt;/code&gt; and &lt;code&gt;pkill&lt;/code&gt; kinda work, but they lose something nice about the original
&lt;code&gt;ps&lt;/code&gt;: it can be used to get a lot of information about a process, not just its
PID and name.&lt;/p&gt;
&lt;p&gt;Essentially, what we would like is a command that is able to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Match processes using any of its properties (or &amp;quot;fields&amp;quot; as I called them
before. &lt;code&gt;pgrep&lt;/code&gt; and &lt;code&gt;pkill&lt;/code&gt; can do this (via various flags).&lt;/li&gt;
&lt;li&gt;Display properties of interest. &lt;code&gt;ps&lt;/code&gt; can do this (via its &lt;code&gt;-o&lt;/code&gt; flag).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Moreover I&amp;#39;d like a tool I can use at the command line easily. It should have
good defaults and enable frequent workflows easily, while supporting
customization.&lt;/p&gt;
&lt;p&gt;But I&amp;#39;d also like it to be a building block, either as a way to query processes
which I can use in elaborate scripts, or as a reusable component for other
interactive commands. As we&amp;#39;ll see, there are a few niceties we can add to that
effect (match coloring, output truncation, ...).&lt;/p&gt;
&lt;p&gt;I made this tool, and named it &lt;code&gt;nps&lt;/code&gt; (of course).&lt;/p&gt;
&lt;h2 id=&quot;nps-basic-features&quot;&gt;&lt;code&gt;nps&lt;/code&gt;: Basic Features&lt;/h2&gt;
&lt;p&gt;(Wanna see the code? &lt;a href=&quot;https://gist.github.com/norswap/3506d2b46102c2f32f18acced0ecd798&quot;&gt;It&amp;#39;s here.&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;I want the command to match only my processes by default, but always also the
processes that don&amp;#39;t have controlling terminals. The same switch as regular &lt;code&gt;ps&lt;/code&gt;
(&lt;code&gt;-a&lt;/code&gt;) can be added to get the processes from all users.&lt;/p&gt;
&lt;p&gt;By default I only want the PID and the command name, because that&amp;#39;s what I care
about 99% of the time. But I want the ability to request other informations,
this is done through the &lt;code&gt;-o&lt;/code&gt; flag followed by a comma-separated set of field
specifiers described in &lt;code&gt;man ps&lt;/code&gt;, the whole list of which can be obtained by
running &lt;code&gt;ps -L&lt;/code&gt; or &lt;code&gt;nps -l&lt;/code&gt;. So if you just need the PID, you&amp;#39;d use &lt;code&gt;-o pid&lt;/code&gt;. If
you just need to lookup some frequently used info, I included the verbose &lt;code&gt;-v&lt;/code&gt;
flag, which acts like the &lt;code&gt;ps -j&lt;/code&gt; flag, though implemented in terms of &lt;code&gt;-o &amp;#39;user, pid, ppid, pgid, sess, jobc, state, tt, time, command&amp;#39;&lt;/code&gt;, which are the
displayed fields.&lt;/p&gt;
&lt;p&gt;In terms of matching, the command defaults to case-insensitive matching for
faster typing, but case-sensitivity can be obtained with the &lt;code&gt;-s&lt;/code&gt; flag. &lt;code&gt;nps&lt;/code&gt;
matches on the command name and PID, but it&amp;#39;s possible to specify the matching
criteria using the &lt;code&gt;-m&lt;/code&gt; flag (whose argument is similar to that of the &lt;code&gt;-o&lt;/code&gt;
flag). As a special case, if you specify &lt;code&gt;-m pid&lt;/code&gt;, &lt;code&gt;nps&lt;/code&gt; only matches on entire
PIDs, as it&amp;#39;s pretty much useless to match only part of the PID.&lt;/p&gt;
&lt;h2 id=&quot;improving-output&quot;&gt;Improving Output&lt;/h2&gt;
&lt;p&gt;Further improvements are concerned with output. &lt;code&gt;nps&lt;/code&gt; detects whether its output
is directed towards a terminal, and if that&amp;#39;s the case enable &lt;code&gt;grep&lt;/code&gt; output
colorization so that you can quickly identify what was matched. You can also
specify the &lt;code&gt;--color&lt;/code&gt; flag which forces colorizaton even when &lt;code&gt;nps&lt;/code&gt; is piped to
a file or other process (this will leave terminal color codes in the output).&lt;/p&gt;
&lt;p&gt;Similarly, &lt;code&gt;nps&lt;/code&gt; follows after &lt;code&gt;ps&lt;/code&gt; and clips command names if the output is a
terminal. However, this too can be controlled: use &lt;code&gt;--full&lt;/code&gt; to always output
full command names, and &lt;code&gt;--clip&lt;/code&gt; to always clip them. Note that the clip length
depends on the size of the terminal &lt;code&gt;nps&lt;/code&gt; is running in!&lt;/p&gt;
&lt;p&gt;Another related concern use is the inclusion of a header. By default, &lt;code&gt;ps&lt;/code&gt; will
include a line with the name of all fields (columns) on display. This can be
useful on the terminal when displaying a lot of fields (e.g. &lt;code&gt;nps -v&lt;/code&gt;) but not
otherwise, and while used in scripts it&amp;#39;s a nuisance to be parsed away. &lt;code&gt;nps&lt;/code&gt;
hides the header by default, but it can be included back with the &lt;code&gt;--header&lt;/code&gt;
option.&lt;/p&gt;
&lt;h2 id=&quot;killing-processes-with-nps&quot;&gt;Killing Processes with &lt;code&gt;nps&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Killing processes? Easy peezy, lemon squeezy, just add the &lt;code&gt;-k&lt;/code&gt; flag:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ nps -k sleep
# 60772 sleep 300&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;nps&lt;/code&gt; still prints the matched processes, which it also kills. Note it may fail
to kill the matched processes! If the exit code is 0 when using &lt;code&gt;-k&lt;/code&gt;, it means
that all matched processes were killed (or that no process was matched).&lt;/p&gt;
&lt;p&gt;As an aside, it&amp;#39;s rather difficult to make the decision of what to return when
no process is matched. On the one hand, all &lt;em&gt;matched&lt;/em&gt; processes (i.e. none) were
successfully killed. On the other hand, if you emit the command, you might
expect it to kill something. I opted for to return 0 when no process is matched
with &lt;code&gt;-k&lt;/code&gt; (while usually it would be 1), because it makes the command
&lt;a href=&quot;https://en.wikipedia.org/wiki/Idempotence&quot;&gt;idempotent&lt;/a&gt;, a very useful property when writing scripts.&lt;/p&gt;
&lt;p&gt;It might be slightly better if &lt;code&gt;nps&lt;/code&gt; reported on exactly which process were
killed and which lived on, though re-running &lt;code&gt;nps&lt;/code&gt; (without &lt;code&gt;-k&lt;/code&gt;) can easily
help determine which process are still alive, so all in all not a crucial
feature.&lt;/p&gt;
&lt;h2 id=&quot;argument-processing&quot;&gt;Argument Processing&lt;/h2&gt;
&lt;p&gt;It&amp;#39;s interesting to look at how &lt;code&gt;nps&lt;/code&gt; processes it&amp;#39;s arguments. Unlike most
commands, options can be freely mixed with regular arguments (which are passed
to &lt;code&gt;grep&lt;/code&gt; for matching purposes). One advantage is that if you want to kill a
process, you can first verify your query, then kill the process by appening the
&lt;code&gt;-k&lt;/code&gt; flag:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ nps foobar
# 59325 sleep 300
# # (press up, type &amp;#39; -k&amp;#39;)
$ nps foobar -k
# 59325 sleep 300&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you use an unknown flag (e.g. &lt;code&gt;-z&lt;/code&gt; or &lt;code&gt;--foobar&lt;/code&gt;), &lt;code&gt;nps&lt;/code&gt; will display its
help and exit with code 1. But what if you want to match flags — a totally
reasonable thing to do? Then you need to put those flags at the end, &lt;em&gt;after&lt;/em&gt; the
special &lt;code&gt;--&lt;/code&gt; separator:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ nps -- -li
# 2043 bash -li
#  519 bash -li&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I think it would be &lt;em&gt;slightly&lt;/em&gt; better if one could still have regular options
after. We could imagine to bracket sensitive options with &lt;code&gt;--&lt;/code&gt;: &lt;code&gt;nps -- -li -- -k&lt;/code&gt;, but then we also need a way to specify we want to match &lt;code&gt;--&lt;/code&gt; itself,
probably as a special flag (e.g. &lt;code&gt;--sep&lt;/code&gt;). This is a pretty big change to the
script for little benefits, so I&amp;#39;m holding out for now.&lt;/p&gt;
&lt;p&gt;All the &amp;quot;search&amp;quot; arguments are collected in order and merged (separated by a
whitespace). So in reality, it doesn&amp;#39;t really make sense to have more than one,
though it can be convenient to type &lt;code&gt;nps sleep 300&lt;/code&gt; rather than &lt;code&gt;nps &amp;#39;sleep 300&amp;#39;&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;regular-expressions-and-return-code&quot;&gt;Regular Expressions, and Return Code&lt;/h2&gt;
&lt;p&gt;The final search parameter (obtained through argument processing as described in
the last section) will be used as a &lt;a href=&quot;https://www.regular-expressions.info/posix.html&quot;&gt;Posix extended regular expression
(ERE)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This is something to keep in mind when you special characters which might need
to be quoted. For instance, to search for an interrogation mark: &lt;code&gt;nps &amp;#39;\?&amp;#39;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For instance, the following command will match and highlight all string literals
in running commands arguments:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ nps &amp;#39;&amp;quot;.*&amp;quot;&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As for the return code, &lt;code&gt;nps&lt;/code&gt; returns 0 if it matched processes, 1 otherwise.
This is different when using the &lt;code&gt;-k&lt;/code&gt; flag, as discussed above.&lt;/p&gt;
&lt;h2 id=&quot;potential-pitfalls&quot;&gt;Potential Pitfalls&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;nps&lt;/code&gt; was only tested on macOS Catalina, and given how finicky these things are,
it&amp;#39;s almost sure not to work out of the box on Linux.&lt;/p&gt;
&lt;p&gt;In particular, the &lt;code&gt;script&lt;/code&gt; command appears different in &lt;a href=&quot;http://man7.org/linux/man-pages/man1/script.1.html&quot;&gt;Linux&lt;/a&gt;
than in &lt;a href=&quot;https://www.unix.com/man-page/mojave/1/script/&quot;&gt;macOS&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;getting-nps&quot;&gt;Getting &lt;code&gt;nps&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://gist.github.com/norswap/3506d2b46102c2f32f18acced0ecd798&quot;&gt;&lt;code&gt;nps&lt;/code&gt; can be found in this Gist&lt;/a&gt;. Because it&amp;#39;s short, I&amp;#39;m also
joining a copy below:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;#!/bin/bash

### --- Constants ---

SCRIPT_CMD=&amp;#39;script -q /dev/null&amp;#39;
TAIL_CMD=&amp;#39;tail -n +2&amp;#39;

### --- Parameters ---

ALL=&amp;#39;&amp;#39;     # flag to match all users process
CASE=&amp;#39;-i&amp;#39;  # flag for case-insensitive matches
KILL=0     # if 1, kill matched processes

# ps fields to match on
MATCH_FIELDS=&amp;#39;-o pid,command&amp;#39;

# ps fields to output
OUTPUT_FIELDS=&amp;#39;-o pid,command&amp;#39;

# command used to strip the header (or not)
STRIP_HEADER=&amp;quot;$TAIL_CMD&amp;quot;

if [[ -t 1 ]]; then
    COLOR=&amp;#39;--color=always&amp;#39;  # whether to colorize output
    CLIP=&amp;quot;$SCRIPT_CMD&amp;quot;      # command to clip command names (or not)
else
    COLOR=&amp;#39;--color=none&amp;#39;
    CLIP=&amp;#39;&amp;#39;
fi

### --- Help ---

help() {
    echo -e &amp;quot;Usage: nps &amp;lt;opts or search terms&amp;gt; [-- &amp;lt;search terms&amp;gt;]\n&amp;quot; \
    &amp;quot;  Print processes.\n&amp;quot; \
    &amp;quot;    -a: include processes from [a]ll users\n&amp;quot; \
    &amp;quot;    -s: case-sensitive match\n&amp;quot; \
    &amp;quot;    -k: [k]ill the mached processes\n&amp;quot; \
    &amp;quot;    -h: print this [h]elp and exit\n&amp;quot; \
    &amp;quot;    -l: print the [l]ist of selectable fields and exit\n&amp;quot; \
    &amp;quot;    -m &amp;lt;fields&amp;gt;: specify comma-separated list of field to [m]atch on\n&amp;quot; \
    &amp;quot;       If specifying only &amp;#39;-m pid&amp;#39;, only matches entired PIDs. \n&amp;quot; \
    &amp;quot;    -o &amp;lt;fields&amp;gt;: specify comma-separated list of fields to [o]utput\n&amp;quot; \
    &amp;quot;    -v: [v]erbose output, equivalent to\n&amp;quot; \
    &amp;quot;        -o &amp;#39;user, pid, ppid, pgid, sess ,jobc, state, tt, time, command&amp;#39; \n&amp;quot; \
    &amp;quot;    --color: [c]olorize output even when piping to programs\n&amp;quot; \
    &amp;quot;    --header: include fields (columns) header in output\n&amp;quot; \
    &amp;quot;    --full: output full command name even if stdout is a terminal\n&amp;quot; \
    &amp;quot;    --clip: output clipped command name even if stdout is not a terminal\n&amp;quot; \
    &amp;quot;    --version: print version and exit\n&amp;quot;;
}

### --- Arg Parsing ---

POSITIONAL=()
while [[ $# -gt 0 ]]; do case &amp;quot;$1&amp;quot; in
    -a)  ALL=&amp;#39;-a&amp;#39;;;
    -s)  CASE=&amp;#39;&amp;#39;;;
    -v)  OUTPUT_FIELDS=&amp;quot;-o user, pid, ppid, pgid, sess, jobc, state, tt, time, command&amp;#39;&amp;quot;;;
    -o)  OUTPUT_FIELDS=&amp;quot;-o $2&amp;quot;; shift;;
    -m)   MATCH_FIELDS=&amp;quot;-o $2&amp;quot;; shift;;
    -k)  KILL=1;;
    -l)         ps -L; exit;;
    -h|--help)  help; exit;;
    --)         shift; break;;

    --color)    COLOR=&amp;#39;--color=always&amp;#39;;;
    --header)   STRIP_HEADER=&amp;#39;cat&amp;#39;;;
    --full)     CLIP=&amp;#39;&amp;#39;;;
    --clip)     CLIP=&amp;quot;$SCRIPT_CMD&amp;quot;;;
    --version)  echo 2020.03.22; exit;;
    -*)         help; exit 1;;

     *)  POSITIONAL+=(&amp;quot;$1&amp;quot;);;
    esac
    shift
done
set -- &amp;quot;${POSITIONAL[@]}&amp;quot; &amp;quot;$@&amp;quot; # restore positional parameters

### --- Match PIDs ---

filter_header_and_grep() {
    $TAIL_CMD | grep -v &amp;quot;$(which nps)&amp;quot; | grep -v &amp;quot; grep &amp;quot;
}
select_pids() {
    grep $CASE -E -- &amp;quot;$*&amp;quot; | awk &amp;#39;{ print $1 }&amp;#39;
}

# if matching on PID only, only match whole PIDs
[[ &amp;quot;$MATCH_FIELDS&amp;quot; == &amp;quot;-o pid&amp;quot; ]] &amp;amp;&amp;amp; MATCH_FIELDS=-&amp;quot;p $*&amp;quot;

# find matching PIDs
PIDS=&amp;quot;$(ps -x $ALL &amp;quot;$MATCH_FIELDS&amp;quot; | filter_header_and_grep | select_pids &amp;quot;$*&amp;quot;)&amp;quot;

# when no process is found: exit with 1, or with 0 when the -k flag is set
[[ &amp;quot;$PIDS&amp;quot; == &amp;#39;&amp;#39; ]] &amp;amp;&amp;amp; { [[ $KILL == 1 ]]; exit $?; }

### --- Output ---

highlight_matches() {
    if [[ &amp;quot;$*&amp;quot; == &amp;#39;&amp;#39; ]]; then cat; else grep $COLOR $CASE -E &amp;quot;($*)|$&amp;quot;; fi
}

# print with requested fields + highlighting
# the tr command cleans up the script command output
$CLIP ps -x &amp;quot;$OUTPUT_FIELDS&amp;quot; -p $PIDS | tr -d &amp;#39;\r&amp;#39; | $STRIP_HEADER | highlight_matches &amp;quot;$*&amp;quot;
EXIT=$?

### --- Kill ---

# kill matched processes if requested
if [[ $KILL == 1 ]]; then
    kill -9 $PIDS
    EXIT=$?
fi

exit $EXIT&lt;/code&gt;&lt;/pre&gt;
&lt;link href=&#39;https://cdnjs.cloudflare.com/ajax/libs/prism/1.19.0/themes/prism-tomorrow.min.css&#39; rel=&#39;stylesheet&#39; /&gt;
&lt;script
src=&#39;https://cdnjs.cloudflare.com/ajax/libs/prism/1.19.0/components/prism-core.min.js&#39;&gt;&lt;/script&gt;
&lt;script
src=&#39;https://cdnjs.cloudflare.com/ajax/libs/prism/1.19.0/plugins/autoloader/prism-autoloader.min.js&#39;&gt;&lt;/script&gt;
      </description>
      <pubDate>2020-03-24T23:00:00.000Z</pubDate>
      <link>http://norswap.com/nps-pkill-pgrep</link>
      <guid isPermaLink="true">http://norswap.com/nps-pkill-pgrep</guid>
    </item>
  </channel>
</rss>
