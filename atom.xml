<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>norswap</title>
    <description></description>      
    <link>http://norswap.com/</link>
    <atom:link href="http://norswap.com/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Ultimate PATH Management Guide</title>
      <description>
&lt;h2 id=&quot;basics-of-environment-variables-and-path&quot;&gt;Basics of Environment Variables and PATH&lt;/h2&gt;
&lt;p&gt;Each process has an &lt;em&gt;environment&lt;/em&gt;, a set of variables that the process can read
or write. When the process spawns another process, the new process inherits the
environment of its parent. These values are nevertheless &lt;em&gt;local&lt;/em&gt;: the child
inherits a copy of the variables of the parent at creation-time. If the parent
later changes his variables, the change will not be reflected on the child&amp;#39;s
variables.&lt;/p&gt;
&lt;p&gt;One particularly interesting environment variable is called &lt;code&gt;PATH&lt;/code&gt;: it defines
the paths to search to find an executable specified by name. The value of this
variable is a list of paths separated by a separator (&lt;code&gt;:&lt;/code&gt; on Unix-base OSes like
Mac OS X and Linux, &lt;code&gt;;&lt;/code&gt; on Windows).&lt;/p&gt;
&lt;p&gt;This is particularly relevant on the command line: when you type the name of a
program (for instance &lt;code&gt;ls&lt;/code&gt; in Unix), it will search the paths listed in the
&lt;code&gt;PATH&lt;/code&gt; variable (from left to right) until it finds one containing a &lt;code&gt;ls&lt;/code&gt;
executable.&lt;/p&gt;
&lt;p&gt;We&amp;#39;ll now see how each OS handles environment variables and the &lt;code&gt;PATH&lt;/code&gt;. One
particular question that will interest us is how the &amp;quot;default&amp;quot; value for the
environment variables (and the &lt;code&gt;PATH&lt;/code&gt; in particular) are set.&lt;/p&gt;
&lt;h2 id=&quot;windows&quot;&gt;Windows&lt;/h2&gt;
&lt;p&gt;In Windows, the initial values for environment variables are stored in the
&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows_Registry&quot;&gt;registry&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;These are separated between system values and user values. If a variable has
both a system and user value, the user value takes precedence, &lt;strong&gt;excepted&lt;/strong&gt; for
the PATH, where both values get concatenated (user PATH, &lt;code&gt;;&lt;/code&gt;, system PATH).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;User environment variables are stored in &lt;code&gt;HKEY_CURRENT_USER\Environment&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;System environment variables are stored in
&lt;code&gt;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session
Manager\Environment&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;explorer.exe&lt;/code&gt; will immediately reflect any change to these values, and any
program launched by it will inherit these values.&lt;/p&gt;
&lt;p&gt;All other programs, on the other hand, need to be restarted. A few comments
about programs of interest:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The &lt;a href=&quot;http://www.launchy.net/&quot;&gt;Launchy&lt;/a&gt; app launcher automatically updates the
environment before launching a program.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;a href=&quot;https://conemu.github.io/&quot;&gt;ConEmu&lt;/a&gt; console emulator is by default
configured to hijack the opening of new consoles and open them in the existing
ConEmu window instead (this is a good thing). The problem that is when
intercepting consoles opened by &lt;code&gt;explorer.exe&lt;/code&gt;, the environment seems to be set to
that of the ConEmu window (i.e. the environment when a console was first
launched). See &lt;a href=&quot;https://github.com/Maximus5/ConEmu/issues/468&quot;&gt;this issue&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;How to change the environment&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Locally in a console: use the built-in &lt;a href=&quot;http://ss64.com/nt/set.html&quot;&gt;set&lt;/a&gt; command.
You can clear a variable by assigning it nothing: &lt;code&gt;set X=&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Globally in a console: use &lt;a href=&quot;http://ss64.com/nt/setx.html&quot;&gt;setx&lt;/a&gt; (built-in Windows
7+, &lt;a href=&quot;https://www.microsoft.com/en-us/download/details.aspx?id=18546&quot;&gt;download&lt;/a&gt; for previous versions)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;From the explorer, &lt;a href=&quot;https://www.java.com/en/download/help/path.xml&quot;&gt;follow these instructions&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use the excellent &lt;a href=&quot;https://www.rapidee.com/en/about&quot;&gt;Rapid Environment Editor&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Running scripts on the command line&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;On Windows, it is customary to append an extension to executables binaries
(&lt;code&gt;.exe&lt;/code&gt;) and scripts (&lt;code&gt;.bat&lt;/code&gt;, &lt;code&gt;.sh&lt;/code&gt;, &lt;code&gt;.py&lt;/code&gt;, ...). However, typing this extension
to run the program is not very desirable.&lt;/p&gt;
&lt;p&gt;There is an environment variable called &lt;code&gt;PATHEXT&lt;/code&gt; which holds a list of all
extensions that can be run on the command line. Basically, if a file has its
extension in this list, you can type its name ommitting the extension and it
will run as though you double clicked it. There might be some additional finesse
here, but it will be like this most of the time. The order of the extensions
inside &lt;code&gt;PATHEXT&lt;/code&gt; is important if there are two files with the same name but
different extensions. Extensions earlier in the list have more priority.&lt;/p&gt;
&lt;h2 id=&quot;unix&quot;&gt;Unix&lt;/h2&gt;
&lt;p&gt;Both Mac OS X and Linux are Unix-based OSes. As such, the basic principles of
how environment variables are handled is similar. I&amp;#39;ll explain this here before
talking about the peculiarities of each OS.&lt;/p&gt;
&lt;p&gt;In Unix, a process does not automatically inherit all the environment variables
of its parents. It only inherits those that are explicitly exported.&lt;/p&gt;
&lt;p&gt;In a shell script, or on the command line, we can mark a variable &lt;code&gt;X&lt;/code&gt; for export
by writing &lt;code&gt;export X&lt;/code&gt;. This can also be combined with the definition of the
variable: &lt;code&gt;export X=&amp;quot;some stuff&amp;quot;&lt;/code&gt;. You can un-export something with &lt;code&gt;export -n&lt;/code&gt;.
Removing purely and simply a variable is done with &lt;code&gt;unset&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On Unix, environment variables are initialized by shell scripts. Some scripts
are executed each time a shell is run. Which scripts are run depends on whether
the shell is a &lt;em&gt;login shell&lt;/em&gt; and wether it is &lt;em&gt;interactive&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The rules are rather complex,
but &lt;a href=&quot;https://github.com/rbenv/rbenv/wiki/Unix-shell-initialization&quot;&gt;this page does a good job at summarizing them&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also beware that your scripts may source other files, including those that
mentionned in that guide.&lt;/p&gt;
&lt;p&gt;When taking inheritance into account, usually the right thing to do is to define
your environment variables in &lt;code&gt;~/.profile&lt;/code&gt; or equivalent. One caveat: the file
won&amp;#39;t get sourced when running a command remotely via SSH (that is, when running
a command through &lt;code&gt;ssh&lt;/code&gt; without creating an interactive shell).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Reloading the environment&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Reloading the environment in an existing shell after you edited &lt;code&gt;.profile&lt;/code&gt; can
be tricky. One easy solution would be to re-source &lt;code&gt;.profile&lt;/code&gt;, but there are a
few caveats:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Sourcing your &lt;code&gt;.profile&lt;/code&gt; should not have unwanted side-effects.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Often variables are not just set, but are &lt;em&gt;modified&lt;/em&gt;. This is typically the&lt;/p&gt;
&lt;p&gt;case for &lt;code&gt;PATH&lt;/code&gt;, where you append to the existing definition.&lt;/p&gt;
&lt;p&gt;In this case, if you reload the &lt;code&gt;.profile&lt;/code&gt;, you&amp;#39;ll end up with many duplicate
entries in your PATH, and you&amp;#39;ll fail to clear entries you want removed.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hence: no side-effects; set variables, don&amp;#39;t modify them.&lt;/p&gt;
&lt;h2 id=&quot;mac-os-x&quot;&gt;Mac OS X&lt;/h2&gt;
&lt;p&gt;OS X has a fantastic little utility called &lt;code&gt;path_helper&lt;/code&gt; that will help you
manage the PATH. Basically what it does is read the files in &lt;code&gt;/etc/paths.d&lt;/code&gt; and
appends their content to the PATH (one entry per line). Files are read in
lexicographic order, so you can control the order of entries in the PATH.&lt;/p&gt;
&lt;p&gt;Ironically, &lt;code&gt;path_helper&lt;/code&gt; is not itself on the path, so you must call it through
its fully qualified name &lt;code&gt;/usr/libexec/path_helper&lt;/code&gt;. The output of &lt;code&gt;path_helper&lt;/code&gt;
is a shell command to set the PATH. This command must itself be evaluated.&lt;/p&gt;
&lt;p&gt;I suggest to define the following shell alias for ease of use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alias refresh_path=&amp;#39;eval `/usr/libexec/path_helper -s`&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &lt;code&gt;-s&lt;/code&gt; part is just to ensure a bash-compatible command is generated.&lt;/p&gt;
&lt;p&gt;By default, OS X calls &lt;code&gt;path_helper&lt;/code&gt; in &lt;code&gt;/etc/profile&lt;/code&gt; so you do not need to add
it yourself.&lt;/p&gt;
&lt;p&gt;Oh and by the way, &lt;code&gt;path_helper&lt;/code&gt; does the same thing it does to &lt;code&gt;PATH&lt;/code&gt; to
&lt;code&gt;MANPATH&lt;/code&gt; (which holds the paths used to find manpages) but with the
&lt;code&gt;/etc/manpaths.d&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;Final word of caution: &lt;code&gt;/etc/paths.d&lt;/code&gt; requires root permission to write into.
However, the files must be readable without root permissions to be used by
&lt;code&gt;path_helper&lt;/code&gt;. Hence you might need to do a &lt;code&gt;chmod 644&lt;/code&gt; on the files you create
in that directory.&lt;/p&gt;
&lt;p&gt;See &lt;a href=&quot;http://www.softec.lu/site/DevelopersCorner/MasteringThePathHelper&quot;&gt;this webpage&lt;/a&gt; for more details about &lt;code&gt;path_helper&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Setting the PATH for GUI applications&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ways of definin the PATH for GUI applications on OS X have a history of
breaking. You may read on the net about &lt;code&gt;~/.MacOSX/environment.plist&lt;/code&gt; or
&lt;code&gt;launchd.conf&lt;/code&gt;, but those no longer works.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/a/26586170&quot;&gt;&amp;quot;The&amp;quot; solution&lt;/a&gt;, at the time of writing, is to create a file
&lt;code&gt;~/Library/LaunchAgents/environment.plist&lt;/code&gt;, enter a bunch of boilerplate and
include &lt;code&gt;launchtl setenv&lt;/code&gt; commands to set environment variables.
See &lt;a href=&quot;http://stackoverflow.com/a/26586170&quot;&gt;this explanation&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;After a change, you can make it take effect with &lt;code&gt;launchctl load
~/Library/LaunchAgents/environment.plist&lt;/code&gt; (or wait for a reboot).&lt;/p&gt;
&lt;p&gt;Once applied, new applications started from the Finder (or Spotlight) will
inherit the environment variables set in &lt;code&gt;environment.plist&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note that what &lt;code&gt;environment.plist&lt;/code&gt; does is simply run a script. You could use
that to actually source your &lt;code&gt;.profile&lt;/code&gt; or invoke &lt;code&gt;path_helper&lt;/code&gt;. Two solutions
that work with this idea (but doing rather more complicated things) are to be
found &lt;a href=&quot;http://stackoverflow.com/a/32405815&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;http://superuser.com/a/476960&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The difficulty to achieve something so basic is truly baffling.&lt;/p&gt;
&lt;h2 id=&quot;linux&quot;&gt;Linux&lt;/h2&gt;
&lt;p&gt;There are too many desktop managers for Linux to cover. Cursory searches seem to
indicate that this aspect isn&amp;#39;t too well thought-out however.&lt;/p&gt;
&lt;p&gt;However, Linux should, &lt;em&gt;in theory&lt;/em&gt;, be more scrupulous than OS X about
inheriting the PATH, even in GUI applications. Which means that, editing
&lt;code&gt;.profile&lt;/code&gt; and rebooting &lt;em&gt;should&lt;/em&gt; work as a last resort.&lt;/p&gt;
&lt;p&gt;Some distributions (notably Debian, Ubuntu, Fedora) have files called
&lt;code&gt;~/.pam_environment&lt;/code&gt; and &lt;code&gt;/etc/environment&lt;/code&gt; where they recommend you define your
environment variables. The benefits of this way of doing things are rather
unclear, since it doesn&amp;#39;t seem to enable anything that couldn&amp;#39;t be done by
defining variables in &lt;code&gt;.profile&lt;/code&gt;.&lt;/p&gt;
      </description>
      <pubDate>2017-01-23T23:00:00.000Z</pubDate>
      <link>http://norswap.com/path-mgmt</link>
      <guid isPermaLink="true">http://norswap.com/path-mgmt</guid>
    </item>
    <item>
      <title>Sync Your IntelliJ Settings Between Machines</title>
      <description>
&lt;p&gt;I recently learned that it was possible to share one&amp;#39;s IntelliJ settings between
multiple machines.&lt;/p&gt;
&lt;h2 id=&quot;basic-setup&quot;&gt;Basic Setup&lt;/h2&gt;
&lt;p&gt;To do so, first install the &lt;a href=&quot;https://plugins.jetbrains.com/idea/plugin/7566-settings-repository&quot;&gt;Settings Repository plugin&lt;/a&gt;. Then, follow
these &lt;a href=&quot;https://www.jetbrains.com/help/idea/2016.3/sharing-your-ide-settings.html&quot;&gt;instructions&lt;/a&gt;. &lt;strong&gt;However&lt;/strong&gt;, do not complete step 3 (which seems
inconsistent with the actual UI), but instead, redo step 2 on each machine on
which you want to sync your settings (except you should use &amp;quot;overwrite local&amp;quot; or
&amp;quot;merge&amp;quot; instead of &amp;quot;overwrite remote&amp;quot;).&lt;/p&gt;
&lt;p&gt;It&amp;#39;s done! The settings should sync automatically, but you can force a re-sync
by using an action of the &lt;code&gt;VCS &amp;gt; Sync Settings&lt;/code&gt; menu.&lt;/p&gt;
&lt;h2 id=&quot;keybinding-troubles&quot;&gt;Keybinding Troubles&lt;/h2&gt;
&lt;p&gt;I use IntelliJ on both Windows and MacOS. &lt;/p&gt;
&lt;p&gt;As you may know, Macs keyboard have this layout on the bottom left of the last row:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;fn | control | alt | command
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;On the other hand, classical IBM-style keyboard (which I use on my Windows
 machine) have this layout:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;control | win | alt
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Moreover, in MacOS, most shortcuts where &lt;code&gt;control&lt;/code&gt; is used on Windows use
&lt;code&gt;command&lt;/code&gt; instead.&lt;/p&gt;
&lt;p&gt;I like to keep things as similar as possible, which is why I inverted &lt;code&gt;command&lt;/code&gt;
and &lt;code&gt;control&lt;/code&gt;on MacOS (in &lt;code&gt;System Preferences &amp;gt; Keyboard &amp;gt; Modifier Keys...&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;But now I have an issue in IntelliJ: I want keybinds that use &lt;code&gt;control&lt;/code&gt; on
Windows to use &lt;code&gt;command&lt;/code&gt; on MacOS, and vice-versa. IntelliJ is not able to make
this conversion for me.&lt;/p&gt;
&lt;p&gt;What I ended up doing was building two scripts: &lt;code&gt;kbd_mac_to_win.sh&lt;/code&gt; and
&lt;code&gt;kbd_win_to_mac.sh&lt;/code&gt; (you can find them along with my IntelliJ
config &lt;a href=&quot;https://github.com/norswap/intellij-settings&quot;&gt;here&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;These scripts take the MacOS / Windows version of the keymap file, and convert
it to the equivalent in the other OS by converting between &lt;code&gt;control&lt;/code&gt; and
&lt;code&gt;command&lt;/code&gt; keys (note that internally, IntelliJ calls the &lt;code&gt;command&lt;/code&gt; key &lt;code&gt;meta&lt;/code&gt;).&lt;/p&gt;
&lt;h2 id=&quot;a-failed-attempt-to-automate-things&quot;&gt;A Failed Attempt to Automate Things&lt;/h2&gt;
&lt;p&gt;This is good and well, but running these commands each time I make a change to
my keybindings gets tiresome quickly.&lt;/p&gt;
&lt;p&gt;So I tried to automate it using git hooks. I succeeded, but only when using
&lt;code&gt;git&lt;/code&gt; on the command line. My suspicion is that IntelliJ uses some kind of
library that do not execute hooks.&lt;/p&gt;
&lt;p&gt;Nevertheless, I wrote the explanation while developing it on the command line,
so here it is anyway. It at least taught me how git hooks work, as well as the
&lt;a href=&quot;https://git-scm.com/book/en/v2/Customizing-Git-Git-Attributes#Keyword-Expansion&quot;&gt;smudge / clean&lt;/a&gt; feature (which I didn&amp;#39;t end up using).&lt;/p&gt;
&lt;h3 id=&quot;automating-with-git-hooks&quot;&gt;Automating with Git Hooks&lt;/h3&gt;
&lt;p&gt;I use a pre-commit and a post-commit hook. This was based off an idea I found
&lt;a href=&quot;http://stackoverflow.com/a/12802592/298664&quot;&gt;on Stack Overflow&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I&amp;#39;ve pushed the hooks to the &lt;a href=&quot;https://github.com/norswap/intellij-settings&quot;&gt;same repository&lt;/a&gt; as my settings (look for
the files named &lt;code&gt;pre-commit&lt;/code&gt; and &lt;code&gt;post-commit&lt;/code&gt;). To install them, you need to
copy or symlink them to the &lt;code&gt;.git/hooks&lt;/code&gt; directory of your repository.&lt;/p&gt;
&lt;p&gt;The solution is not perfect. Namely if both the Windows and the Mac keymap have
changed, the script will give up and ask you to resolve the conflict manually.
Still, it works well enough for my purposes.&lt;/p&gt;
&lt;h3 id=&quot;locating-the-intellij-settings-repository&quot;&gt;Locating the IntelliJ Settings Repository&lt;/h3&gt;
&lt;p&gt;To install this stuff, you&amp;#39;ll need to locate your settings repository.&lt;/p&gt;
&lt;p&gt;For IntelliJ 2016.3 (and presumably, it&amp;#39;s similar for most other versions)
lives in
&lt;code&gt;C:\Users\&amp;lt;USERNAME&amp;gt;\.IdeaIC2016.3\config\settingsRepository\repository&lt;/code&gt; on
Windows.&lt;/p&gt;
&lt;p&gt;On MacOS, it&amp;#39;s &lt;code&gt;/Users/&amp;lt;USERNAME&amp;gt;/Library/IdeaIC2016.3/settingsRepository/repository&lt;/code&gt;.&lt;/p&gt;
      </description>
      <pubDate>2016-12-25T23:00:00.000Z</pubDate>
      <link>http://norswap.com/intellij-sync</link>
      <guid isPermaLink="true">http://norswap.com/intellij-sync</guid>
    </item>
    <item>
      <title>briefly</title>
      <description>
&lt;p&gt;I made a small Tweeter bot that tweets one Japanese Kana every hour.
It&amp;#39;s written in Node.js and deployed to Heroku. It turned out easier than
expected.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/kanatweeter&quot;&gt;https://twitter.com/kanatweeter&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/norswap/kana-tweeter&quot;&gt;https://github.com/norswap/kana-tweeter&lt;/a&gt;&lt;/p&gt;
      </description>
      <pubDate>2016-12-13T23:00:00.000Z</pubDate>
      <link>http://norswap.com/kana-tweeter-announce</link>
      <guid isPermaLink="true">http://norswap.com/kana-tweeter-announce</guid>
    </item>
    <item>
      <title>Deep Neural Pathways</title>
      <description>
&lt;p&gt;I sometimes worry that by specializing in certain of tasks at the exclusion of
others, I will lose the ability to learn new skills; that my neural pathways
will get frozen in a certain configuration, baking my current skillset into my
brain.&lt;/p&gt;
&lt;p&gt;But maybe it isn&amp;#39;t that bad. You lose flexibility, but you gain efficiency.
People who are great at their job do have it &amp;quot;wired&amp;quot; in them in some sense. They
see what is relevant from so far, it&amp;#39;s eerie. Maybe it&amp;#39;s because they ONLY see
what is relevant to their area of expertise.&lt;/p&gt;
&lt;p&gt;Of course, one should thrive to bake in the &lt;em&gt;right&lt;/em&gt; sets of defaults. And to
know when to reconfigure.&lt;/p&gt;
&lt;p&gt;Yesterday on Slack, a colleague (Simon) linked a video of
&lt;a href=&quot;https://www.youtube.com/watch?v=MFzDaBzBlL0&quot;&gt;a guy learning to ride an inverse bicycle&lt;/a&gt; that turns right when you
steer left and vice-versa. Turns out it&amp;#39;s amazingly hard. But after eight
months, he got it. And guess what: after a while he couldn&amp;#39;t ride the normal
bicycle anymore -- he had to try 20 minutes for it to come back.&lt;/p&gt;
&lt;p&gt;So what he did was not that he became more flexible: he overwrote a set of baked
circuitry with another set. I don&amp;#39;t know what the moral of the story is, but it
certainly makes you think.&lt;/p&gt;
      </description>
      <pubDate>2016-11-08T23:00:00.000Z</pubDate>
      <link>http://norswap.com/deep-neural-pathways</link>
      <guid isPermaLink="true">http://norswap.com/deep-neural-pathways</guid>
    </item>
    <item>
      <title>Robin Hood Hashing on the JVM</title>
      <description>
&lt;p&gt;Robin Hood Hashing, despite its name, isn&amp;#39;t a hashing technique, but rather a
way to implement &lt;a href=&quot;https://en.wikipedia.org/wiki/Linear_probing&quot;&gt;linear-probing hash tables&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In the classical linear probing implementation, whenever a hash table slot is
already taken (due to hash collision), you probe ahead until you find an empty
slot. When the hash table is highly loaded, this can lead to entries being
stored far away from their preferred position.&lt;/p&gt;
&lt;p&gt;Robin Hood Hashing features a notion of &lt;em&gt;displacement&lt;/em&gt;. The displacement of an
entry is the distance between its actual position and its preferred position.
Furthermore, we call &lt;em&gt;probe count&lt;/em&gt; the number of probed slots in order to find a
free slot. When inserting an entry, the final probe count is the diplacement.&lt;/p&gt;
&lt;p&gt;When inserting an entry A using Robin Hood Hashing, if you encounter an entry B
whose displacement is smaller than the probe count, you insert A in B&amp;#39;s
position, and relocate B further in the table (following the same rules).&lt;/p&gt;
&lt;p&gt;The result is that the displacements of all entries in the map tend to even out.
The length of the longest displacement tends to increase as the load increase
but very slowly (around 6 for a load of 0.9 &amp;mdash; see
&lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.130.6339&quot;&gt;this paper (pdf)&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The technique is actually quite old. It was first &lt;a href=&quot;https://cs.uwaterloo.ca/research/tr/1986/CS-86-14.pdf&quot;&gt;published in 1986&lt;/a&gt;.
As for me, I first become aware of Robin Hood Hashing through
&lt;a href=&quot;http://www.sebastiansylvan.com/post/robin-hood-hashing-should-be-your-default-hash-table-implementation/&quot;&gt;a post by Sebastian Sylvan&lt;/a&gt;. Emmanuel Goossaert also has two posts
(&lt;a href=&quot;http://codecapsule.com/2013/11/11/robin-hood-hashing/&quot;&gt;one&lt;/a&gt;, &lt;a href=&quot;http://codecapsule.com/2013/11/17/robin-hood-hashing-backward-shift-deletion/&quot;&gt;two&lt;/a&gt;) analyzing and then improving the technique. If you&amp;#39;re
looking for further information, I highly recommend these posts.&lt;/p&gt;
&lt;p&gt;I was interesting in a more pragmatic question: could I use Robin Hood Hashing
and get a boost in performance? In particular, how would it perform on the JVM,
where I do most of my work these days?&lt;/p&gt;
&lt;p&gt;I implemented two versions of the algorithm (&lt;a href=&quot;https://github.com/ncellar/robinmap&quot;&gt;source&lt;/a&gt;). The first versions
stores entry objects in the table (hence requiring an extra indirection for each
probed slot). The second version used two tables: the first one was an array of
integers, where each table entry occupies two array entries. The first array
entry is the hash, the second is the displacement. The second table is an array
of objects. Here too, each table entry occupies two array entry. The first array
entry is the key, the second is the value. The theory is that most of the time,
when probing, you only need to check the hash and the displacement. Having those
in the primary table avoids extra indirection (and hence cache misses).&lt;/p&gt;
&lt;p&gt;Disappointingly enough, the performance delta between both techniques is too
small to be meaningful. In general however, the technique is almost as fast as
Java&amp;#39;s &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/HashMap.html&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt; implementation. With some performance tweaking, I
believe it would be possible to close the gap. Be warned that my measurements
are very wonky. Nevertheless they gave me confidence enough to come to two
conclusions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Robin Hood Hashing is practical and fast enough to rival separate-chaining
hash table implementation (like Java&amp;#39;s &lt;code&gt;HashMap&lt;/code&gt;) on the JVM.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;However, it is not significantly faster either, and so it&amp;#39;s probably not worth
the trouble of maintaining my own implementation.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note this says nothing about the relative performance of Robin Hood Hashing and
separate-chaining on other platforms than the JVM.&lt;/p&gt;
&lt;p&gt;And off course, you should totally perform you own measurements. You can get
started from &lt;a href=&quot;https://github.com/ncellar/robinmap&quot;&gt;my own code&lt;/a&gt;. If anyone has more data to add to the
discussion, make sure to share it in the comments.&lt;/p&gt;
      </description>
      <pubDate>2016-10-09T22:00:00.000Z</pubDate>
      <link>http://norswap.com/robin-hood-hashing-jvm</link>
      <guid isPermaLink="true">http://norswap.com/robin-hood-hashing-jvm</guid>
    </item>
    <item>
      <title>Learned Optimism</title>
      <description>
&lt;p&gt;Summary of &lt;a href=&quot;https://github.com/raganwald/presentations/blob/master/optimism.md&quot;&gt;Reginald Braithwaite&amp;#39;s presentation&lt;/a&gt; at Nordic Ruby 2016.&lt;/p&gt;
&lt;p&gt;Learned Optimism is a book by Dr. Martin Seligman.&lt;/p&gt;
&lt;p&gt;The book exposes a theory about how people explain things to themselves. We all
do this, it&amp;#39;s part of the whole sentience thing we have going on. Something
happens, and we make up a little theory about why it happened.&lt;/p&gt;
&lt;p&gt;The explanations you produce are classified along the following axis:&lt;/p&gt;
&lt;dl&gt;

  &lt;dt&gt;Personal vs Impersonal&lt;/dt&gt;

  &lt;dd&gt;Whether the explanation makes you responsible for the thing that happened
  (personal) or not (impersonal).&lt;/dd&gt;

  &lt;dt&gt;Specific vs General&lt;/dt&gt;

  &lt;dd&gt;Is the explanation about the thing that happened (specific), or are they
  about you, your beliefs, your methods, ... (general).&lt;/dd&gt;

  &lt;dt&gt;Temporary vs Permanent&lt;/dt&gt;

  &lt;dd&gt;Is the thing that happened temporary? Or is it permanent? Did it happen
  just one time, or is it a pattern that will repeat itself?&lt;/dd&gt;

&lt;/dl&gt;

&lt;p&gt;Seligman research showed that explanations differ depending on whether the
explainer is an optimist or a pessimist, and whether the thing that happened is
good or bad.&lt;/p&gt;
&lt;dl&gt;
    &lt;dt&gt;Optimists&lt;/dt&gt;

    &lt;dd&gt;
    &lt;ul&gt;
    &lt;li&gt;Good things are personal, general, and permanent.&lt;/li&gt;
    &lt;li&gt;Bad things are impersonal, specific, and temporary.&lt;/li&gt;
    &lt;/ul&gt;
    &lt;/dd&gt;

    &lt;dt&gt;Pessimists&lt;/dt&gt;

    &lt;dd&gt;
    &lt;ul&gt;
    &lt;li&gt;Good things are impersonal, specific, and temporary.&lt;/li&gt;
    &lt;li&gt;Bad things are personal, general, and permanent.&lt;/li&gt;
    &lt;/ul&gt;
    &lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Both optimists are pessimists are inconsistent in their explanations, but in a
different way.&lt;/p&gt;
&lt;p&gt;This is a simplified model, and may even seem silly; but if you&amp;#39;re like me
(norswap), it&amp;#39;s hard not to recognize that you flog yourself over your mistakes
more often than you pat yourself on the back for your achievements.&lt;/p&gt;
&lt;p&gt;Seligman says you can train yourself to become an optimist, and this implies
changing the patterns of your explanations. He claims this changes your mood and
your productivity.&lt;/p&gt;
&lt;p&gt;It is not controversial to say that our moods affect the explanations we make up
for things that happen in our lives. Explanatory Theory takes it a step further
and says that the explanations we make up for things also affect our moods and
behaviour.&lt;/p&gt;
&lt;p&gt;To train yourself to become an optimist:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You train yourself to make a note of your explanations, every day. Repetition
and consistency matters.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You analyze whether your explanations for good things are personal, general,
and permanent. You analyze whether your explanations for bad things are
impersonal, specific, and temporary.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You correct your explanations to make them optimistic. And you track your
progress, just as you would track your progress for anything else you are
trying to change in your life.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
      </description>
      <pubDate>2016-09-26T22:00:00.000Z</pubDate>
      <link>http://norswap.com/learned-optimism</link>
      <guid isPermaLink="true">http://norswap.com/learned-optimism</guid>
    </item>
    <item>
      <title>Book Summaries</title>
      <description>
&lt;p&gt;I like to read a lot, notably books about psychology, philosophy, and other
actionable topics. However, I often feel that these book dilute their ideas too
much, in order to make a &amp;quot;proper&amp;quot; (fat) book out of it.&lt;/p&gt;
&lt;p&gt;But now, I have the cure. &lt;a href=&quot;https://www.quora.com/What-are-the-best-book-summary-websites&quot;&gt;This list of book summary websites&lt;/a&gt; covers
a large range of books in the topics that interest me.&lt;/p&gt;
&lt;p&gt;Here&amp;#39;s a copy of the list for posterity:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.deconstructingexcellence.com/&quot;&gt;Deconstructing Excellence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sivers.org/book&quot;&gt;Derek Sivers&amp;#39; Books Read&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.farnamstreetblog.com/&quot;&gt;Farnam Street&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://fourminutebooks.com/all-summaries/&quot;&gt;4 Minute Books&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;www.actionablebooks.com/en-ca/summaries/&quot;&gt;Actionable Books&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://app.blinkist.com/en/library/&quot;&gt;Blinkist (paid)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The first four websites are great, but the selection is limited.&lt;/p&gt;
&lt;p&gt;Actionable Books has a lot of things, but the summaries only include 3/4 bullet
points and sometimes fail to capture the essence of the book, as far as I&amp;#39;ve
seen.&lt;/p&gt;
&lt;p&gt;Blinkist seemed like the most well-rounded option. I made a trial account and
was quite satisfied with the two summaries I read.&lt;/p&gt;
      </description>
      <pubDate>2016-09-23T22:00:00.000Z</pubDate>
      <link>http://norswap.com/book-summaries</link>
      <guid isPermaLink="true">http://norswap.com/book-summaries</guid>
    </item>
    <item>
      <title>briefly</title>
      <description>
&lt;p&gt;As a learning exercise, I implemented the CHAMP (Compressed Hash-Array Mapped
Prefix-tree) data structure in Kotlin.
&lt;a href=&quot;https://github.com/norswap/triemap&quot;&gt;Check it here.&lt;/a&gt;&lt;/p&gt;
      </description>
      <pubDate>2016-09-22T22:00:00.000Z</pubDate>
      <link>http://norswap.com/triemap-champ</link>
      <guid isPermaLink="true">http://norswap.com/triemap-champ</guid>
    </item>
    <item>
      <title>A website for your project with Github</title>
      <description>
&lt;p&gt;Github has a thing called &lt;a href=&quot;https://pages.github.com/&quot;&gt;Github Pages&lt;/a&gt; that lets you publish a static HTML
website directly from your github repository. It&amp;#39;s quite handy, but I&amp;#39;m not
really convinced with the documentation. So here goes the super-duper easy guide
on how to add Github Pages to your existing project and manage it easily.&lt;/p&gt;
&lt;p&gt;Run the following commands:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir pages
cd pages
git init .
git remote add origin git@github.com:USERNAME/REPO.git
git checkout --orphan gh-pages
git commit --allow-empty -m &amp;quot;initial empty commit (pages)&amp;quot;
git push -u origin gh-pages
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Finally, add &lt;code&gt;/pages/&lt;/code&gt; to the &lt;code&gt;.gitignore&lt;/code&gt; file for your project.&lt;/p&gt;
&lt;p&gt;What it does: basically it clones your repo inside the &lt;code&gt;pages&lt;/code&gt; directory and
immediately switches to an empty, commit-less branch called &lt;code&gt;gh-pages&lt;/code&gt; (as
required by Github).&lt;/p&gt;
&lt;p&gt;Github simply serves any file within the &lt;code&gt;gh-pages&lt;/code&gt; branch to the brower through
&lt;code&gt;USERNAME.github.io/PROJECT/&lt;/code&gt;. If you&amp;#39;ve set up a custom domain name with
Github, this domain will be used instead of &lt;code&gt;USERNAME.github.io&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When inside the &lt;code&gt;page&lt;/code&gt; directory, you can make changes to your website, commit
them and publish them with &lt;code&gt;git push&lt;/code&gt;.&lt;/p&gt;
      </description>
      <pubDate>2016-09-21T22:00:00.000Z</pubDate>
      <link>http://norswap.com/github-pages</link>
      <guid isPermaLink="true">http://norswap.com/github-pages</guid>
    </item>
    <item>
      <title>Cruising Blues</title>
      <description>
&lt;p&gt;Completing my series of posts about Robert Pirsig&amp;#39;s
&lt;a href=&quot;https://en.wikipedia.org/wiki/Zen_and_the_Art_of_Motorcycle_Maintenance&quot;&gt;Zen and the Art of motorcycle Maintenance&lt;/a&gt; (&lt;a href=&quot;/stuckness-and-understanding&quot;&gt;1&lt;/a&gt;, &lt;a href=&quot;/peace-of-mind&quot;&gt;2&lt;/a&gt;, &lt;a href=&quot;/gumption-arete&quot;&gt;3&lt;/a&gt;), here&amp;#39;s a
fantastic expert from an article of Pirsig, titled
&lt;a href=&quot;http://www.moq.org/forum/Pirsig/cruisingblues.html&quot;&gt;Cruising Blues and Their Cure&lt;/a&gt; and published in Esquire in 1977.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Virtue here comes from childhood reading about the old days of sailing ships
when young men were sent to sea to learn manliness and virtue. I remember being
skeptical about this. &amp;quot;How could a monotonous passage across a pile of water
produce virtue?&amp;quot; I wondered. I figured that maybe a few bad storms would scare
hell out of the young men and this would make them humble and manly and virtuous
and appreciative of life ever afterward, but it seemed like a dubious
curriculum. There were cheaper and quicker ways to scare people than that.&lt;/p&gt;
&lt;p&gt;Now, however, with a boat of my own and some time at sea, I begin to see the
learning of virtue another way. It has something to do with the way the sea and
sun and wind and sky go on and on day after day, week after week, and the boat
and you have to go on with it. You must take the helm and change the sails and
take sights of the stars and work out their reductions and sleep and cook and
eat and repair things as they break and do most of these things in stormy
weather as well as fair, depressed as well as elated, because there&amp;#39;s no choice.
You get used to it; it becomes habit-forming and produces a certain change in
values. Old gear that has been through a storm or two without failure becomes
more precious than it was when you bought it because you know you can trust it.
The same becomes true of fellow crewmen and ultimately becomes true of things
about yourself. Good first appearances count for less than they ever did, and
real virtue - which comes from an ability to separate what merely looks good
from what lasts and the acquisition of those characteristics in one&amp;#39;s self - is
strengthened.&lt;/p&gt;
&lt;p&gt;Self-discovery is as much a philosopher&amp;#39;s imponderable as reality, but when one
takes away the external stimuli of civilization during long ocean hours at the
helm far from any land, and particularly on overcast nights, every cruising
sailor knows that what occurs is not an evening of complete blankness. Instead
comes a flow of thought drawn forth by the emptiness of the night. Occurrences
of the previous day, meager as they may have been, rise and are thought about
for a while, and then die away to return again later, a little less compelling,
and perhaps another time even weaker, until they die away completely and are not
thought of again. Then older memories appear, of a week past, a month past, of
years past, and these are thought about and sometimes interrelated with new
insights. A problem that has been baffling in the past is now understood
quickly. New ideas for things seem to pop up from nowhere because the rigid
patterns of thought that inhibited them are now weakened by emptiness and
depression. Then in time these new thoughts wear town too, and the empty night
dredges deeper into the subconscious to tug at, loosen and dislodge old
forgotten thoughts that were repressed years ago. Old injustices that one has
had to absorb, old faces now gone, ancient feelings of personal doubt, remorse,
hatred and fear, are suddenly loose and at you. You must face them again and
again until they die away like the thoughts preceding them. This self that one
discovers is in many ways a person one would not like one&amp;#39;s friends to know
about; a person one may have been avoiding for years, full of vanity, cowardice,
boredom, self-pity, laziness, blamingness, weak when he should be strong,
aggressive when he should be gentle, a person who will do anything not to know
these things about himself - the very same fellow who has been having problems
with cruising depression all this time. I think it&amp;#39;s in the day-after-day,
week-after-week confrontation of this person that the most valuable learning of
virtue takes place.&lt;/p&gt;
      </description>
      <pubDate>2016-09-19T22:00:00.000Z</pubDate>
      <link>http://norswap.com/cruising-blues</link>
      <guid isPermaLink="true">http://norswap.com/cruising-blues</guid>
    </item>
  </channel>
</rss>
