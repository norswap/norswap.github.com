<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>norswap</title>
    <description></description>      
    <link>http://norswap.com/</link>
    <atom:link href="http://norswap.com/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Static Website Generation, Incrementally</title>
      <description>
&lt;p&gt;The piece of Javascript that generates this very website has to be one of the
most zen piece of code I ever wrote. I wrote about it in &lt;a href=&quot;http://norswap.com/ribosome-static-site/&quot;&gt;an article back in
2016&lt;/a&gt;. It has served me well since, and hasn&amp;#39;t broken on me the way
that I would have expected something written in Ruby to do.&lt;/p&gt;
&lt;p&gt;Yet not all was perfect. The whole website took mabye 15-20 seconds to generate,
and complete generation was the only option.&lt;/p&gt;
&lt;p&gt;With that in mind, it was my project to implement incremental generation: only
re-generate the parts of the content that have actually changed. I also wanted a
&lt;em&gt;watch&lt;/em&gt; feature: the ability to auto-regenerate content whenever I saved a
source file.&lt;/p&gt;
&lt;p&gt;I&amp;#39;ve achieved these objectives, and this blog post is about that. Before I dive
in, however, a remark with the benefit of hindsight. Should I have done this at
all? The &lt;em&gt;watch&lt;/em&gt; feature had to be done, but otherwise, if my objective was to
speed up generation, maybe I should have gone and figured exactly why the
generation process was so slow... because 15-20 seconds for ~50 blog posts is
VERY slow, even for Javascript. I haven&amp;#39;t done that, but I think I should have.&lt;/p&gt;
&lt;p&gt;Now for the good part. &lt;a href=&quot;https://github.com/norswap/norswap.github.io/blob/f643a18ef7681ecfc176265ae66629decc19ec1e/.factory/generate.js&quot;&gt;Here&amp;#39;s the resulting code.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The process started with a lot of refactoring: pounding what was essentially a
linear script into functions that could be reused.&lt;/p&gt;
&lt;h2 id=&quot;async-await-fun&quot;&gt;Async/Await Fun&lt;/h2&gt;
&lt;p&gt;As part of that refactoring, I also made sure that all the calls that touched
the file systems were now using &lt;a href=&quot;https://javascript.info/async&quot;&gt;promises with async and await&lt;/a&gt;. This was
mostly for fun and my own education, because &lt;a href=&quot;http://sustrik.github.io/ribosome/&quot;&gt;Ribosome&lt;/a&gt; — the templating library
I use — is fully synchronous. I also think it might be responsible for the slow
execution times (or maybe just my use of it which involve writing then reading
to a temp file once per post), but that&amp;#39;s an investigation for another day.&lt;/p&gt;
&lt;p&gt;I think async is great however, although there were a few pitfalls I fell right
in. As you may know, using async functions guarantees linear execution without
crazy callback pyramid of doom... if you use the &lt;code&gt;await&lt;/code&gt; keyword! It&amp;#39;s easy to
forget it and it causes no warning (by design, this is not a complain).&lt;/p&gt;
&lt;p&gt;Async also required me to get ... creative in one instance. The package I use
for watching the file system takes a callback to which it supplies an array of
events that occured since last time the callback was called. The problem is that
this callback is never &lt;code&gt;await&lt;/code&gt;ed, even if it returns a promise. As such, if you
do async stuff within that callback (and I did), it&amp;#39;s very possible that the
package will fire another callback before the last one finished processing. This
was not acceptable to me: each set of filesystem changes had to be fully
processed before the processing of the nex tone began.&lt;/p&gt;
&lt;p&gt;Here is how I solved it:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-Javascript&quot;&gt;async function watch()
{
    let lock = Promise.resolve()
    ...
    const watching = await watcher(..., async (events) =&amp;gt; {
        let resolve
        const old_lock = lock
        lock = new Promise((r, _) =&amp;gt; resolve = r)
        await old_lock
        ...
        // process events
        ...
        resolve()
    })
    watching.start()
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Basically, each invocation of the callback creates a &amp;quot;lock&amp;quot; object, which is an
unfullfilled promise. It then waits on the previous lock to be fullfilled. Only
when it has finished processing does if fullfill (&lt;code&gt;resolve&lt;/code&gt;) its own lock.
Notice that since code is never executed in parallel, it&amp;#39;s perfectly safe to use
a &amp;quot;global&amp;quot; variable to save the last lock. Each successive callback invocation
creates a copy of the last lock then replaces it with its own. This ensures that
only a single callback may be waiting on a lock, and thus there is no data race:
the callbacks are serialized neatly, each waiting on the previous callback&amp;#39;s
lock to be fullfilled.&lt;/p&gt;
&lt;h2 id=&quot;incremental-index-pages&quot;&gt;Incremental Index Pages&lt;/h2&gt;
&lt;p&gt;Architecturally, the big challenge was how to regen index pages without having
to reprocess every blog post ever.&lt;/p&gt;
&lt;p&gt;The problem occurs for instance when you add a new post: all the index pages
have to have their post shifted backwards one unit. Reparsing the HTML would
have been a possibility, although I didn&amp;#39;t once contemplate it. It&amp;#39;s still a bit
ugly in my mind as the HTML page is a product, not a source. But it might
actually have worked.&lt;/p&gt;
&lt;p&gt;What I ended up doing instead is create a file called &lt;code&gt;posts.json&lt;/code&gt; that
serialized all the needed post data. This includes title, date, layout type, as
well as content for (a) posts that need to appear in the &lt;a href=&quot;/atom.xml&quot;&gt;atom feed&lt;/a&gt; and (b)
posts whose layout is &lt;code&gt;brief&lt;/code&gt;, i.e. posts whose content appears directly on the
index pages.&lt;/p&gt;
&lt;p&gt;I also pushed the vice further, and only regenerated the index pages that
actually needed to. For instance, if I removed the very first post, only the
last index page would have to be regenerated. I didn&amp;#39;t push this as hard as I
could have: for instance renaming a post will also cause all subsequent index
pages to be regenerated, when there is really no need to.&lt;/p&gt;
&lt;h2 id=&quot;filesystem-watching-frustrations&quot;&gt;Filesystem Watching Frustrations&lt;/h2&gt;
&lt;p&gt;The only frustrating thing I had to deal with was the filesystem watching
libraries.&lt;/p&gt;
&lt;p&gt;This was further compounded by a dumb mistake of my own which made my whole
prior evaluation of libraries irrelevant. I don&amp;#39;t even remember what it was I
did, but it caused me to think the libraries were malfunctioning while it was me
that was actually being a dumbass.&lt;/p&gt;
&lt;p&gt;Anyway, here are the libraries that I considered, and should reconsider at some
point in the future:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/chokidar&quot;&gt;Chokidar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/nsfw&quot;&gt;nsfw&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/@atom/watcher&quot;&gt;@atom/watcher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/fb-watchman&quot;&gt;fb-watchman&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There is also the built-in &lt;code&gt;fs.watch&lt;/code&gt;, but the &lt;a href=&quot;https://www.npmjs.com/package/chokidar&quot;&gt;Chokidar&lt;/a&gt; page reports that it
has a slew of issues, which I am inclined to believe.&lt;/p&gt;
&lt;p&gt;I ended up going with &lt;code&gt;nsfw&lt;/code&gt; as it was the one I had setup when I finally
understood my mistake. However I cannot recommend it, it works quite shittily,
at the very least on Windows. Amongst the issue I had to contend with and hack
around:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Duplicate events.&lt;/li&gt;
&lt;li&gt;File renaming causes a creation event on the old file and a modify event on
the new file (in addition to the renaming event).&lt;/li&gt;
&lt;li&gt;File creation also causes a modify event on the created file (in addition to
the creation event).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These may just be &lt;code&gt;fs.watch&lt;/code&gt; issues that &lt;code&gt;nsfw&lt;/code&gt; didn&amp;#39;t guard against though...&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nsfw&lt;/code&gt; also has different dependencies for Windows and MacOS, which causes some
trouble for me, as I have my code on Dropbox so that I may seamlessly switch
from my laptop to my desktop without requiring a dirty commit (it&amp;#39;s on Git as
well, don&amp;#39;t worry).&lt;/p&gt;
&lt;p&gt;Also note that the &lt;code&gt;@atom/watcher&lt;/code&gt; is different from the original &lt;code&gt;watcher&lt;/code&gt; lib,
which doesn&amp;#39;t build anymore. I think the build script is the only thing that has
been altered however.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;fb-watchman&lt;/code&gt; required an OS-specific software install outside of NPM.&lt;/p&gt;
&lt;p&gt;One of the tools required some Windows build tools to be installed globally (you
could install it locally, but it&amp;#39;s huge). Another one (or the same, I don&amp;#39;t
remember) required a flag to ask for Python 2.7.&lt;/p&gt;
&lt;p&gt;All in all, this was a bit of a headache.&lt;/p&gt;
&lt;p&gt;If you were to try one of those, my hunch and the above tells me to go with
Chokidar.&lt;/p&gt;
      </description>
      <pubDate>2018-10-22T22:00:00.000Z</pubDate>
      <link>http://norswap.com/static-generation-incrementally</link>
      <guid isPermaLink="true">http://norswap.com/static-generation-incrementally</guid>
    </item>
    <item>
      <title>What I&#39;ve Been Up To</title>
      <description>
&lt;p&gt;Been a while! What I&amp;#39;ve been to since July, in no particular order:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;I visited &lt;a href=&quot;https://photos.app.goo.gl/NrzEvTjUMPfdXKwb9&quot;&gt;Tokyo&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://photos.app.goo.gl/RpXdMQpQa7beJkL96&quot;&gt;Ireland&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I improved the program that generates this website, it now does incremental
generation, and I have a post in the works about it (edit: &lt;a href=&quot;/static-generation-incrementally/&quot;&gt;here&lt;/a&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I started writing my thesis, and got a good headstart.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I finished my re-read of the first 13 books of &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Wheel_of_Time&quot;&gt;The Wheel of Time&lt;/a&gt;, and my first
read of the 14th and final book. (I must have read 3 of them since July.) I
thought of writing about it, but the series means so much to me (&lt;a href=&quot;https://twitter.com/norswap/status/1032258555846569986&quot;&gt;I&amp;#39;m not the
only one&lt;/a&gt;), I&amp;#39;m afraid not to do it justice. I must also recoup my
thoughts about it.&lt;/p&gt;
&lt;p&gt;Did you know Amazon is adapting it into a TV show? Might use that as an excuse
to re-read and write about it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I&amp;#39;ve kept &lt;a href=&quot;/weight-training/&quot;&gt;lifting weights&lt;/a&gt;, I&amp;#39;ll write some thoughts about it soon.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I&amp;#39;m now reading &lt;a href=&quot;https://eightyearsinazeroth.blogspot.com/&quot;&gt;8 Years in Azeroth&lt;/a&gt;, the account of player Hanzo as he leads
his guild &lt;Descendants of Draenor&gt; through the first eight years of World of
Warcraft.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I&amp;#39;ve started tracking my sleep using the &lt;a href=&quot;https://sleep.urbandroid.org/introducing-sonar-as-sensor/&quot;&gt;sonar tech&lt;/a&gt; of the application
&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.urbandroid.sleep&quot;&gt;Sleep as Android&lt;/a&gt;. I&amp;#39;ve used that as an incentive to get my average time in
bed to 8 hours / night over the past month.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
      </description>
      <pubDate>2018-10-22T22:00:00.000Z</pubDate>
      <link>http://norswap.com/been-up-to</link>
      <guid isPermaLink="true">http://norswap.com/been-up-to</guid>
    </item>
    <item>
      <title>More Anime I Watched</title>
      <description>
&lt;p&gt;About this time last year, I wrote &lt;a href=&quot;/every-anime/&quot;&gt;a post&lt;/a&gt; giving my opinions
about all the anime series I ever watched (15 of them). One year later, it&amp;#39;s
time to update the list and give you my always-so-important opinions on
everything I watched this year. (And two things I watched before that I actually
forgot to include in the previous post.)&lt;/p&gt;
&lt;p&gt;Shows listed in roughly chronological viewing order.&lt;/p&gt;
&lt;h2 id=&quot;accel-world&quot;&gt;Accel World&lt;/h2&gt;
&lt;p&gt;I tried watching Accel World because it is based on light novels by the same
author as the Sword Art Online light novels. It&amp;#39;s not made by the same studio
however.&lt;/p&gt;
&lt;p&gt;It&amp;#39;s fair to say I didn&amp;#39;t like it. The graphical style and the universe is nice
enough. But my god this protagonist. He&amp;#39;s the reluctant kind. Think Shinji from
Evangelion, except way way (way) worse — and without the psychological angle,
nor all the other things that make Evangelion a cult classic.&lt;/p&gt;
&lt;p&gt;Not recommended unless your tolerance to cringe is high. I dropped it after
about 5-6 episodes.&lt;/p&gt;
&lt;h2 id=&quot;a-certain-magical-index&quot;&gt;A Certain Magical Index&lt;/h2&gt;
&lt;p&gt;Another show from before, another one I dropped.&lt;/p&gt;
&lt;p&gt;The plot didn&amp;#39;t manage to pull me in, or to convince me. Without spoiling, there
is a major event happening early in the series, and it doesn&amp;#39;t work at all
because we haven&amp;#39;t built enough rapport with the characters.&lt;/p&gt;
&lt;p&gt;The titular &lt;em&gt;Index&lt;/em&gt; (it&amp;#39;s a character) is almost absent from the show, except as
a poorly exploited plot device. I dropped the show after 5-6 episodes, so maybe
it improves, but I&amp;#39;m not holding out my breath.&lt;/p&gt;
&lt;h2 id=&quot;k-on-&quot;&gt;K-On!&lt;/h2&gt;
&lt;p&gt;K-On! is a typical &lt;em&gt;slice-of-life&lt;/em&gt; show, about a couple of girls forming a music
club — essentially a rock band — in their high school.&lt;/p&gt;
&lt;p&gt;I watched it because it&amp;#39;s the favourite show of &lt;a href=&quot;https://www.youtube.com/user/DigibronyMLP/videos&quot;&gt;Digibro&lt;/a&gt;, an anime commentator
I really like despite often disagreeing with him. The show also seemed nice
enough.&lt;/p&gt;
&lt;p&gt;And it was, I especially enjoyed the first season. The second one seemed a bit
too long and dragging for me — it&amp;#39;s almost twice as long as the first one. The
show is very contemplative. I think slice-of-life shows might be like that in
general. You have to watch it either like me, curled up in your sofa with a warm
drink, enjoying the fuzzy warm glow without spending too much brain cycles on
the action — or, like Digibro, over-analysing every small detail.&lt;/p&gt;
&lt;p&gt;The show is solid though, if those things are for you. I definitely don&amp;#39;t regret
watching it, but I won&amp;#39;t be seeking slice of life shows either. Especially since
this is apparently &lt;em&gt;the best one&lt;/em&gt;. I might &lt;a href=&quot;#a-place-further-than-the-universe&quot;&gt;already&lt;/a&gt; disagree with that
though.&lt;/p&gt;
&lt;h2 id=&quot;attack-on-titan-season-2&quot;&gt;Attack on Titan Season 2&lt;/h2&gt;
&lt;p&gt;I reviewed the first season &lt;a href=&quot;/every-anime/#attack-on-titan&quot;&gt;last time&lt;/a&gt;, but the second season is out, and it
continues to kick ass, hard.&lt;/p&gt;
&lt;p&gt;It is different though. The first season focused much on the grimness and sheer
horror of the universe — showing how, in the process, the characters could
become fucked up in the head. The second season, on the other hand, is more
focused on the narrative, within this universe. And despite the fact many people
said they preferred the first season, I think that&amp;#39;s a good thing. I don&amp;#39;t think
repeating the first season would have worked past a certain point.&lt;/p&gt;
&lt;p&gt;The plot works, the action (and animation thereof) continues to be the
state-of-the-art for anime shows. The &lt;a href=&quot;https://www.youtube.com/watch?v=CID-sYQNCew&quot;&gt;music&lt;/a&gt; rocks. It&amp;#39;s just
FUN to watch.&lt;/p&gt;
&lt;h2 id=&quot;angel-beats-&quot;&gt;Angel Beats!&lt;/h2&gt;
&lt;p&gt;A few friends told me Angel Beats! was their favourite anime, so I went into it
with high expectations... and was quite let down.&lt;/p&gt;
&lt;p&gt;The show is about a place — a high school, &lt;em&gt;of course&lt;/em&gt; — where young people go
when they die a tragic death, and is focused on the antics of the &lt;em&gt;Afterlife
Battlefront&lt;/em&gt; who fights a super-powered character named Angel, who seems
determined to not let them do whatever they want.&lt;/p&gt;
&lt;p&gt;The show has some cute ideas, and it kinda works. I think the ropes are a bit
too thick on this one, and I found the ending particularly offensive on account
of forced sentimentality. But who knows, it might work for you. It&amp;#39;s not bad
anyway.&lt;/p&gt;
&lt;h2 id=&quot;overlord&quot;&gt;Overlord&lt;/h2&gt;
&lt;p&gt;I&amp;#39;m officially a sucker for &lt;a href=&quot;https://en.wikipedia.org/wiki/Isekai&quot;&gt;Isekai&lt;/a&gt;, and so it&amp;#39;s logical I would give Overlord a
shot. The plot is classico-classic: a MMO player gets trapped into the game.
Except this player is almost the most powerful bar none, owns a massive guild
hall that acts as his own personal dungeon, with his own NPC (non-player
characters) lackeys.&lt;/p&gt;
&lt;p&gt;Most of the first season revolves around this protagonist learning about the
world, and having a couple brushes with the NPC geo-politics. Season 2 has a
couple different arcs, some kinda meh (lizard men), some rather good (anything
with Sebas).&lt;/p&gt;
&lt;p&gt;All in all, while the universe is super intriguing, there is something about the
show that is quite disappointing. It&amp;#39;s a far cry from Log Horizon — a personal
favorite that I reviewed &lt;a href=&quot;/every-anime/#log-horizon&quot;&gt;last time&lt;/a&gt;. Log Horizon does the world
building much more subtly and intricately. Everything in Overlord is
over-explicated, over-acted, and there is very little of it.&lt;/p&gt;
&lt;p&gt;Nevertheless, I&amp;#39;ll probably continue watching if new seasons come out. But this
is not a heartfelt recommendation.&lt;/p&gt;
&lt;h2 id=&quot;kill-la-kill&quot;&gt;Kill la Kill&lt;/h2&gt;
&lt;p&gt;Kill la Kill is made by the same people who made Gurren Lagann, perhaps &lt;a href=&quot;/every-anime/#gurren-lagann&quot;&gt;my
favorite anime&lt;/a&gt;. I&amp;#39;d heard plenty of good things about it, and so of
course I was pumped when I started watching it. And I wasn&amp;#39;t let down.&lt;/p&gt;
&lt;p&gt;While Kill la Kill is a bit looser than Gurenn Lagann, it bursts with the same
energy, and it is a joy to watch. It&amp;#39;s full of great ideas, and it&amp;#39;s a technical
masterpiece besides.&lt;/p&gt;
&lt;p&gt;There&amp;#39;s no point in talking too much about it: just watch it.&lt;/p&gt;
&lt;p&gt;And if you&amp;#39;d be tempted to think that it&amp;#39;s just goofy anime, &lt;a href=&quot;https://www.youtube.com/watch?v=Tg8S5A7jFX4&quot;&gt;here&amp;#39;s Digibro
 analyzing&lt;/a&gt; the very first scene of the anime and breaking down how
 brilliantly put together it actually is.&lt;/p&gt;
&lt;h2 id=&quot;my-hero-academia&quot;&gt;My Hero Academia&lt;/h2&gt;
&lt;p&gt;My Hero Academia is a pure shonen anime. In a universe where most people are
born with a power or another, the show focuses on an elite school for &lt;em&gt;heroes&lt;/em&gt;—
future super-powered crime-fighter that engage similarly powerful villains. What
could be more formulaic than that?&lt;/p&gt;
&lt;p&gt;And yet, it works. The show is not about being incredibly original or novel,
it&amp;#39;s all about flawless execution. Just like Attack on Titan, this is a show
that is just an absolute blast to watch. The plot is engaging, the action is
cool, the varieties of powers and characters make some interesting plans and
plots possible, and the characters are credible in their concerns and state of
minds.&lt;/p&gt;
&lt;p&gt;Obligatory &lt;a href=&quot;https://www.youtube.com/watch?v=9LfycWHe1Lg&quot;&gt;analysis video&lt;/a&gt; by Gigguk (contains spoilers!) on
the tournament arc, which really underscores my points — that is (a) that the
show executes really well and (b) that it is something to get hyped about.&lt;/p&gt;
&lt;p&gt;The third season is now airing, and it&amp;#39;s as good as ever, it&amp;#39;s impressive how
steady the show&amp;#39;s quality is.&lt;/p&gt;
&lt;p&gt;Oh, and &lt;a href=&quot;https://www.youtube.com/watch?v=3hnS5DAKkz4&quot;&gt;You Say Run&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;steins-gate&quot;&gt;Steins;Gate&lt;/h2&gt;
&lt;p&gt;Steins;Gate is this weird show about time-travel. I didn&amp;#39;t really know what to
expect, excepted that it was very highly regarded. In the first few episodes,
you really get this sense of mystery and drama to come, but otherwise it seems
to be just about this group of misfits goofing around pretending to do science.&lt;/p&gt;
&lt;p&gt;As the show goes, it gets darker, and you also get to understand there was more
going on under the surface. I really like that there is a real evolution in the
show, it works its way up, increases the stakes without ever being boring or
out-of-place.&lt;/p&gt;
&lt;p&gt;It&amp;#39;s an instant favorite, and it comes highly recommended.&lt;/p&gt;
&lt;h2 id=&quot;is-it-wrong-to-try-to-pick-up-girls-in-a-dungeon-&quot;&gt;Is It Wrong to Try to Pick Up Girls in a Dungeon?&lt;/h2&gt;
&lt;p&gt;This dubiously named anime, more often referred as &lt;em&gt;DanMachi&lt;/em&gt; (an abbreviation
of the Japanese name) is an isekai/harem anime that reminds me very much of
&lt;a href=&quot;/every-anime/#konosuba-&quot;&gt;Konosuba!&lt;/a&gt;. In a fashion typical of some harem anime, the hero (&lt;em&gt;Bell&lt;/em&gt;) doesn&amp;#39;t
actually do any picking up (more like anti-picking-up). However, the story
manages to be quite interesting, with a few touches of humor here and there.&lt;/p&gt;
&lt;p&gt;The whole thing is probably less humor-focused, and less sharp than Konosuba!.
But despite what people say, Konosuba! never really made me laugh, but rather
made me smile. I&amp;#39;d put Danmachi in exactly the same basket, and I could almost
copy &lt;a href=&quot;/every-anime/#konosuba-&quot;&gt;the Konosuba! review&lt;/a&gt;. It&amp;#39;s a comfortable show for me, and
that&amp;#39;s exactly how I enjoy it. Although it must be said it gets considerably
more epic than Konosuba! ever does towards the end. I&amp;#39;m eager to see if it will
continue on this trend — if we ever get a second season that is.&lt;/p&gt;
&lt;h2 id=&quot;no-game-no-life&quot;&gt;No Game No Life&lt;/h2&gt;
&lt;p&gt;This is another show that I heard mentioned repeatedly, and so had to watch.
It&amp;#39;s also sort-of an isekai, although the universe focuses on games whose rules
are imagined by the protagonist and brought to life in the world.&lt;/p&gt;
&lt;p&gt;The main protagonists (Sora and Shiro) are siblings who are incredibly talented
at games, and are because of this summoned to an alternate universe (Disboard)
by the god Tet.&lt;/p&gt;
&lt;p&gt;The plot revolves around Sora and Shiro struggle for power in this world through
high-stakes games. My main criticism here is that, as is often the case, the
outcome of these games feel highly &lt;em&gt;ex machina&lt;/em&gt;. There is no way to predict the
winning actions the characters make with the information we have (or that they
have, for that matter). Like in &lt;a href=&quot;/every-anime/#code-geass&quot;&gt;Code Geass&lt;/a&gt; and &lt;a href=&quot;#death-note&quot;&gt;Death Note&lt;/a&gt;, the supposed
genius of the protagonists feels fake and forced.&lt;/p&gt;
&lt;p&gt;If you can get over this, it&amp;#39;s not a bad show though.&lt;/p&gt;
&lt;h2 id=&quot;citrus&quot;&gt;Citrus&lt;/h2&gt;
&lt;p&gt;I went intro Citrus expecting to find the next representative of the trash anime
genre, after &lt;a href=&quot;https://myanimelist.net/anime/32901/Eromanga-sensei&quot;&gt;Eromanga Sensei&lt;/a&gt; (which I still haven&amp;#39;t watched). Instead, I found
a cute love story. A cute &lt;em&gt;incestuous&lt;/em&gt; lesbian love story, but still.&lt;/p&gt;
&lt;p&gt;And with that, almost everything is said. Frankly, it&amp;#39;s a cute love story with
girls and that&amp;#39;s it. For what it&amp;#39;s worth, I quite enjoyed it, but I don&amp;#39;t really
have a reference frame here.&lt;/p&gt;
&lt;h2 id=&quot;a-place-further-than-the-universe&quot;&gt;A Place Further Than The Universe&lt;/h2&gt;
&lt;p&gt;This anime is about four girls striving to achieve a common goal: going to
Antartica, and — spoiler alert (not) — their journey there.&lt;/p&gt;
&lt;p&gt;I&amp;#39;m not exactly sure what this is — slice-of-life? — but who cares? The
point is that it is tremendously cute, touching and inspiring. There is a sense
of youthful possibilities and optimism that permeates the series.&lt;/p&gt;
&lt;p&gt;The show has been critically very well received (&lt;a href=&quot;https://www.youtube.com/watch?v=ZGsvHRyiTG0&quot;&gt;exhibit a&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=wO6CGqKimC0&quot;&gt;exhibit b&lt;/a&gt;), I
think with good reason. As a mentionned earlier, I&amp;#39;m not too experienced with
this kind of anime, but I think this is what it should strive to be: something
touching but not mushy, cute but not brainless, optimistic but not naive. It
think it does well while definitely remaining in the light tone of the genre. No
darkness will be found here.&lt;/p&gt;
&lt;p&gt;Also, &lt;a href=&quot;https://www.youtube.com/watch?v=XJeOoMkXTFw&quot;&gt;this song&lt;/a&gt;, doesn&amp;#39;t it just sound like optimism?&lt;/p&gt;
&lt;h2 id=&quot;death-note&quot;&gt;Death Note&lt;/h2&gt;
&lt;p&gt;Death Note is a huge classic. It&amp;#39;s currently &lt;a href=&quot;https://myanimelist.net/topanime.php?type=bypopularity&quot;&gt;#1 in popularity&lt;/a&gt; on
my anime list. And to be sure, it is enjoyable.&lt;/p&gt;
&lt;p&gt;Buuut, my criticism of it is almost exactly the same as for &lt;a href=&quot;/every-anime/#code-geass&quot;&gt;Code Geass&lt;/a&gt;. Both
shows are actually very close. In both of them an anti-hero lead character tries
to assume dominion of the world through 3D mental chess, helped by a handy
super-power. In this case the power is the nominal &lt;em&gt;Death Note&lt;/em&gt; — a notebook in
which writing people&amp;#39;s name kills them. Same criticism then, which is that plot
development is &lt;em&gt;ex machina&lt;/em&gt;. It&amp;#39;s not a fair playing field: characters in the
show knows what the writer knows, but you don&amp;#39;t.&lt;/p&gt;
&lt;p&gt;But once again, aside from that, it&amp;#39;s a solid show.&lt;/p&gt;
&lt;p&gt;I&amp;#39;ve heard multiple people say that the second part is less good than the first,
but I didn&amp;#39;t feel this way, feeling the quality to be more or less constant. It
is true that a big event happening around halfway through is a big letdown
however. I found the ending to be relatively satisfying, if not exempt from the
series&amp;#39; overall sins. Let&amp;#39;s just say that it didn&amp;#39;t feel inevitable at all,
given what was previously shown.&lt;/p&gt;
&lt;h2 id=&quot;grimgar-of-fantasy-and-ash&quot;&gt;Grimgar of Fantasy and Ash&lt;/h2&gt;
&lt;p&gt;It&amp;#39;s another Isekai. But what an Isekai!&lt;/p&gt;
&lt;p&gt;The protagonists are trapped inside a game — or an alternative reality, we don&amp;#39;t
really know — and lost their memory. So they get to work, painstakingly trying
to kill some measly goblins to sustain their continued existance.&lt;/p&gt;
&lt;p&gt;The show starts cute and slightly goofy, but soon things take a more dark turn.
It&amp;#39;s consistently poetic and thoughtful however. I like how the subtleties of
the characters&amp;#39; personalities are explored through the prism of the inner
monologue of the main character (Haruhiro).&lt;/p&gt;
&lt;p&gt;If you&amp;#39;ve picked up my tastes a bit, you understand there is no way I could not
love this show. And indeed, it&amp;#39;s an instant favorite and I&amp;#39;m desperately hoping
for a sequel.&lt;/p&gt;
&lt;h2 id=&quot;sword-art-online-alternative-gun-gale-online&quot;&gt;Sword Art Online Alternative: Gun Gale Online&lt;/h2&gt;
&lt;p&gt;This is a &lt;a href=&quot;/every-anime/#sword-art-online&quot;&gt;Sword Art Online&lt;/a&gt; spin-off set within the &lt;em&gt;Gun Gale
Online&lt;/em&gt; game (from SAO season 2). There is no Kirito, Asuna &amp;amp; co, but it&amp;#39;s stil
quintessentially Sword Art Online: an event in an online game (a tournament) has
spillovers causing danger in real life. Hand-wavy but fun fights are also par
for the course. There&amp;#39;s even an Eir Aoi theme song.&lt;/p&gt;
&lt;p&gt;There is nothing truly original or marvelous in GGO, but if you like Sword Art
Online, you will find it enjoyable. For me, it&amp;#39;s a comfy show.&lt;/p&gt;
      </description>
      <pubDate>2018-07-01T22:00:00.000Z</pubDate>
      <link>http://norswap.com/more-anime</link>
      <guid isPermaLink="true">http://norswap.com/more-anime</guid>
    </item>
    <item>
      <title>12 Rules For Life</title>
      <description>
&lt;p&gt;I just finished reading &lt;em&gt;12 Rules for Life: An Antidote to Chaos&lt;/em&gt; (&lt;a href=&quot;https://en.wikipedia.org/wiki/12_Rules_for_Life&quot;&gt;Wikipedia&lt;/a&gt;)
by Jordan Peterson. I found it to be a very inspiring read.&lt;/p&gt;
&lt;p&gt;Indeed the book is more about inspiring than delivering insights. But that&amp;#39;s
fine, often motivation is 90% of a problem.&lt;/p&gt;
&lt;p&gt;Peterson does more than deliver advice though, he outlines a veritable life
philosophy, revolving around the idea of developing character in the face of
suffering.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The meaning of life has more to do with developing character in the face of
suffering thant with happiness.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;He preaches a philosophy of gradual self-improvement, not to reach some kind of
awesome success, but to make life more palatable for you and others, and he
suggests that if everyone where to do this, we really could have heaven on
earth.&lt;/p&gt;
&lt;p&gt;I like his grandiose style, although it sometimes rambles. But somehow the
rambling works and the side alleys Peterson wanders into never fail to be
interesting. There are some take-aways in the book that have only little to do
with the main message.&lt;/p&gt;
&lt;p&gt;Because of all of this, the book is relatively hard to summarize, and if it
seems interesting to you, I&amp;#39;d highly suggest you to read it for yourself.&lt;/p&gt;
&lt;p&gt;I wasn&amp;#39;t sure how to best summarize the lessons of the book in a way that would
be useful to me or others. In the end, I chose to simply include my favorite
quotes from each chapter/rule — usually a motivational tidbit.    &lt;/p&gt;
&lt;h2 id=&quot;1-stand-up-straight-with-your-shoulders-back&quot;&gt;1. Stand Up Straight With Your Shoulders Back&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;There is an unspeakably primordial calculator, deep within you, at the very
foundation of your brain, far below your thoughts and feelings. It monitors
exactly where you are positioned in society. If you&amp;#39;re low, you&amp;#39;ll be stressed
and in constant alert. If you&amp;#39;re high you&amp;#39;ll stand confident and calm
(serotonin will flow), and see chance as opportunity rather than risk.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;To stand up straight with your shoulders back is to accept the terrible
responsibility of life, with eyes wide open. It means deciding to voluntarily
transform the chaos of potential into the realities of habitable order. It
means adopting the burden of self-conscious vulnerability, and accepting the
end of the unconscious paradise of childhood, where finitude and mortality are
only dimly comprehended. It means willingly undertaking the sacrifices
necessary to generate a productive and meaningful reality (it means acting to
please God, in the ancient language).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;2-treat-yourself-like-someone-you-are-responsible-for-helping&quot;&gt;2. Treat Yourself Like Someone You Are Responsible For Helping&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;To straddle that fundamental duality is to be balanced: to have one foot
firmly planted in order and security, and the other in chaos, possibility,
growth and adventure. When life suddenly reveals itself as intense, gripping
and meaningful; when time passes and you’re so engrossed in what you’re doing
you don’t notice — it is there and then that you are located precisely on the
border between order and chaos. You are there when — and where — it matters.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;Perhaps Heaven is something you must build, and immortality something you must
earn.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;You must determine where you are going, so that you can bargain for yourself,
so that you don’t end up resentful, vengeful and cruel. You have to articulate
your own principles, so that you can defend yourself against others’ taking
inappropriate advantage of you, and so that you are secure and safe while you
work and play. You must discipline yourself carefully. You must keep the
promises you make to yourself, and reward yourself, so that you can trust and
motivate yourself. You need to determine how to act toward yourself so that
you are most likely to become and to stay a good person. It would be good to
make the world a better place. Heaven, after all, will not arrive of its own
accord. We will have to work to bring it about, and strengthen ourselves, so
that we can withstand the deadly angels and flaming sword of judgment that God
used to bar its entrance.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;3-make-friends-with-people-who-want-the-best-for-you&quot;&gt;3. Make Friends With People Who Want The Best For You&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;When well-meaning counsellors place a delinquent teen among comparatively
civilized peers, the delinquency spreads, not the stability. Down is a lot
easier than up.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;Is it possible that your contempt would be more salutary than your pity?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;Before you help someone, you should find out why that person is in trouble.
You shouldn’t merely assume that he or she is a noble victim of unjust
circumstances and exploitation. It’s the most unlikely explanation, not the
most probable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;Besides, if you buy the story that everything terrible just happened on its
own, with no personal responsibility on the part of the victim, you deny that
person all agency in the past (and, by implication, in the present and future,
as well). In this manner, you strip him or her of all power.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;Success: that’s the mystery. Virtue: that’s what’s inexplicable. To fail, you
merely have to cultivate a few bad habits. You just have to bide your time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;Here’s something to consider: If you have a friend whose friendship you
wouldn’t recommend to your sister, or your father, or your son, why would you
have such a friend for yourself? You might say: out of loyalty. Well, loyalty
is not identical to stupidity. Loyalty must be negotiated, fairly and
honestly. Friendship is a reciprocal arrangement. You are not morally obliged
to support someone who is making the world a worse place. Quite the opposite.
You should choose people who want things to be better, not worse. It’s a good
thing, not a selfish thing, to choose people who are good for you. It’s
appropriate and praiseworthy to associate with people whose lives would be
improved if they saw your life improve.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;4-compare-yourself-to-who-you-were-yesterday-not-to-who-someone-else-is-today&quot;&gt;4. Compare Yourself To Who You Were Yesterday, Not To Who Someone Else Is Today&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;And the direction of your sight changes. You see past the limitations that
hemmed you in, unknowingly. New possibilities for your life emerge, and you
work toward their realization. Your life indeed improves. And then you start
to think, further: “Better? Perhaps that means better for me, and my family,
and my friends — even for my enemies. But that’s not all it means. It means
better today, in a manner that makes everything better tomorrow, and next
week, and next year, and a decade from now, and a hundred years from now. And
a thousand years from now. And forever.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;You decide to act as if existence might be justified by its goodness — if only
you behaved properly. And it is that decision, that declaration of existential
faith, that allows you to overcome nihilism, and resentment, and arrogance. It
is that declaration of faith that keeps hatred of Being, with all its
attendant evils, at bay.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;Faith is the realization that the tragic irrationalities of life must be
counterbalanced by an equally irrational commitment to the essential goodness
of Being.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;The Sermon on the Mount outlines the true nature of man, and the proper aim of
mankind: concentrate on the day, so that you can live in the present, and
attend completely and properly to what is right in front of you — but do that
only after you have decided to let what is within shine forth, so that it can
justify Being and illuminate the world. Do that only after you have determined
to sacrifice whatever it is that must be sacrificed so that you can pursue the
highest good.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;h2 id=&quot;5-do-not-let-your-children-do-anything-that-makes-you-dislike-them&quot;&gt;5. Do Not Let Your Children Do Anything That Makes You Dislike Them&lt;/h2&gt;
&lt;p&gt;Norswap: I found this chapter fascinating, because it discusses a matter
(disciplining children) to which I had never given, and gives compelling answers
that are somewhat against the current doxa.&lt;/p&gt;
&lt;p&gt;Children cannot be left to their device. They need to be protected, and they
need to be socialized. Failure to properly discipline your child will make him
unable to socialize and hurt him a lot in the long run. Such children are
unfocused, craving for attention and affection, and that turns people off a lot,
despite what they pretend. A kid that did not learn to share, she will be
rejected by children and adults alike.&lt;/p&gt;
&lt;p&gt;Parents must be a proxy for society, teaching their children what is expected of
them, what is allowable and what is not. Their proper socialization and future
success depends on it. Parents are &lt;em&gt;responsible&lt;/em&gt; for disciplining their
children. If you don&amp;#39;t do it, the world will do it, in a more harsher and
uncaring way.&lt;/p&gt;
&lt;p&gt;Tentative rules on how to discipline children:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Limit the rules. Bad laws drive out respect for the good laws.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Suggestions: Do not bite, kick or hit, except in self-defence. Do not torture
and bully other children, so you don’t end up in jail. Eat in a civilized and
thankful manner, so that people are happy to have you at their house, and
pleased to feed you. Learn to share, so other kids will play with you. Pay
attention when spoken to by adults, so they don’t hate you and might
therefore deign to teach you something. Go to sleep properly, and peaceably,
so that your parents can have a private life and not resent your existence.
Take care of your belongings, because you need to learn how and because
you’re lucky to have them. Be good company when something fun is happening,
so that you’re invited for the fun. Act so that other people are happy you’re
around, so that people will want you around.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use the least force necessary to enforce those rules.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do parenting in pairs. So that the other parent can step in when the first
one slips, and that discussion can be had.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Understand your own capacity to be harsh, vengeful, arrogant, resentful,
angry and deceitful.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Act as a (caring) proxy for the real world. This will provide the child with
opportunity, self-regard and security.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;6-set-your-house-in-perfect-order-before-you-criticize-the-world&quot;&gt;6. Set Your House In Perfect Order Before You Criticize The World&lt;/h2&gt;
&lt;p&gt;If natural disasters are acts of god, then failure to prepare is sin. Hebrews
blamed themselves when they fell, for not heeding god.&lt;/p&gt;
&lt;p&gt;Clean up your own life. Relentlessly seek out opportunities for improvement, and
take them.&lt;/p&gt;
&lt;p&gt;Stop doing the things you know to be wrong. Trust your soul&amp;#39;s judgement, don&amp;#39;t
question needlessly. Questions can confuse without enlightening. You don&amp;#39;t need
an external code, although there might be reach teachings there too. Stop
blaming others.&lt;/p&gt;
&lt;h2 id=&quot;7-pursue-what-is-meaningful-not-what-is-expedient-&quot;&gt;7. Pursue What Is Meaningful (Not What is Expedient)&lt;/h2&gt;
&lt;p&gt;The meaning of sacrifice: the proposition that something of greater value might be
achieved by giving something up in the present.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If the world you are seeing is not the world you want, therefore, it’s time to
examine your values. It’s time to rid yourself of your current
presuppositions. It’s time to let go. It might even be time to sacrifice what
you love best, so that you can become who you might become, instead of staying
who you are.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;Carl Jung: No tree can grow to Heaven, unless its roots reach down to Hell.
There is no movement upward without corresponding movement down. You have to
go to the very bottom to meet the devil, the source of your most wicked
thoughts. Only then is enlightenment possible.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Make that an axiom: to the best of my ability I will act in a manner that leads
to the alleviation of unnecessary pain and suffering.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Expedience — that’s hiding all the skeletons in the closet. That’s covering
the blood you just spilled with a carpet. That’s avoiding responsibility. It’s
cowardly, and shallow, and wrong. It’s wrong because expedience merely
transfers the curse on your head to someone else, or to your future self, in a
manner that will make your future, and the future generally, worse instead of
better.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;8-tell-the-truth-or-at-least-don-t-lie&quot;&gt;8. Tell The Truth - Or, At Least, Don&amp;#39;t Lie&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;If you say no to your boss, or your spouse, or your mother, when it needs to be
said, then you transform yourself into someone who can say no when it needs to
be said.&lt;/p&gt;
&lt;p&gt;If you betray yourself, if you say untrue things, if you act out a lie, you
weaken your character. If you have a weak character, then adversity will mow you
down when it appears, as it will, inevitably.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;“Did what I want happen? No. Then my aim or my methods were wrong. I still have
something to learn.” That is the voice of authenticity.&lt;/p&gt;
&lt;p&gt;“Did what I want happen? No. Then the world is unfair. People are jealous, and
too stupid to understand. It is the fault of something or someone else.” That
is the voice of inauthenticity. It is not too far from there to “they should
be stopped” or “they must be hurt” or “they must be destroyed.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;Set your ambitions, even if you are uncertain about what they should be. The
better ambitions have to do with the development of character and ability,
rather than status and power. Status you can lose. You carry character with
you wherever you go, and it allows you to prevail against adversity. Knowing
this, tie a rope to a boulder. Pick up the great stone, heave it in front of
you, and pull yourself towards it. Watch and observe while you move forward.
Articulate your experience as clearly and carefully to yourself and others as
you possibly can. In this manner, you will learn to proceed more effectively
and efficiently towards your goal. And, while you are doing this, do not lie.
Especially to yourself.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;Apprehend your personal truth. Communicate it carefully, in an articulate
manner, to yourself and others. This will ensure your security and your life
more abundantly now, while you inhabit the structure of your current beliefs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;If your life is not what it could be, try telling the truth. If you cling
desperately to an ideology, or wallow in nihilism, try telling the truth. If
you feel weak and rejected, and desperate, and confused, try telling the
truth. In Paradise, everyone speaks the truth.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;9-assume-that-the-person-you-are-listening-to-might-know-something-you-don-t&quot;&gt;9. Assume That The Person You Are Listening To Might Know Something You Don&amp;#39;t&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;The great majority of us cannot listen; we find ourselves compelled to evaluate,
because listening is too dangerous. The first requirement is courage, and we do
not always have it. (Carl Rogers)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Summarize the other person&amp;#39;s point (to his satisfaction) in order to understand
him better and to not make an argument against a strawman. It also consolidates
memory, articulation of the argument.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sometimes it takes a long time to figure out what someone genuinely means when
they are talking. This is because often they are articulating their ideas for
the first time. They can’t do it without wandering down blind alleys or making
contradictory or even nonsensical claims. This is partly because talking (and
thinking) is often more about forgetting than about remembering. To discuss an
event, particularly something emotional, like a death or serious illness, is
to slowly choose what to leave behind. To begin, however, much that is not
necessary must be put into words. The emotion-laden speaker must recount the
whole experience, in detail. Only then can the central narrative, cause and
consequence, come into focus or consolidate itself. Only then can the moral of
the story be derived.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;If you listen, instead, without premature judgment, people will generally tell
you everything they are thinking — and with very little deceit. People will
tell you the most amazing, absurd, interesting things. Very few of your
conversations will be boring. (You can in fact tell whether or not you are
actually listening in this manner. If the conversation is boring, you probably
aren’t.)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;10-be-precise-in-your-speech&quot;&gt;10. Be Precise In Your Speech&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Don’t ever underestimate the destructive power of sins of omission.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;Do you truly think it is a good idea to retreat, to abandon the possibility of
arming yourself against the rising sea of troubles, and to thereby diminish
yourself in your own eyes? Do you truly think it wise to let the catastrophe
grow in the shadows, while you shrink and decrease and become ever more
afraid? Isn’t it better to prepare, to sharpen your sword, to peer into the
darkness, and then to beard the lion in its den? Maybe you’ll get hurt.
Probably you’ll get hurt. Life, after all, is suffering. But maybe the wound
won’t be fatal.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;Why refuse to specify, when specifying the problem would enable its solution?
Because to specify the problem is to admit that it exists. Because to specify
the problem is to allow yourself to know what you want, say, from friend or
lover — and then you will know, precisely and cleanly, when you don’t get it,
and that will hurt, sharply and specifically. But you will learn something
from that, and use what you learn in the future—and the alternative to that
single sharp pain is the dull ache of continued hopelessness and vague failure
and the sense that time, precious time, is slipping by.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;Why refuse to specify? Because while you are failing to define success (and
thereby rendering it impossible) you are also refusing to define failure, to &amp;gt;
yourself, so that if and when you fail you won’t notice, and it won’t hurt. &amp;gt;
But that won’t work! You cannot be fooled so easily. You will instead carry &amp;gt;
with you a continual sense of disappointment in your own Being and the &amp;gt;
self-contempt that comes along with that and the increasing hatred for the &amp;gt;
world.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;Say what you mean, so that you can find out what you mean. Act out what you
say, so you can find out what happens. Then pay attention. Note your errors.
Articulate them. Strive to correct them. That is how you discover the meaning
of your life. That will protect you from the tragedy of your life. How could
it be otherwise?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;Confront the chaos of Being. Take aim against a sea of troubles. Specify your
destination, and chart your course. Admit to what you want. Tell those around
you who you are. Narrow, and gaze attentively, and move forward, forthrightly.
Be precise in your speech.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;11-do-not-bother-children-when-they-are-skateboarding&quot;&gt;11. Do Not Bother Children When They Are Skateboarding&lt;/h2&gt;
&lt;p&gt;This one is tense, it&amp;#39;s essentially Peterson&amp;#39;s charge against the SJW ideology.
Very interesting, but you should just read it. I&amp;#39;ll just try to extract the
insights that are useful in general.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Jung: If you cannot understand why someone did something, look at the
consequences — and infer the motivation.&lt;/p&gt;
&lt;p&gt;Not always the appropriate tool, but it can prove useful.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;When someone claims to be acting from the highest principles, for the good of
others, there is no reason to assume that the person’s motives are genuine.
People motivated to make things better usually aren’t concerned with changing
other people — or, if they are, they take responsibility for making the same
changes to themselves (and first).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;Lest we forget: ideas have consequences.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;You can be resentful because you&amp;#39;re being taken advantage of (or allow
yourself to) or because of whiny refusal to grow up. If it&amp;#39;s not the latter,
you have an obligation to speak up for yourself.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;Men enforce a code of behaviour on each other, when working together. Do your
work. Pull your weight. Stay awake and pay attention. Don’t whine or be
touchy. Stand up for your friends. Don’t suck up and don’t snitch. Don’t be a
slave to stupid rules. Don’t, in the immortal words of Arnold Schwarzenegger,
be a girlie man. Don’t be dependent. At all. Ever. Period. The harassment that
is part of acceptance on a working crew is a test: are you tough,
entertaining, competent and reliable? If not, go away. Simple as that. We
don’t need to feel sorry for you. We don’t want to put up with your
narcissism, and we don’t want to do your work.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;When softness and harmlessness become the only consciously acceptable virtues,
then hardness and dominance will start to exert an unconscious fascination.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;12-pet-a-cat-when-you-encounter-one-on-the-street&quot;&gt;12. Pet A Cat When You Encounter One On The Street&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Something supersedes thinking, despite its truly awesome power. When existence
reveals itself as existentially intolerable, thinking collapses in on itself.
In such situations — in the depths — it’s noticing, not thinking, that does
the trick. Perhaps you might start by noticing this: when you love someone,
it’s not despite their limitations. It’s because of their limitations. Of
course, it’s complicated. You don’t have to be in love with every shortcoming,
and merely accept. You shouldn’t stop trying to make life better, or let
suffering just be. But there appear to be limits on the path to improvement
beyond which we might not want to go, lest we sacrifice our humanity itself.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;That&amp;#39;s a conscious act of courage. Aim up, wish upon a star, then act in
accordance with that aim. Once you are aligned with the heavens, you can
concentrate on the day. Be careful. Put the things you can control in order.
Repair what is in disorder, and make what is already good better. It is
possible that you can manage, if you are careful. People are very tough.
People can survive through much pain and loss. But to persevere they must see
the good in Being. If they lose that, they are truly lost.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;Sometimes when you call her — sometimes of her own accord — Ginger will trot
across the street, tail held high, with a little kink at the end. Then she
will roll on her back in front of Sikko, who wags his tail happily as a
consequence. Afterward, if she feels like it, she might come visit you, for a
half a minute. It’s a nice break. It’s a little extra light, on a good day,
and a tiny respite, on a bad day.&lt;/p&gt;
&lt;p&gt;If you pay careful attention, even on a bad day, you may be fortunate enough
to be confronted with small opportunities of just that sort. Maybe you will
see a little girl dancing on the street because she is all dressed up in a
ballet costume. Maybe you will have a particularly good cup of coffee in a
café that cares about their customers. Maybe you can steal ten or twenty
minutes to do some little ridiculous thing that distracts you or reminds you
that you can laugh at the absurdity of existence.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Life is good sometimes.&lt;/p&gt;
&lt;h2 id=&quot;coda&quot;&gt;Coda&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;What shall I do with my life? Aim for Paradise, and concentrate on today.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;What shall I do with the world? Conduct myself as if Being is more valuable
than Non-Being. Act so that you are not made bitter and corrupt by the tragedy
of existence. confront the uncertainty of the world voluntarily, and with
faith and courage.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;What shall I do when I despise what I have? Remember those who have nothing
and strive to be grateful.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;What shall I do when my enemy succeeds? Aim a little higher and be grateful
for the lesson.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;What shall I do in the next dire moment? Focus my attention on the next right
move. When everything has become chaotic and uncertain, all that remains to
guide you might be the character you constructed, previously, by aiming up and
concentrating on the moment at hand. If you have failed in that, you will fail
in the moment of crisis, and then God help you.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;Failure to make the proper sacrifices, failure to reveal yourself, failure to
live and tell the truth — all that weakens you. In that weakened state, you
will be unable to thrive in the world, and you will be of no benefit to
yourself or to others. You will fail and suffer, stupidly. That will corrupt
your soul. How could it be otherwise? Life is hard enough when it is going
well. But when it’s going badly? And I have learned through painful experience
that nothing is going so badly that it can’t be made worse. This is why Hell
is a bottomless pit. To suffer terribly and to know yourself as the cause:
that is Hell.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;What shall I do to strengthen my spirit? Do not tell lies, or do what you
despise.&lt;/p&gt;
&lt;/blockquote&gt;
      </description>
      <pubDate>2018-06-28T22:00:00.000Z</pubDate>
      <link>http://norswap.com/12-rules</link>
      <guid isPermaLink="true">http://norswap.com/12-rules</guid>
    </item>
    <item>
      <title>Replacing Guilt</title>
      <description>
&lt;p&gt;I finished reading Nate Soares&amp;#39;s &lt;a href=&quot;http://mindingourway.com/guilt/&quot;&gt;Replacing Guilt&lt;/a&gt; series. It&amp;#39;s highly
recommended reading if you periodically find yourself guilty over what you
didn&amp;#39;t do or failed to achieve. Roughly, it&amp;#39;s about excising guilt as an
ineffective motivator, and about installing a strong intrinsic motivation
mechanism in its stead.&lt;/p&gt;
&lt;p&gt;It&amp;#39;s well worth reading in full, there are a lot of articles, but all of them
are relatively short and to the point. For myself, I extracted the following
list of insights and directives, in order to remember to apply the lessons in my
life. It&amp;#39;s about what resonated with me, so your own take-away might be quite
different. Read the whole thing!&lt;/p&gt;
&lt;p&gt;Some of the terminology used below might not make sense if you didn&amp;#39;t read the
articles, but most of it is fairly general.&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;Guilt doesn&amp;#39;t work as a motivator.&lt;/li&gt;
&lt;li&gt;Half-ass it with everything you&amp;#39;ve got. Do just enough to reach your goal.&lt;/li&gt;
&lt;li&gt;Succeed, with no wasted motion.&lt;/li&gt;
&lt;li&gt;Don&amp;#39;t fail with abandon.&lt;/li&gt;
&lt;li&gt;Drop your &lt;em&gt;shoulds&lt;/em&gt;, consider the alternatives.&lt;/li&gt;
&lt;li&gt;Consider not forcing yourself.&lt;/li&gt;
&lt;li&gt;Not because you should, but because you can.&lt;/li&gt;
&lt;li&gt;Expending willpower is a stopgap, not a solution.&lt;/li&gt;
&lt;li&gt;Forcing yourself won&amp;#39;t work next time if it didn&amp;#39;t work last time.&lt;/li&gt;
&lt;li&gt;Don&amp;#39;t work yourself ragged. Self-care is a goal too.&lt;/li&gt;
&lt;li&gt;Rest in motion.&lt;/li&gt;
&lt;li&gt;The ground state is motion - don&amp;#39;t take damage while in motion.&lt;/li&gt;
&lt;li&gt;Rest is not a reward, it&amp;#39;s part of your activities.&lt;/li&gt;
&lt;li&gt;Shift guilt from the instance to the pattern.&lt;/li&gt;
&lt;li&gt;Use science to debug bad behaviour patterns.&lt;/li&gt;
&lt;li&gt;Be a new homonculus, do some original seeing.&lt;/li&gt;
&lt;li&gt;There is no default &amp;quot;do nothing&amp;quot; action.&lt;/li&gt;
&lt;li&gt;Don&amp;#39;t tolerify.&lt;/li&gt;
&lt;li&gt;After an outcome, simply locate yourself, don&amp;#39;t compare to your expectations.&lt;/li&gt;
&lt;li&gt;Seek the best actions you can identify at the moment.&lt;/li&gt;
&lt;li&gt;Play to win: don&amp;#39;t stop and &amp;quot;try&amp;quot;.&lt;/li&gt;
&lt;li&gt;Don&amp;#39;t have excuses as a line of retreat.&lt;/li&gt;
&lt;li&gt;Understand your failures is understanding what &lt;em&gt;you&lt;/em&gt; could have done better.&lt;/li&gt;
&lt;li&gt;Assume capability in the background.&lt;/li&gt;
&lt;li&gt;It&amp;#39;s not about effort or willpower, but focus. The path is the way.&lt;/li&gt;
&lt;li&gt;Don&amp;#39;t bang swords, hit the ennemy.&lt;/li&gt;
&lt;li&gt;Seek and actually do the obvious things.&lt;/li&gt;
&lt;li&gt;Prepare and improve response patterns.&lt;/li&gt;
&lt;li&gt;When faced with a problem, don&amp;#39;t flail. Start breaking it down, apply
well-known and brute force approaches.&lt;/li&gt;
&lt;li&gt;Derive confidence from being well aware of your limitations.&lt;/li&gt;
&lt;li&gt;Odds shouldn&amp;#39;t influence your ability to commit. The best plan is still the
best regardless of odds.&lt;/li&gt;
&lt;li&gt;Be reckless: commit yourself fully to the best plan until a better one comes
along.&lt;/li&gt;
&lt;li&gt;Be defiant: refuse the accept the current state of things.&lt;/li&gt;
&lt;li&gt;You will be measures by outcomes, not by how hard you tried.&lt;/li&gt;
&lt;li&gt;Act to ensure the future is as good as you can make it.&lt;/li&gt;
&lt;/ul&gt;
      </description>
      <pubDate>2018-06-13T22:00:00.000Z</pubDate>
      <link>http://norswap.com/replacing-guilt</link>
      <guid isPermaLink="true">http://norswap.com/replacing-guilt</guid>
    </item>
    <item>
      <title>Striving vs Cruising</title>
      <description>
&lt;p&gt;There is a question that everyone tends to ask themselves at one point or
another and that question is &lt;em&gt;What should I do with my life?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I don&amp;#39;t think there is a higher value that overrides all other. Unless it is so
general as to be tautological. Some call this tautological value &lt;em&gt;happiness&lt;/em&gt;, or
more scientifically &lt;em&gt;subjective well-being&lt;/em&gt; or &lt;em&gt;life satisfaction&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;We often try to answer the question in terms of goals and objectives. That&amp;#39;s not
necessarily the right approach. After all, all we can ever decide is what to do
right here, right now. Still, it raises the following question: Is it necessary
to achieve to be happy? Should you just cruise through life and take in the
sights? Or strive towards a goal worthy of you?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I sincerely believe that happiness requires meaning, and meaning requires a
struggle. You should strive, but focus on the quality of the striving rather
than on the end goal. Cruise if you must, but cruise towards something. Strive,
but don&amp;#39;t be consumed by the goal.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There were many inspirations that led me to that conclusion, but the following
three I find the most illuminating:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.fs.blog/2014/05/hunter-s-thompson-to-hume-logan/&quot;&gt;Finding Your Purpose and Living a Meaningful Life&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A thorough examination of the idea of striving versus cruising.&lt;/p&gt;
&lt;p&gt;If you don&amp;#39;t know what to do with your life, have you at least started
looking?&lt;/p&gt;
&lt;p&gt;Strive to be yourself.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://markmanson.net/question&quot;&gt;The Most Important Question of Your Life&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;What pain do you want in life? Looking for the pain you enjoy or even
tolerate better than other goes a long way towards finding somewhat you will
find meaningful.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.raptitude.com/2015/11/worry-less/&quot;&gt;How to Worry Less&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The vast majority of life consists of getting somewhere else. There are very
few moments of arrival, and they are over as soon as they begin. If you feel
like you need to be there before you can fully relax into where you are, then
you will seldom be relaxed in life.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Post Scriptum&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This used to be a huge series of posts tackling the grand question of the
meaning of life. I spent tens of hours writing and editing these posts... and
came to hate them with a passion. It came from a good place: I wanted to share
all my inspirations, all the connections that I&amp;#39;d developped. But at the same
time it felt like I was trying to look clever all the time.&lt;/p&gt;
&lt;p&gt;I was &lt;a href=&quot;https://sivers.org/7&quot;&gt;inspired&lt;/a&gt; by Derek Sivers to just extract the essential point and trash
the rest. I&amp;#39;m glad I did.&lt;/p&gt;
      </description>
      <pubDate>2018-05-23T22:00:00.000Z</pubDate>
      <link>http://norswap.com/striving-cruising</link>
      <guid isPermaLink="true">http://norswap.com/striving-cruising</guid>
    </item>
    <item>
      <title>Starting Weight Training</title>
      <description>
&lt;p&gt;I&amp;#39;ve been weight training for a bit less than two months and I wanted to report
on my experiences doing that.&lt;/p&gt;
&lt;p&gt;First a word on my background: I didn&amp;#39;t use to be very sporty — nor fit — until
about five years ago, when I started exercising each day or every other day
(depending on the period). I did very light exercising, usually not more than 15
minutes per day, and mostly focusing on pushups and crunches. Last year I also
added pullups and chin-ups into the mix.&lt;/p&gt;
&lt;p&gt;Despite this regimen not being very stringent — even exercising every day, it&amp;#39;s
less than 2 hours per week — I achieved a nice level of fitness. I wouldn&amp;#39;t have
won any strength contest, but I didn&amp;#39;t look too bad naked and I wasn&amp;#39;t
completely weak. Being regular is winning, no matter how little you do.&lt;/p&gt;
&lt;p&gt;Onto the weigh training then. Like many things I do, it started as something I
was curious about and wanted to experiment with. I kinda fancy the idea of
getting ribbed and strong, and I wanted to see what kind of results I could
achieve by training seriously but parsimoniously (in terms of time spent).&lt;/p&gt;
&lt;p&gt;I asked for advice on the &lt;a href=&quot;http://slatestarcodex.com/&quot;&gt;Slate Star Codex&lt;/a&gt; Discord channel, here was my
request:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I&amp;#39;m looking for a training program I can use.&lt;/p&gt;
&lt;p&gt;My first goal is looking good (think Abercrombie &amp;amp; Fitch model good), with
strength as the second priority, and I&amp;#39;d like to strengthen my arms in
particular.&lt;/p&gt;
&lt;p&gt;Currently I&amp;#39;m quite fit, but not particularly muscular.
e.g. my pecs are salient and not flabby, but not particularly large.
I&amp;#39;m tall (1m90, 76kg) and probably an ectomorph.&lt;/p&gt;
&lt;p&gt;I want a training that can &amp;quot;scale&amp;quot; up to my target and keep me there with as
little work as possible on an undefinite basis. Possibly that is going to
require two training regiment. That&amp;#39;s fine.&lt;/p&gt;
&lt;p&gt;My philosophy is that I want training to get out of the way - to be something I
do without having to think too hard about it.&lt;/p&gt;
&lt;p&gt;I can subscribe to a gym membership, but I&amp;#39;d rather train at home. I own a
pullup bar and a set of one-hand weights. I can buy more equipment but my space
is limited - so no bench and barbells.&lt;/p&gt;
&lt;p&gt;I want a 3-split training (3 days out of the week) as that proves the most
flexible for my schedule.&lt;/p&gt;
&lt;p&gt;In terms of nutrition, I&amp;#39;m unwilling to tamper with my diet too much (which is
varied and healthy). I&amp;#39;m worried about protein intake, as I might be getting the
recommended 1g of protein per kilogram, but clearly not the 2/3g recommended for
gaining. It seems difficult for me to get that from diet only, so I&amp;#39;ll probably
need to supplement with proteins (I&amp;#39;m looking for recommendations on this too).&lt;/p&gt;
&lt;p&gt;In general, I&amp;#39;m open to supplementing insofar that it helps with my stated
objectives. On the other hand, I want to keep things simple, so the benefits
should be clear cut.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;People ended up recommending the &lt;a href=&quot;https://stronglifts.com/&quot;&gt;Stronglifts&lt;/a&gt; program, and I was immediately
drawn to it. First, because it&amp;#39;s very simple: you alternate two workouts, each
consisting of three exercises: squats, bench press, barbell row; and squats
(again), overhead press, deadlifts. All those are full body strength exercises.
Second, the proper forms for the exercises is outlined in great detail on the
website. I didn&amp;#39;t take this into account when I picked the routine, but the
companion mobile mobile app is super handy.&lt;/p&gt;
&lt;p&gt;The routine is mostly made up of &lt;a href=&quot;https://en.wikipedia.org/wiki/Powerlifting&quot;&gt;powerlifting&lt;/a&gt; / &lt;a href=&quot;https://en.wikipedia.org/wiki/Olympic_weightlifting&quot;&gt;weightlifting&lt;/a&gt; moves.
Pointedly, it&amp;#39;s not &lt;a href=&quot;https://en.wikipedia.org/wiki/Bodybuilding&quot;&gt;bodybuilding&lt;/a&gt;: the emphasis is on strength, not on size.
This is great: I did not want to end up huge.&lt;/p&gt;
&lt;p&gt;By the way, you might be wondering how there might be such a distinction:
doesn&amp;#39;t a large volume of muscle entail strength? Can one be strong without
volume?&lt;/p&gt;
&lt;p&gt;First things first. Bodybuilders &lt;em&gt;are&lt;/em&gt; strong, but not in the same way that
powerlifters are. They probably can&amp;#39;t lift as heavy. On the other hand,
powerlifters would probably be hard pressed to perform some of the bodybuilders&amp;#39;
routines (a lot of reps at high intensity, often targeting isolated muscles).
And of course, powerlifters have volume, just much less than bodybuilders.&lt;/p&gt;
&lt;p&gt;The second part of the explanation, I will lift straigth from
&lt;a href=&quot;https://en.wikipedia.org/wiki/Muscle_hypertrophy#Myofibrillar_vs._sarcoplasmic_hypertrophy&quot;&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In the bodybuilding and fitness community and even in some academic books
skeletal muscle hypertrophy is described as being in one of two types:
Sarcoplasmic or myofibrillar. According to this hypothesis, during
sarcoplasmic hypertrophy, the volume of sarcoplasmic fluid in the muscle cell
increases with no accompanying increase in muscular strength, whereas during
myofibrillar hypertrophy, actin and myosin contractile proteins increase in
number and add to muscular strength as well as a small increase in the size of
the muscle. Sarcoplasmic hypertrophy is greater in the muscles of bodybuilders
because studies suggest sarcoplasmic hypertrophy shows a greater increase in
muscle size while myofibrillar hypertrophy proves to increase overall muscular
strength making it more dominant in Olympic weightlifters. These two forms of
adaptations rarely occur completely independently of one another; one can
experience a large increase in fluid with a slight increase in proteins, a
large increase in proteins with a small increase in fluid, or a relatively
balanced combination of the two.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, results?&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;weights.png&quot; alt=&quot;Graph of weight lifted over time.&quot;&gt;&lt;/p&gt;
&lt;p&gt;As you can see in the above graph, I progressed nicely over the last seven
weeks. Of course, the program makes you start light — although I actually
cheated and upped the weights during my first session until I felt at least a
trace amount of effort. It&amp;#39;s possible I could have lifted more from the get go,
but you want to go progressively to develop proper form. It&amp;#39;s also pretty
encouraging to see yourself progressing, especially when you break through small
plateaus.&lt;/p&gt;
&lt;p&gt;I intend to continue on this trajectory, at least until I raise some arbitrary
goals. I picked the beginner goals from &lt;a href=&quot;https://caliberstrong.com/weight-lifting-goals/&quot;&gt;this page&lt;/a&gt;: 1.2x
bodyweight (bw) on squat, 0.9bw on bench press, 1.5bw on deadlift and 0.6bw on
overhead press. Since I&amp;#39;m currently at 80kg, that&amp;#39;s 96kg on squat, 72kg on bench
press, 120kg on deadlift and 48kg on overhead press. When I reach these
milestones, I intend to re-evaluate the training regimen. I think temporarily
switching to some bodybuilding routine might actual be beneficial if I want to
progress on the Stronglifts program. I&amp;#39;ll have to research it, but it&amp;#39;s probably
worth a try anyway.&lt;/p&gt;
&lt;p&gt;All is not rosy though. The program advertises that it can be completed in ~45
minutes, but if I don&amp;#39;t shirk at all, it&amp;#39;s taking more like 1.5 hours. Add to
that the time from and to the gym and to shower, and I&amp;#39;m now spending 6 hours
each week exercising (up from less than two previously). This is bothersome for
me, and once I reach a certain level, I will need to research if there is a way
to keep the strength while drastically cutting the time spent exercising.&lt;/p&gt;
&lt;p&gt;A few other things I want to mention: muscle memory, progressive overload and
supplements.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Muscle memory&lt;/strong&gt; is a big reason why I considered weight training in the first
place. Otherwise, if you think about it, you spend time building something you
have to maintain forever afterwards. Because of muscle memory even if you reduce
or forego your training, you still benefit long term by being able to reach your
old condition much faster the next time around.&lt;/p&gt;
&lt;p&gt;Muscle memory is not totally well understood, but the &lt;a href=&quot;https://en.wikipedia.org/wiki/Muscle_memory&quot;&gt;prevalent
hypothesis&lt;/a&gt; is that:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Previously untrained muscles acquire newly formed nuclei by fusion of
satellite cells preceding the hypertrophy. Subsequent detraining leads to
atrophy but no loss of myo-nuclei. The elevated number of nuclei in muscle
fibers that had experienced a hypertrophic episode would provide a mechanism
for muscle memory, explaining the long-lasting effects of training and the
ease with which previously trained individuals are more easily retrained.&lt;/p&gt;
&lt;p&gt;On subsequent detraining, the fibers maintain an elevated number of nuclei
that might provide resistance to atrophy; on retraining, a gain in size can be
obtained by a moderate increase in the protein synthesis rate of each of these
many nuclei, skipping the step of adding newly formed nuclei. This shortcut
may contribute to the relative ease of retraining compared with the first
training of individuals with no previous training history.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Remember &lt;em&gt;myofibrillar muscle growth&lt;/em&gt; from earlier? Well:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The additional contractile proteins appear to be incorporated into existing
myofibrils (the chains of sarcomeres within a muscle cell). There appears to
be some limit to how large a myofibril can become: at some point, they split.
These events appear to occur within each muscle fiber. That is, hypertrophy
results primarily from the growth of each muscle cell, rather than an increase
in the number of cells. Skeletal muscle cells are however unique in the body
in that they can contain multiple nuclei, and the number of nuclei can
increase.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So apparently myofibrillar growth leads to more nuclei and so to more muscle
memory. (Again, the science doesn&amp;#39;t seem too well established, somewhat
suprisingly.)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Progressive overload&lt;/strong&gt; is the principle on which the Stronglifts is based.
Basically you keep the same number of repetition but you add more weight each
time you succeed with your current weight. Your body adapts and learns to lift
stronger and stronger weights. Theoretically, you could also do this by
increasing the number of repetitions instead.&lt;/p&gt;
&lt;p&gt;A regret I have is not being more serious about my home training before
switching to weight training. I feel like if I had tracked how many pullups /
chin-ups / pushups I was able to do and tried to consistently do more
(progressive overload), I could have improved my condition quite a bit without
the hassle of going to the gym.&lt;/p&gt;
&lt;p&gt;Finally, &lt;strong&gt;supplements&lt;/strong&gt;. I take two supplements: proteins and creatine. These
are the only two that I found offer really clear-cut benefits.&lt;/p&gt;
&lt;p&gt;You don&amp;#39;t need to supplement proteins, but you have to eat enough of them.
Research indicates you need about 1g per kilo of bodyweight for maintenance, and
some researcher say 1.8g per kilo of bodyweight is enough for optimal muscle
growth. Other sources suggest as much as 2 to 3g per kilo for optimal muscle
growth. Interestingly, it&amp;#39;s never a problem to take too much proteins: they
simply get evacuated if they weren&amp;#39;t absorbed after a certain time.&lt;/p&gt;
&lt;p&gt;Anyway, I weight 80kg. This means I need at least ~160g of proteins if I want to
get as much muscle growth as I can. Meat contains about 25% of protein by
weight. For other types of food it varies, some vegetables have as much as
10/15% but those aren&amp;#39;t the most common. Cheese has about 25%, eggs have 15%,
yogurt has 10%, etc. The most proteins I tend to get is about 60g of proteins
from a burrito at noon, and 50g of proteins from 200g of meat in the evening,
with a deficit of about 50g of proteins. On many days, I&amp;#39;m not even there. So I
supplement. I take 30g of proteins per day as a shake. If you did the math, you
notice I should probably take more. Truth be told I hadn&amp;#39;t realized... That&amp;#39;s
why you do the math. Also the thing tastes incredibly foul, that&amp;#39;s some
anti-motivation right there.&lt;/p&gt;
&lt;p&gt;A short digression on caloric intake. I found that lifting didn&amp;#39;t really allow
me to increase my caloric intake all that much. And of course, disappointingly,
you can be as muscular as you want, if you&amp;#39;re fat, the muscles won&amp;#39;t show. At
the same time, running a high caloric deficit is detrimental to muscle growth:
the body break down muscle as well as fat for energy. To lose fat while gaining
muscle one has to run a &lt;strong&gt;slight&lt;/strong&gt; caloric deficit. Easier said than done.
&lt;a href=&quot;https://en.wikipedia.org/wiki/Intermittent_fasting&quot;&gt;Intermittent fasting&lt;/a&gt;, which I was already practicing, can apparently
help.&lt;/p&gt;
&lt;p&gt;The other supplement I take is creatine which has &lt;a href=&quot;https://examine.com/supplements/creatine/&quot;&gt;well-researched&lt;/a&gt;
(but slight!) effects on muscle growth and a slew of other good things (reduced
fatigue, increased power output).&lt;/p&gt;
&lt;p&gt;By the way I found the website &lt;a href=&quot;https://examine.com/&quot;&gt;examine.com&lt;/a&gt; to be invaluable when researching
supplements. It cross-references scientific studies on substances and present
the results in an easy-to-parse way. Much recommended.&lt;/p&gt;
&lt;p&gt;I investigated a few other supplements besides those (BCAAs, Beta-Alanine) but
none of them seemed to offer clear enough benefits to justify the tedium.&lt;/p&gt;
&lt;p&gt;Before I wrap this up, a few more points of feedback. I never hurt myself while
training, and I don&amp;#39;t even feel sore after training. This was a pleasant
surprise. I did experience some knee pain from heavy squatting, which indicated
that I was leaning too much forward when doing my squats, making my knees pick
up work that should have been done by my hips. I corrected my form and I&amp;#39;m now
doing much better. I also had really bad forms on my first few series of dumbell
row and deadlifts, which I could immediately tell from back strain.&lt;/p&gt;
&lt;p&gt;Finally, besides what I already recommended (&lt;a href=&quot;https://stronglifts.com/&quot;&gt;Stronglifts&lt;/a&gt;, &lt;a href=&quot;https://examine.com/&quot;&gt;examine.com&lt;/a&gt;), the
only other resource I would recommend is &lt;a href=&quot;https://www.youtube.com/channel/UCERm5yFZ1SptUEU4wZ2vJvw&quot;&gt;Jeremy Ethier&amp;#39;s Youtube
channel&lt;/a&gt;. Not that I found anything truly crucial there, but it&amp;#39;s
interesting, well explained and well researched.&lt;/p&gt;
&lt;p&gt;Anyway, that was it for the experience report. Have fun training, or whatever
floats your boat :)&lt;/p&gt;
      </description>
      <pubDate>2018-05-17T22:00:00.000Z</pubDate>
      <link>http://norswap.com/weight-training</link>
      <guid isPermaLink="true">http://norswap.com/weight-training</guid>
    </item>
    <item>
      <title>Inductive Programming: A New Approach</title>
      <description>
&lt;p&gt;In the context of a job interview, I was asked to write a small paper outlining
a research direction to tackle a problem in the field of &lt;em&gt;Inductive Programming&lt;/em&gt;
— essentially how to generate programs from examples. Here it is reproduced for
your reading pleasure.&lt;/p&gt;
&lt;h2 id=&quot;the-problem&quot;&gt;The Problem&lt;/h2&gt;
&lt;p&gt;Devise an approach to automatically generate programs which solve programming
challenges, the like of which are used in hiring interviews, or listed on
programming challenge websites (e.g. Project Euler).&lt;/p&gt;
&lt;p&gt;In particular, to generate a program we can use (1) a natural-language textual
description of the problem to solve (including descriptions of the input and
output), (2) a set of input/output (I/O) examples and (3) a piece of skeleton
code for the solution.&lt;/p&gt;
&lt;h2 id=&quot;state-of-the-art&quot;&gt;State of the Art&lt;/h2&gt;
&lt;p&gt;The area of program generation from examples is known as &lt;em&gt;Inductive Programming&lt;/em&gt;
or &lt;em&gt;Inductive Program Synthesis&lt;/em&gt;. We also consider other forms of &lt;em&gt;Program
Synthesis&lt;/em&gt;, where a higher-level (formal) specification of the problem may be
given.&lt;/p&gt;
&lt;p&gt;The introductory paper by Gulwani et al. [1] is rather useful to get a sense of
what the field is about. It further points to three surveys of the field [2, 3,
4]. The survey by Kitzelmann [4] is particularly useful, as it divides the field
into three tried-and-true approaches: &lt;em&gt;analytical-functional&lt;/em&gt;, &lt;em&gt;inductive logic
programming&lt;/em&gt; and &lt;em&gt;generate-and-test&lt;/em&gt;. Another survey by Gulwani et al. [5], has
its own classification, which largely overlaps with that of Kitzelmann. In
particular, it introduces the &lt;em&gt;constraint-solving approach&lt;/em&gt;, which includes
inductive logic programming.&lt;/p&gt;
&lt;p&gt;Let&amp;#39;s note that classification is sometimes tricky, as many approaches accross
categories use elements of search, constraint-solving and statistics.&lt;/p&gt;
&lt;p&gt;Below, I offer a brief summary of the advantages, drawbacks and results of
different approaches as I understood them. Beware that this is written after a
cursory literature review, by someone who is unexperienced in the field. It may
be wrong in some signifiant regard.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The analytical-functional approach&lt;/strong&gt; works well with &amp;quot;symbolic&amp;quot; problems where
the structure of the input and output is significant: e.g. simple list
processing problem such as the &lt;em&gt;reverse&lt;/em&gt; function. The state of the art in this
approach is Igor2 [6], a system that mixes the analytical-functional approach
with search principles (cf. &lt;em&gt;generate-and-test&lt;/em&gt;). Igor2 is able to induce the
insertion sort and quicksort algorithms, albeit slowly for the later (~63s on
the test setup versus ~0.2s for insertion sort).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The constraint-solving approach&lt;/strong&gt; usually (but not always) makes use of a SAT
or SMT solver. A representative example is Rosette [7]. It is able to generate
relatively specialised programs, such as specifications for an HTML scraper.
This approach does however struggle with complex loops and recursion.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Inductive Logic Programming&lt;/em&gt; (ILP) is a form of constraint-solving. ILP
techniques are based on first-order predicate logic and typically generate
Prolog programs. They use some form of solving in order to produce Prolog rules
that enables the derivation of a set of facts (~ the output). From what I could
gather, they&amp;#39;re generally not more powerful than Igor2.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The generate-and-test approach&lt;/strong&gt; is based on the idea of generating many
candidate programs and testing them against a specification or a set of I/O
pairs. Typically, a fitness function is used to guide the search, and the
algorithms are genetic in nature: promising candidate solutions are mutated and
crossed to generated new candidates. The approach is in principle very general,
but slow in practice.&lt;/p&gt;
&lt;p&gt;Gulwani et al. [5] call this the &lt;em&gt;stochastic search approach&lt;/em&gt; and offer the
following definition:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The stochastic synthesis approaches learn a distribution over the space of
programs in the hypothesis space that is conditioned on the specification, and
then sample programs from the distribution to learn a consistent program. The
goal of these techniques is to use the learnt distribution to guide the search
of programs that are more likely to lead to programs that conform with the
specification.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A major representative of this approach is ADATE [8], which is able to induce
programs that sort lists, insert nodes in a binary search tree, or generate all
permutations of a list. However, the generation process takes at least hours and
up to 9 days.&lt;/p&gt;
&lt;p&gt;Another idea is to use a set of higher-order functions (&lt;em&gt;map&lt;/em&gt;, &lt;em&gt;fold&lt;/em&gt;, etc...)
as primitives. The assumption is that most programs can be more tersely
expressed using these, leading to a reduction in search space that makes it
practical to enumerate all possible programs. This approach is notably
implemented in MagicHaskeller [9]. In practice, the results are very limited
(the examples given in the paper are &lt;em&gt;nth&lt;/em&gt;, &lt;em&gt;map&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;A third notable example is SyGuS (for Syntax-Guided Synthesis) [10]. SyGuS uses
SMT solving to check the conformance of a candidate solution to a specification.
In case of failure, it outputs a counter-example. Correctness on previously
encountered counter-examples is then used to derive the fitness function that
guides the search. Another key idea is the ability to supply a syntactic
restriction on the program search space. For instance, if we were searching for
a matrix-multplication routine for 2x2 matrices, we could submit the syntactic
restriction that candidate solutions must use only 7 multiplication operations.&lt;/p&gt;
&lt;p&gt;SyGuS is evaluated using bit-twiddling problems (transformations of bit
vectors). This is a quite limited set of problems, that has the advantage to fit
the nature of SMT solving (which is a generalization of SAT solving — based on
the boolean satisfiability problem). The generated programs are relatively
simple, and the results are rather inconclusive beyond this class of problems.&lt;/p&gt;
&lt;p&gt;Finally, the generate-and-test approach also includes techniques based on neural
networks. Gulwani et al. [5]:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The proposed approaches can be divided into two categories: i) program
induction, and ii) program synthesis. The neural architectures that perform
program induction learn a network that is capable of replicating the behavior of
the desired program, whereas the neural systems that perform program synthesis
return an interpretable program that matches the desired specification
behavior.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As an example of program synthesis, DeepCoder [11] uses a deep learning
algorithm to learn features from I/O pairs. The result is a way to map any set
of I/O pairs to a probability distribution. The distribution indicates how
likely it is that a programming language component will be present in a program
that turns input into output.&lt;/p&gt;
&lt;p&gt;The results are quite limited in applicability. In particular, DeepCoder works
with an ad hoc programming language that is very high-level and very limited.
The language processes vectors and only has a very small number of built-in
functions. The approach is also very limited in the program size: The evaluation
is done on programming problems whose solution is a 5-statements program.&lt;/p&gt;
&lt;p&gt;However, the technique can still be useful in practical cases, with some
relaxations. Microsoft Excel uses FlashFill [12], a technique that is roughly
similar to that of DeepCoder, but relies on a manually crafted set of heuristics
(&lt;em&gt;clues&lt;/em&gt;) in order to derive the feature set. Flashfill is used to infer Excel
formulas matching the user intent. Because these formulas do not feature loops
or recursion, and because they draw on a set of primitive functions, the
expressivity is roughly on par with constraint-solving approaches like Rosette
[7], although the success rate is much better, thanks to clues. FlashFill does
not feature neural networks, but a version that does replace manual clues with
neural networks has been devised [13]. It is able to pass 38% of the original
FlashFill benchmarks. One major limitation regards the size of the generated
programs, currently limited to 13 (presumably, 13 functions).&lt;/p&gt;
&lt;h2 id=&quot;first-thoughts&quot;&gt;First Thoughts&lt;/h2&gt;
&lt;p&gt;My first thoughts upon hearing the problem was that it was impossible. That&amp;#39;s
too strong a claim, as there are no obvious theoretical impossibilities. Since
then, I&amp;#39;ve somewhat revised my opinion. I still think the problem is incredibly
ambitious and hard, but there might be ways to do much better than the state of
the art, if one stumbles upon a breakthrough technique.&lt;/p&gt;
&lt;p&gt;As seen in the small literature review above, there is quite a bit of work on
program synthesis, and the results fall quite short of the mark as I understand
it — which is to tackle even relatively challenging programming tasks.&lt;/p&gt;
&lt;p&gt;If we consider a more modest objective, then arguably current systems might
already be good enough. Igor2 [6] being able to infer a quicksort in 60 seconds
&lt;strong&gt;is&lt;/strong&gt; impressive. The question is then: What goal do we want to reach? What is
the benchmark for success?&lt;/p&gt;
&lt;p&gt;It is doubtful that incremental improvements over existing techniques can lead
very far. Popular techniques have been combined to some success (again, Igor2 is
a case in point). This means that if we want to solve the problem, we need to
try something new. But that is, of course, a much bigger research risk.&lt;/p&gt;
&lt;h2 id=&quot;divide-and-conquer&quot;&gt;Divide And Conquer&lt;/h2&gt;
&lt;p&gt;Clearly, the area of inductive programming is active and already
well-researched. I don&amp;#39;t think I can come up with a worthy research direction
without spending a few weeks in the literature and talking with people well
acquainted with the topic.&lt;/p&gt;
&lt;p&gt;But what about dividing the problem into parts and trying to solve each part
individually? That might be easier. Let&amp;#39;s cheat!&lt;/p&gt;
&lt;p&gt;My suggestion is that, instead of working from a natural language description,
we work from a formal, unambiguous, specification. We would still use examples
as well. My idea for this part of the solution looks roughly like a compiler,
which is maybe not a surprise given my background in language engineering.&lt;/p&gt;
&lt;p&gt;Then, as a second step, we could try to derive a formal specification from the
natural-language specification. It is probably impossible to do this very well —
given the ambiguity of natural language — but maybe we can still extract a
partial specification, or extract many candidate specifications, over which we
can conduct a search.&lt;/p&gt;
&lt;h2 id=&quot;ambiguity&quot;&gt;Ambiguity&lt;/h2&gt;
&lt;p&gt;A few words on one of the big problems facing us: ambiguity. It occurs at
multiple levels in the problem.&lt;/p&gt;
&lt;p&gt;First, inductive programming based on examples is inherently ambiguous, given
that there are infinitely many semantically distinct programs that can match
the I/O pairs.&lt;/p&gt;
&lt;p&gt;In fact, a simple program mapping example inputs to outputs is a solution. Of
course, that&amp;#39;s typical overfitting. We&amp;#39;d like a solution that, for instance, can
generate a program matching all I/O pairs when only given any set containing
half of the pairs as input. Some similar notion is probably defined in the
literature, but I am not familiar with it.&lt;/p&gt;
&lt;p&gt;Still, this leads to an interesting question: What are the properties of the
program that we want to generate, given that there are many that fit the bill?
Probably we want something approaching the simplest solution. And probably, we
can approximate this by the program size.&lt;/p&gt;
&lt;p&gt;Second, natural language is naturally ambiguous. From what I know (and looked
up) on Natural Language Processing (NLP) [14], it&amp;#39;s already not trivial to
acquire an unambiguous parse tree from an English text. Moreover, within that
parse tree, references (e.g., pronouns) are quintessentially ambiguous. Humans
usually use the available context to disambiguate, although even that is not
always enough. Should we even assume that such a parse tree is available, we are
faced with the daunting task of assigning &lt;em&gt;meaning&lt;/em&gt; to the words that make up
the tree. This probably requires some kind of semantic network that relates the
words to one another and to programming language concepts. Creating such a
network by hand is possible but unpleasant and very time-consuming. Generating
it from existing text is probably as difficult as the problem we&amp;#39;re trying to
solve in the first place.&lt;/p&gt;
&lt;p&gt;So a precise interpretation of the natural-language description is off. We
could, instead, try to mine it for hints about the specification. It&amp;#39;s not
difficult to imagine we could employ machine learning techniques to extract some
meaning from the description. For instance, a correlation between the presence
of the word &amp;quot;sorted&amp;quot; and the presence of a sort component in the solution.&lt;/p&gt;
&lt;p&gt;This is similar to what DeepCoder [11] does, but with the I/O examples. It uses
deep learning to learn to correlate some features in the examples with
programming language constructs. This correlation (which takes the form of a
probability distribution for various programming language constructs) is then
used to guide a local search on the space of programs.&lt;/p&gt;
&lt;p&gt;And indeed, we could also add the natural-language description as a second
source of heuristics to guide the local search. My feeling is that this is not
anywhere near enough to make significant progress on the problem.&lt;/p&gt;
&lt;p&gt;There is another approach, which is to translate between the natural and the
formal language, possibly reusing existing machine learning techniques*. This is
what I suggested as a second step in the previous section. The result is still
ambiguous, but much more readily exploitable assuming we manage to make good on
the first problem — generating code based on the I/O examples and a formal
specification.&lt;/p&gt;
&lt;div style=&quot;float:left; height: 50px; width: 20px;&quot;&gt;*&lt;/div&gt;
&lt;p&gt;
There is a vast literature on the topic, including many papers related to
Google Translate [15] — arguably the state of the art solution in machine
translation.
&lt;/p&gt;

&lt;div style=&quot;page-break-after: always;&quot;&gt;&lt;/div&gt;

&lt;h2 id=&quot;from-specification-to-program&quot;&gt;From Specification to Program&lt;/h2&gt;
&lt;p&gt;My proposed first step in the research would be to devise a way to turn a formal
specification into a program.&lt;/p&gt;
&lt;p&gt;It&amp;#39;s actually very easy to come up with a terrible solution to this problem:
generate a program that enumerates all possible outputs, then filter using the
specification. This solution is incredibly inefficient, but maybe it can serves
as the basis for something better.&lt;/p&gt;
&lt;p&gt;First off, we can probably use part of the specification to constrain the
generated outputs. The outputs must probably conform to a precise shape, which
may also be related to the input (e.g. one line of output per line of input).&lt;/p&gt;
&lt;p&gt;Some parts of the specification might be naturally ammenable to be translated
into a constructive algorithm — as opposed to simply filtering out bad
solutions. For instance, the assertion that &lt;code&gt;y == f(x)&lt;/code&gt; where &lt;code&gt;y&lt;/code&gt; is a part of
the output and &lt;code&gt;x&lt;/code&gt; a part of the input could be translated immediately as &lt;code&gt;y =
f(x)&lt;/code&gt;, assuming it is the only thing that constrains &lt;code&gt;y&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I also expect that, starting from our initial program, we can
backward-propagated some of the constraints to the enumeration logic itself.
Some of the constraints could be translated into assertions used to prune the
search tree, or invariants to be maintained. Static analysis and optimization
techniques from compiler engineering should be relevant here.&lt;/p&gt;
&lt;p&gt;The big question is how far we can push these efforts. Can we generate enough
stub code and optimize away enough of the search that we end up with an program
that does &lt;em&gt;little enough&lt;/em&gt; guessing?&lt;/p&gt;
&lt;p&gt;If we can&amp;#39;t, all is not lost. We can still use this as a correct-by-construction
candidate solution, and use it as a starting point for a local search in the
space of programs. Within that search, we could exploit knowledge about the
specification to make smart guesses as to what to change. We can use our I/O
pairs to validate that the mutated program is still considered correct, as well
as fresh inputs, whose corresponding output must satisfy the specification. The
goal of the search is to derive a program that is simpler and more efficient.&lt;/p&gt;
&lt;p&gt;As a side note, it is not possible to check candidate programs against the
specification directly, as per Rice&amp;#39;s Theorem: &amp;quot;all non-trivial semantic
properties of programs are undecidable&amp;quot;. It would probably be worthwhile to
check a computability theory handbook to see if there are no other impossibility
results that could orient our efforts.&lt;/p&gt;
&lt;p&gt;For the search in program-space, we can use the whole bag of tricks from the
&lt;em&gt;generate-and-test&lt;/em&gt; approach, notably fitness functions and genetic algorithms.
But other, more specific methods could also be tried: using higher-order
functions as building blocks, syntactic restrictions, ...&lt;/p&gt;
&lt;p&gt;Other classical AI techniques can be handy. I&amp;#39;m thinking notably of simulated
annealing, where we first &lt;em&gt;increase entropy&lt;/em&gt; by allowing a certain amount of
&lt;em&gt;noise&lt;/em&gt;. In our case, we allow the initially-correct program to get worse,
because we want to move away from that solution towards a shorter/more
efficient/cleaner one; and then we progressively cool things down, trying to
zero in on new correct solution.&lt;/p&gt;
&lt;h2 id=&quot;defining-the-specification-language&quot;&gt;Defining The Specification Language&lt;/h2&gt;
&lt;p&gt;A key concern in the proposition made above is the shape of the specification
language. According to me, two concerns are in tension.&lt;/p&gt;
&lt;p&gt;First, the language should as broad and expressive as possible. The goal is to
make it easy to write the specifications — otherwise, they won&amp;#39;t get written at
all. This is also beneficial because it makes extracting formal specifications
from a natural-language document easier, as we may have constructs that better
reflect the natural-language explanation.&lt;/p&gt;
&lt;p&gt;Second, the language should be a good basis for the kind of code generation and
constraint propagation proposed in the previous section.&lt;/p&gt;
&lt;p&gt;There is some inherent contradiction between these two goals: if the
specification language is bigger, it will neccessarily includes multiple many
ways to specify the same constraint, some of which will be less amenable to code
generation or constraint propagation. It would be interesting to study this in
order to make an informed decision on what to include in the specification
language.&lt;/p&gt;
&lt;p&gt;An interesting source of inspiration is the Z Notation [16], which mixes set
theory, lambda calculus and first-order predicate logic.&lt;/p&gt;
&lt;div style=&quot;page-break-after: always;&quot;&gt;&lt;/div&gt;

&lt;h2 id=&quot;fuzzy-specifications-natural-language&quot;&gt;Fuzzy Specifications &amp;amp; Natural Language&lt;/h2&gt;
&lt;p&gt;The second part of my solution calls for a way to acquire a formal specification
from the natural-language specification and/or the examples.&lt;/p&gt;
&lt;p&gt;From examples, a partial specification can be obtained by looking for
relationships between input and output that are consistent accross all I/O
pairs. If the example set is too small, overfitting could be a danger.&lt;/p&gt;
&lt;p&gt;It&amp;#39;s not quite clear to me how to mine the relationships from I/O pairs. An idea
is to train a neural network as an oracle that indicates whether a new I/O pair
is &lt;em&gt;valid&lt;/em&gt;, that is to say, consistent with the training set of legitimate I/O
pairs, a proxy for satisfying the specification. We could then train a second
neural network to derive formal relationships based on the oracle itself. Such a
two-part architecture is featured in Neural FlashFill [13]. The idea is very out
there, however.&lt;/p&gt;
&lt;p&gt;The other (potentially complementary) option is to use the natural-language
specification to guess at the formal specification. As discussed before,
&amp;quot;traditional&amp;quot; (i.e., non-statistical) NLP is probably too arduous. However, given
a big enough corpus of specifications available both in natural-language and
formal versions, we can statistically learn a way to translate between both.
This would work similarly to translation between two natural-languages (e.g.,
what Google Translate does). It might be possible to retool these efforts
towards our goal. A potential problem here is to find or produce this &amp;quot;big
enough&amp;quot; corpus of natural and formal specifications.&lt;/p&gt;
&lt;p&gt;In any case, we must be ready to deal with mistakes in the generated
specification, and our proposition so far assumed that the specification was
correct. Fortunately, there is something very easy and effective we can do:
simply run the generated specification against our I/O examples, and
see if the specification is satisfied. If not, it cannot possibly be correct,
and the invalid parts can be discarded.&lt;/p&gt;
&lt;p&gt;Furthermore, we can generate many candidate solutions — the translation process
being inherently statistical — and perform a search on those.&lt;/p&gt;
&lt;p&gt;Even incorrect specifications have value, as we can perform a local search that
mutates the specifications to try to find adjacent correct specifications. Here
too, fitness functions and genetic algorithms could be helpful.&lt;/p&gt;
&lt;div style=&quot;page-break-after: always;&quot;&gt;&lt;/div&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;
&lt;p&gt;Given that (1) current inductive programming techniques results are
underwhelming with respect to our goal and (2) non-statistical NLP techniques
can hardly help us, I propose a two-pronged approach to tackle our challenge.&lt;/p&gt;
&lt;p&gt;First, devise a way to generate programs based on a correct formal specification
of the problem. For this, I suggest using techniques from statical analysis and
compiler optimizations. We would tackle the generation process both forward, by
constructively generating code from amenable specification fragments; and
backwards, by propagation constraint into our code — initially a simple
enumeration routine.&lt;/p&gt;
&lt;p&gt;Second, manage to extract a formal specification from the natural-language
specificaton of the problem and from the initial set of I/O examples. For this,
I propose to exploit statistical NLP techniques to &amp;quot;translate&amp;quot; between English
and our formal specification language.&lt;/p&gt;
&lt;p&gt;The whole proposal is of course a rather wild shot in the dark. But it is
different enough from previously-proposed approaches to have a chance — with
some luck — to yield some low-hanging fruits, or maybe even — with luck &lt;strong&gt;and&lt;/strong&gt;
diligence — to go further than existing approaches.&lt;/p&gt;
&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Gulwani, Sumit, et al. &amp;quot;Inductive programming meets the real world.&amp;quot;
Communications of the ACM 58.11 (2015): 90-99.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Hernández-Orallo, José. Deep knowledge: Inductive programming as an answer.
Dagstuhl TR 13502, 2013.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Flener, Pierre, and Ute Schmid. &amp;quot;An introduction to inductive programming.&amp;quot;
Artificial Intelligence Review 29.1 (2008): 45-62.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Kitzelmann, Emanuel. &amp;quot;Inductive programming: A survey of program synthesis
techniques.&amp;quot; International workshop on approaches and applications of
inductive programming. Springer, Berlin, Heidelberg, 2009.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Gulwani, Sumit, Oleksandr Polozov, and Rishabh Singh. &amp;quot;Program synthesis.&amp;quot;
Foundations and Trends® in Programming Languages 4.1-2 (2017): 1-119.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Kitzelmann, Emanuel. &amp;quot;Analytical inductive functional programming.&amp;quot;
International Symposium on Logic-Based Program Synthesis and Transformation.
Springer, Berlin, Heidelberg, 2008.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Torlak, Emina, and Rastislav Bodik. &amp;quot;A lightweight symbolic virtual machine
for solver-aided host languages.&amp;quot; ACM SIGPLAN Notices. Vol. 49. No. 6. ACM,
2014.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Olsson, Roland. &amp;quot;Inductive functional programming using incremental program
transformation.&amp;quot; Artificial intelligence 74.1 (1995): 55-81.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Katayama, Susumu. &amp;quot;Systematic search for lambda expressions.&amp;quot; Trends in
functional programming 6 (2005): 111-126.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Alur, Rajeev, et al. &amp;quot;Syntax-guided synthesis.&amp;quot; Formal Methods in
Computer-Aided Design (FMCAD), 2013. IEEE, 2013.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Balog, Matej, et al. &amp;quot;Deepcoder: Learning to write programs.&amp;quot; arXiv
preprint arXiv:1611.01989 (2016). (To be published at ICLR 2017)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Gulwani, Sumit. &amp;quot;Automating string processing in spreadsheets using
input-output examples.&amp;quot; ACM SIGPLAN Notices. Vol. 46. No. 1. ACM, 2011.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Parisotto, Emilio, et al. &amp;quot;Neuro-symbolic program synthesis.&amp;quot; arXiv preprint
arXiv:1611.01855 (2016).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mote, Kevin. &amp;quot;Natural Language Processing-A Survey.&amp;quot; arXiv preprint
arXiv:1209.6238 (2012).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://research.google.com/pubs/MachineTranslation.html&quot;&gt;https://research.google.com/pubs/MachineTranslation.html&lt;/a&gt;
Consulted on the 20th April 2018.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Abrial, J. et al. &amp;quot;The Z Notation: A Reference Manual.&amp;quot; (1998).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
      </description>
      <pubDate>2018-05-15T22:00:00.000Z</pubDate>
      <link>http://norswap.com/inductive-programming</link>
      <guid isPermaLink="true">http://norswap.com/inductive-programming</guid>
    </item>
    <item>
      <title>Effective Command Line Searching</title>
      <description>
&lt;p&gt;I do keep a fair amount of information inside text files - this is how I
organize myself, keep track of what I&amp;#39;ve read, etc.&lt;/p&gt;
&lt;p&gt;Occasionally, I need to search these files by content to retrieve some
information, or remind myself of something I read earlier. Hence the need for
software that does just that.&lt;/p&gt;
&lt;p&gt;So far, I had settled on &lt;a href=&quot;https://www.mythicsoft.com/agentransack/&quot;&gt;Agent Ransack&lt;/a&gt; on Windows and &lt;a href=&quot;https://www.houdah.com/tembo/&quot;&gt;Tembo&lt;/a&gt; on OS X.
However, I was looking for something a bit more snappy, hence the idea of using
a command line tool.&lt;/p&gt;
&lt;p&gt;I expect the reader will be familiar with the venerable &lt;a href=&quot;https://www.gnu.org/software/grep/&quot;&gt;grep&lt;/a&gt;, but it turns out
there are a whole lot more tools that can be used.&lt;/p&gt;
&lt;p&gt;The most useful resource I found online was &lt;a href=&quot;https://beyondgrep.com/feature-comparison/&quot;&gt;this comparison&lt;/a&gt; of tools, which
compares (at the time of writing), &lt;a href=&quot;https://www.gnu.org/software/grep/&quot;&gt;&lt;code&gt;ack&lt;/code&gt;], &lt;a href=&quot;https://geoff.greer.fm/ag/&quot;&gt;&lt;code&gt;ag&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://git-scm.com/docs/git-grep&quot;&gt;&lt;code&gt;git-grep&lt;/code&gt;&lt;/a&gt;, [&lt;code&gt;GNU
grep&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/BurntSushi/ripgrep&quot;&gt;&lt;code&gt;rg&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After a glance, I was really tempted to use &lt;a href=&quot;https://github.com/BurntSushi/ripgrep&quot;&gt;ripgrep (&lt;code&gt;rg&lt;/code&gt;)&lt;/a&gt;, which seems
to be the fastest of the bunch, has well-rounded features and nice
documentations.&lt;/p&gt;
&lt;p&gt;However, it lacked a vital feature for me: multi-line matching. I store a lot of
text formatted to hard-line-wrap at 80 characters, and I want to be able to
search for word groups accros line boundaries. So ultimately I settled on &lt;a href=&quot;https://geoff.greer.fm/ag/&quot;&gt;the
silver searcher (&lt;code&gt;ag&lt;/code&gt;)&lt;/a&gt;, which is great as well.&lt;/p&gt;
&lt;h2 id=&quot;effective-selecting&quot;&gt;Effective Selecting&lt;/h2&gt;
&lt;p&gt;Additionally, I also wanted to try &lt;a href=&quot;https://github.com/garybernhardt/selecta&quot;&gt;selecta&lt;/a&gt;, a command line tool by &lt;a href=&quot;https://www.destroyallsoftware.com/screencasts&quot;&gt;Gary
Bernhardt&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What it does is read lines from the input stream and allow you to scroll these
lines on the command line, ultimately selecting one. If this description is
unclear, check the animated gif on the &lt;a href=&quot;https://github.com/garybernhardt/selecta&quot;&gt;github page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Unfortunately selecta is Unix-only, however there are a few clones and I ended
up settling on the multi-platform &lt;a href=&quot;https://github.com/rschmitt/heatseeker&quot;&gt;heatseeker&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here&amp;#39;s an example of what I can do with &lt;code&gt;ag&lt;/code&gt; and heatseeker (&lt;code&gt;hs&lt;/code&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;em $(ag -l parser | hs)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Or the Windows equivalent (assuming you have &lt;code&gt;xargs&lt;/code&gt; installed, it comes with
&lt;a href=&quot;https://www.cygwin.com/&quot;&gt;Cygwin&lt;/a&gt;, &lt;a href=&quot;http://www.mingw.org/&quot;&gt;MinGW&lt;/a&gt; and even Git):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ag -l parser | hs | xargs em&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;What I&amp;#39;m doing is that I&amp;#39;m searching for the string &amp;quot;parser&amp;quot; in the current
directory. The &lt;code&gt;-l&lt;/code&gt; flag says to only print the file name (not the line number)
of matches. Then heatseeker is used for the selection, and once the selection is
done, the file opens in Emacs (&lt;code&gt;em&lt;/code&gt; is my &lt;a href=&quot;https://github.com/norswap/.emacs.d&quot;&gt;custom Emacs launching
script&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Of course, this could be encapsulated in a batch script or bash function in
order to be even more convenient.&lt;/p&gt;
&lt;h2 id=&quot;filename-search&quot;&gt;Filename Search&lt;/h2&gt;
&lt;p&gt;Just to be clear, the article is about searching inside text files. However, I
also often want to search files by name.&lt;/p&gt;
&lt;p&gt;To do this, I use GUI programs. On Windows, the best is &lt;a href=&quot;https://www.voidtools.com/&quot;&gt;Everything&lt;/a&gt;. I have
this handy program hotkeyed to &lt;code&gt;Win+S&lt;/code&gt; and I use it all the time to quickly
navigate to a file.&lt;/p&gt;
&lt;p&gt;OS X has unfortunately nothing as good as that. The main problem is that most
search programs seems to rely on the Spotlight engine, which is flaky in a
couple of places. Most aggravating for me, Spotlight will not search inside
dot-directories (e.g. &lt;code&gt;.config&lt;/code&gt;). It&amp;#39;s also not possible to formulate queries as
easily as in Everything. I think partial path matching is not possible for
instance. The search program that don&amp;#39;t use the Spotlight engine are somehow
even worse.&lt;/p&gt;
&lt;p&gt;In the absence of a real solution, &lt;a href=&quot;https://www.houdah.com/tembo/&quot;&gt;Tembo&lt;/a&gt; is also able to search on file names
on OS X. It&amp;#39;s not a patch on Everything, but it&amp;#39;s better than nothing
(accidental pun!).&lt;/p&gt;
&lt;p&gt;In the rare cases where I want to search on the command line, I can either use
the venerable &lt;a href=&quot;http://man7.org/linux/man-pages/man1/find.1.html&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt; or the use &lt;code&gt;-g&lt;/code&gt; flag of &lt;code&gt;ag&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;android&quot;&gt;Android&lt;/h2&gt;
&lt;p&gt;I also have a bunch of text files synced on my phone, and on the rare occassion
I need to make a search on the go, I use the &lt;a href=&quot;https://play.google.com/store/apps/details?id=jp.sblo.pandora.aGrep&amp;amp;hl=en&amp;amp;rdid=jp.sblo.pandora.aGrep&quot;&gt;aGrep&lt;/a&gt; application. I have also
tried &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.docsearch&amp;amp;hl=en&quot;&gt;DocSearch&lt;/a&gt;, but the user experience was less pleasant.&lt;/p&gt;
      </description>
      <pubDate>2018-02-26T23:00:00.000Z</pubDate>
      <link>http://norswap.com/cmd-search</link>
      <guid isPermaLink="true">http://norswap.com/cmd-search</guid>
    </item>
    <item>
      <title>Simple Math: Permutations and Combinations</title>
      <description>
&lt;p&gt;In today&amp;#39;s post, I want to (re-)introduce some simple math that most people
learn in high school, but forget quicly: permutations and combinations.&lt;/p&gt;
&lt;p&gt;Permutations and combinations allow you to answer questions like: In how many
ways can I order a set of distinct items? If I take K of those items, how many
combinations of them are there? Then we will go a bit further and see how to
deal with repetition (putting back an item after selecting it), multisets (sets
in which there are multiple copies of the same item, like a pit that would hold
4 red balls, 3 blue balls and 2 green balls) and picking from different sets.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;sets-of-distinct-items&quot;&gt;Sets of Distinct Items&lt;/h2&gt;
&lt;p&gt;Imagine you have a set of distinct items. This could be a deck of cards, or a
pit containing uniquely numbered balls. We will look at the number of ways to
pick items out of this set, with and without taking ordering into account.&lt;/p&gt;
&lt;p&gt;One basic rule: Once an item has been picked from the set, it can&amp;#39;t be picked
again.&lt;/p&gt;
&lt;p&gt;We will look at three questions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Permutations&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;How many ways are there to order all items in the set?&lt;/p&gt;
&lt;p&gt;For instance, for a set of three balls {1, 2, 3}, there are six way to order
them: 123, 132, 213, 231, 312, 321.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;k-Permutations&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;How many ways are there to order &lt;em&gt;k&lt;/em&gt; items picked from a set?&lt;/p&gt;
&lt;p&gt;For instance, for a set of three balls {1, 2, 3}, there are 6 ways to order
two of them: 12, 13, 21, 23, 31, 32.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;(k-)Combinations&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;How many ways are there to pick &lt;em&gt;k&lt;/em&gt; items picked from a set?&lt;/p&gt;
&lt;p&gt;For instance, for a set of three balls {1, 2, 3}, there are 3 ways to pick two
of them: {1, 2}, {1, 3} and {2, 3}.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let&amp;#39;s now give the formula and intuition for how to answer these questions.&lt;/p&gt;
&lt;h3 id=&quot;permutations&quot;&gt;Permutations&lt;/h3&gt;
&lt;p&gt;There are &lt;code&gt;n!&lt;/code&gt; ways to order the elements of a set of size &lt;em&gt;n&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;n!&lt;/code&gt; means the &lt;a href=&quot;https://en.wikipedia.org/wiki/Factorial&quot;&gt;factorial&lt;/a&gt; of n. The factorial of 3 is &lt;code&gt;3 * 2 * 1 = 6&lt;/code&gt;. The
factorial of 5 is &lt;code&gt;5 * 4 * 3 * 2 * 1 = 120&lt;/code&gt;, etc. The factorial of 0 is 1.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Intuition:&lt;/strong&gt; Imagine we have to order 3 balls {1, 2, 3}. First we pick one ball
and we have three to choose from, so that&amp;#39;s three possibilities. Next we pick
another ball, and there are only two left to choose from. This means that for
each choice we made when picking the first ball, there are two further
possibilities for the second ball, so that&amp;#39;s &lt;code&gt;3 * 2 = 6&lt;/code&gt; possibilities. Finally
there is only one ball left to pick: we have no choice. This means there are &lt;code&gt;3!
= 3 * 2 * 1 = 6&lt;/code&gt; ways to order the three balls.&lt;/p&gt;
&lt;h3 id=&quot;k-permutations&quot;&gt;k-Permutations&lt;/h3&gt;
&lt;p&gt;The are &lt;code&gt;P(n, k) = n! / (n-k)!&lt;/code&gt; ways to order &lt;em&gt;k&lt;/em&gt; items picked from a set of
size &lt;em&gt;n&lt;/em&gt;. For other mathematical notations, see &lt;a href=&quot;https://en.wikipedia.org/wiki/Permutation#k-permutations_of_n&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Intuition:&lt;/strong&gt; We start by considering all &lt;code&gt;n!&lt;/code&gt; permutations of the set. But we
are only interested in the &lt;em&gt;k&lt;/em&gt; first items of these permutations. Amongst all
permutations, there are multiple that start with the same &lt;em&gt;k&lt;/em&gt; items. How many of
these are there?&lt;/p&gt;
&lt;p&gt;Well, the permutations that have the same first &lt;em&gt;k&lt;/em&gt; items must have a different
permutations of their &lt;em&gt;n-k&lt;/em&gt; last items. With the formula for permutations, we
know there are &lt;code&gt;(n-k)!&lt;/code&gt; ways to form permutations of a set of &lt;em&gt;n-k&lt;/em&gt; items.&lt;/p&gt;
&lt;p&gt;So by dividing the total number of permutations (&lt;code&gt;n!&lt;/code&gt;) by the number of
permutations of the last &lt;em&gt;n-k&lt;/em&gt; items (&lt;code&gt;(n-k)!&lt;/code&gt;), we only keep one permutation
per possible k-permutation, and that is our answer.&lt;/p&gt;
&lt;h3 id=&quot;-k-combinations&quot;&gt;(k-)Combinations&lt;/h3&gt;
&lt;p&gt;The are &lt;code&gt;C(n, k) = n! / (k! * (n-k)!)&lt;/code&gt; ways to pick &lt;em&gt;k&lt;/em&gt; items from a set of size
&lt;em&gt;n&lt;/em&gt;. For other mathematical notations, see &lt;a href=&quot;https://en.wikipedia.org/wiki/Combination#Number_of_k-combinations&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Intuition:&lt;/strong&gt; We start from the &lt;code&gt;n! / (n-k)!&lt;/code&gt; k-permutations of the set. These
have the right size, but they take ordering into account. This means the
combinations are counted multiple times, with different ordering. How many
ordering of each combination are there?&lt;/p&gt;
&lt;p&gt;A combination is just a subset of size &lt;em&gt;k&lt;/em&gt; of the whole set. With the formula
for permutations, we know there are &lt;code&gt;k!&lt;/code&gt; ways to order the items of this set.&lt;/p&gt;
&lt;p&gt;So by dividing the number of k-permutations (&lt;code&gt;n! / (n-k)!&lt;/code&gt;) by the number of
permutations (&lt;code&gt;k!&lt;/code&gt;) for each combination, we end up getting the number of
combinations!&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;sets-of-distinct-items-with-repetition&quot;&gt;Sets of Distinct Items, with Repetition&lt;/h2&gt;
&lt;p&gt;By repetition, we mean that we change the basic rule of the last section: once a
item has been picked from the set, we put it back and are free to pick it again,
as many times as we like.&lt;/p&gt;
&lt;p&gt;This time, looking at the number of permutations of a whole set doesn&amp;#39;t make
sense anymore, as we put back each item after picking it.&lt;/p&gt;
&lt;p&gt;Let&amp;#39;s look at the other two questions in the presence of repetitions:&lt;/p&gt;
&lt;h3 id=&quot;k-permutations-with-repetitions-or-n-tuples-&quot;&gt;k-Permutations with repetitions (or n-tuples)&lt;/h3&gt;
&lt;p&gt;There are &lt;code&gt;n^k&lt;/code&gt; ways to order &lt;em&gt;k&lt;/em&gt; items from a set of size &lt;em&gt;n&lt;/em&gt;, with repetition.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Intuition&lt;/strong&gt;: each time we pick an item, we have &lt;em&gt;n&lt;/em&gt; possibilities, and these
possibilities just multiply for each item we pick.&lt;/p&gt;
&lt;p&gt;For instance, for a set of two balls {1, 2}, there are &lt;code&gt;2^3 = 8&lt;/code&gt; ways to pick 3
balls: 111, 112, 121, 122, 211, 212, 221, 222.&lt;/p&gt;
&lt;h3 id=&quot;-k-combinations-with-repetitions-or-k-multicombination-or-multisubset-&quot;&gt;(k-)Combinations with repetitions (or k-multicombination or multisubset)&lt;/h3&gt;
&lt;p&gt;There are &lt;code&gt;CC(n, k) = C(n+k-1, k) = (n+k-1)! / (k! * (n-1)!)&lt;/code&gt; ways to pick &lt;em&gt;k&lt;/em&gt;
items from a set of size &lt;em&gt;n&lt;/em&gt;, with repetition. For the proper mathematical
notation, see &lt;a href=&quot;https://en.wikipedia.org/wiki/Combination#Number_of_combinations_with_repetition&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Intuition:&lt;/strong&gt; This formula is rather harder than the rest, and so the intuition
is a bit more indirect.&lt;/p&gt;
&lt;p&gt;The idea is that each k-multicombination can be seen as a sequence of &lt;em&gt;k&lt;/em&gt; stars
and &lt;em&gt;n-1&lt;/em&gt; separating bars. Basically, the bars define &lt;em&gt;n&lt;/em&gt; separated intervals
(for instance &lt;code&gt;1|2|3&lt;/code&gt;). Each interval corresponds to an item in the set, and the
number of stars (zero or more) in that interval corresponds to the number of
times that item was picked from the set.&lt;/p&gt;
&lt;p&gt;So for instance, &lt;code&gt;***|*||*&lt;/code&gt; represents a way to pick 5 (&lt;em&gt;k&lt;/em&gt;) items from a set of
4 (&lt;em&gt;n&lt;/em&gt;) items. In this particular solution, the first item is picked thrice, the
third not at all, and the other two only once.&lt;/p&gt;
&lt;p&gt;So if we want to know the number of k-multicombinations, the problem reduces to
that of counting the number of such sequences. The sequences will have length
&lt;em&gt;n+k-1&lt;/em&gt;, and there are as many sequences as ways to pick the position of the &lt;em&gt;k&lt;/em&gt;
stars within the sequence. That is a combination! In particular, it is &lt;code&gt;C(n+k-1,
k)&lt;/code&gt;, and the rest is just applying the combination formula.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;picking-from-multiple-sets&quot;&gt;Picking From Multiple Sets&lt;/h2&gt;
&lt;p&gt;Before we get to the somewhat harder problem of picking in sets that contains
multiple copies of the same items, let&amp;#39;s see what happens when we pick from
multiple distinct sets.&lt;/p&gt;
&lt;p&gt;We want to answer questions like: how many ways are there to pick 3 balls from
my first pit containing 10 balls, and 4 balls from my second pit containing 8
balls.&lt;/p&gt;
&lt;p&gt;It&amp;#39;s very simple: since picking from each set is independent, we just compute
the two combinations, then multiply them: we can pair any combination from the
first set with a any combination from the second set.&lt;/p&gt;
&lt;p&gt;The same works for permutations, and we can even mix the two kinds. Just
remember: when two number of possibilities are independant (all combinations of
the two set of possibilities are valid), you can just multiply them.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;multisets&quot;&gt;Multisets&lt;/h2&gt;
&lt;p&gt;In what follows, we consider multisets: sets that have repeated items.&lt;/p&gt;
&lt;p&gt;We always consider a multiset of size &lt;em&gt;n&lt;/em&gt; containing &lt;em&gt;m&lt;/em&gt; kind of items, such
that there are &lt;em&gt;k1&lt;/em&gt;, &lt;em&gt;k2&lt;/em&gt;, ..., &lt;em&gt;km&lt;/em&gt; copies of the first, second, ..., last
item. Note that &lt;code&gt;k1 + k2 + ... + km = n&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;permutations-of-multisets&quot;&gt;Permutations of Multisets&lt;/h3&gt;
&lt;p&gt;There are &lt;code&gt;n! / (k1! * k2! * ... * km!)&lt;/code&gt; ways to order the elements of a
multiset.&lt;/p&gt;
&lt;p&gt;This formula is also called the &amp;quot;multinomial coefficient&amp;quot;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Intuition&lt;/strong&gt;: There would be &lt;code&gt;n!&lt;/code&gt; ways to order the items of the multiset, if
we considered each item to be unique.&lt;/p&gt;
&lt;p&gt;Let&amp;#39;s consider the first kind of items (let&amp;#39;s say &amp;quot;red balls&amp;quot;). All
configurations that have red balls in the same positions are identical. For each
of our &lt;code&gt;n!&lt;/code&gt; permutations, how many have the red balls in the same position,
except with different red balls? This is equivalent to asking to asking how many
ways there are to distribute the red balls in the &amp;quot;red slots&amp;quot;. This is the same
as asking how many ways there are to order all the red balls, which is a simple
permutation: &lt;code&gt;k1!&lt;/code&gt; ways.&lt;/p&gt;
&lt;p&gt;Now we know there are &lt;code&gt;n!/k1!&lt;/code&gt; permutations in which we do not distinguish
between the red balls, but still distinguish between all the other balls
individually. To obtain, the final result, the same process must be performed
for each kind of ball, successively divising until we obtain the final formula:
&lt;code&gt;n! / (k1! * k2! * ... * km!)&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;k-permutations-of-multisets&quot;&gt;k-Permutations of Multisets&lt;/h3&gt;
&lt;p&gt;This is &lt;strong&gt;much&lt;/strong&gt; more complicated than what we&amp;#39;d seen so far. A formula can be
derived, but it is unwieldy.&lt;/p&gt;
&lt;p&gt;I will still try to give some intuition, but if you&amp;#39;re after easy to use
formulas, feel free to skip this.&lt;/p&gt;
&lt;p&gt;Observe that if we pick &lt;em&gt;k&lt;/em&gt; items from our multiset such that &lt;code&gt;k &amp;lt; k1, k &amp;lt; k2,
..., k &amp;lt; km&lt;/code&gt;, then the problem is essentially that of k-permutations with
repetition, and there are thus &lt;code&gt;m^k&lt;/code&gt; such permutations. The reason is that we
can never run out of any kind of item.&lt;/p&gt;
&lt;p&gt;When this condition doesn&amp;#39;t hold anymore, we would like to still start from
&lt;code&gt;m^k&lt;/code&gt; hypothetical permutations, but remove from this total the permutations
where we picked more of a kind of item than there were in the multiset. This
seems easy, but there is a problem: some of the permutations that have too many
of the first kind of items may also have too many of the second kind of item. We
should not remove them twice!&lt;/p&gt;
&lt;p&gt;Let&amp;#39;s call &lt;em&gt;TM1&lt;/em&gt;, &lt;em&gt;TM2&lt;/em&gt;, ..., &lt;em&gt;TMm&lt;/em&gt; the number of permutations where there are
Too Many of the 1st, 2nd, ..., mth item. Computing these values is not trivial:
for each &lt;em&gt;TMi&lt;/em&gt;, we have to sum all k-combinations of &lt;em&gt;x&lt;/em&gt; items amongst &lt;em&gt;k&lt;/em&gt;, for
all &lt;em&gt;x&lt;/em&gt; such that &lt;code&gt;ki &amp;lt; x &amp;lt;= k&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When we have two kind of items, the simplified formula is: &lt;code&gt;m^k - TM1 - TM2 +
TM(1,2)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The meaning of &lt;em&gt;TM(1,2)&lt;/em&gt; here is &amp;quot;number of of permutations where there are too
many of the first kind of item AND too many of the second times of item&amp;quot;. Those
permutations are actually substracted twice (once via &lt;em&gt;TM1&lt;/em&gt;, once via &lt;em&gt;TM2&lt;/em&gt;) and
so need to be added back.&lt;/p&gt;
&lt;p&gt;What about three kind of items? It&amp;#39;s &lt;code&gt;m^k - TM1 - TM2 - TM3 + TM(1, 2) + TM(1,
3) + TM (2, 3) - TM(1, 2, 3)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;We now have three combinations of item kinds to consider. But after adding back
these permutations, we still aren&amp;#39;t done! Consider the permutations where we
have too many of all three kind of items. We have removed them thrice (&lt;em&gt;TM1&lt;/em&gt;,
&lt;em&gt;TM2&lt;/em&gt;, &lt;em&gt;TM3&lt;/em&gt;) and added them back thrice (&lt;em&gt;TM(1, 2)&lt;/em&gt;, &lt;em&gt;TM(1, 3)&lt;/em&gt;, &lt;em&gt;TM(2, 3)&lt;/em&gt;),
so we need to remove them one final time (&lt;em&gt;TM(1, 2, 3)&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;The more kinds of items you have, the crazier it gets. Not to mention that all
these &lt;em&gt;TM&lt;/em&gt; values are hairy to compute by themselves. Still easy stuff for a
computer to do, but don&amp;#39;t try this by hand.&lt;/p&gt;
&lt;p&gt;This principle of removing and adding back duplicates is known as &lt;a href=&quot;https://en.wikipedia.org/wiki/Inclusion%E2%80%93exclusion_principle&quot;&gt;The
Inclusion-Exclusion Principle&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;k-permutations-of-multisets-with-repetition&quot;&gt;k-Permutations of Multisets with Repetition&lt;/h3&gt;
&lt;p&gt;This is actually easy! Because repetition is allowed, it doesn&amp;#39;t matter how many
of each kind of item there is. The answer is thus the same as the number of
k-permutations with reptition for a set that would have only one of each kind of
item: &lt;code&gt;k^m&lt;/code&gt; (where &lt;em&gt;m&lt;/em&gt; is the number of kinds of items).&lt;/p&gt;
&lt;p&gt;However, there is a pitfall: while all &lt;code&gt;k^m&lt;/code&gt; k-permutations are possible, they
aren&amp;#39;t all equiprobable — they don&amp;#39;t all have the same probability to be
selected randomly. The probabilities for each k-permutation will depend on the
number of items of each kind.&lt;/p&gt;
&lt;h3 id=&quot;k-combinations-of-multisets&quot;&gt;k-Combinations of Multisets&lt;/h3&gt;
&lt;p&gt;This has just the same problem as counting the number of k-permutations of a
multiset, the only difference being we do not consider ordering.&lt;/p&gt;
&lt;p&gt;The reasoning is much the same, so I shall say no more of it.&lt;/p&gt;
&lt;h3 id=&quot;k-combinations-of-multisets-with-repetition&quot;&gt;k-Combinations of Multisets with Repetition&lt;/h3&gt;
&lt;p&gt;This, in turn, can be obtained in much the same way as the number of
k-permutations of multisets with repetition.&lt;/p&gt;
&lt;p&gt;Namely, there are &lt;code&gt;&lt;/code&gt;CC(m, k) = C(m+k-1, k) = (m+k-1)! / (k! * (m-1)!)` such
k-combinations. And again, not all of them are equiprobable.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;probabilities&quot;&gt;Probabilities&lt;/h2&gt;
&lt;p&gt;Combinations and permutations are often used for deriving the probability that a
class of event will occur.&lt;/p&gt;
&lt;p&gt;The general recipe goes something like this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Derive the number of configurations that match the class of events (e.g.
drawing three heart cards from a full deck of cards)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Derive the total number of configurations (e.g. the number of ways to draw
three cards from a full deck of cards)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The ratio between (1) and (2) is your probability.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So to take our example, there are &lt;code&gt;C(52, 3)&lt;/code&gt; ways to draw three
cards out of a full 52-cards deck. There are &lt;code&gt;C(13, 3)&lt;/code&gt; ways to pick three
hearts cards from all heart cards in the deck, so that&amp;#39;s also the number of
scenarios in which we pick three cards from our full deck.&lt;/p&gt;
&lt;p&gt;So there is a &lt;code&gt;C(13, 3) / C(52, 3) = 0.013 = 1.3%&lt;/code&gt; probabability to pick 3 heart
cards from a full deck.&lt;/p&gt;
&lt;p&gt;Remember you can multiply scenarios if they are independent in order to get the
total number of scenarios. This corresponds to an AND within a scenario. For
instance, the probability to draw three red cards and three black cards from a
full deck. (Answer: &lt;code&gt;C(26, 3)^2 / C(52, 6)&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;You can also add scenarios when they are independent. This corresponds to an OR
within the scenario. Example: There are 12 balls in a bag, 3 of them are red, 4
of them are green and 5 of them are blue. We randomly take out 3 balls from the
bag at the same time. What is the probability that all three balls are of the
same colour? (Answer: &lt;code&gt;(C(5, 3) + C(4, 3) + C(3, 3)) / C(12, 3)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Beware of scenarios that are not independant. For instance, if you search the
probability to draw four cards, three of which are red, and one of which is a
figure, you can&amp;#39;t just multiply the probability to pick three red cards and the
probability to pick a figure: the figure might be one of your red cards!&lt;/p&gt;
&lt;p&gt;There are ways around these issues, and we already mentionned the &lt;a href=&quot;https://en.wikipedia.org/wiki/Inclusion%E2%80%93exclusion_principle&quot;&gt;The
Inclusion-Exclusion Principle&lt;/a&gt;. I&amp;#39;m afraid that in intricate cases, there
is no substitute for some thinking.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;More information:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Combination&quot;&gt;Combinations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Permutation&quot;&gt;Permutations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
      </description>
      <pubDate>2018-01-20T23:00:00.000Z</pubDate>
      <link>http://norswap.com/combinatorics</link>
      <guid isPermaLink="true">http://norswap.com/combinatorics</guid>
    </item>
  </channel>
</rss>
