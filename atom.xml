<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>norswap</title>
    <description></description>      
    <link>http://norswap.com/</link>
    <atom:link href="http://norswap.com/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>briefly</title>
      <description>
&lt;p&gt;I made a small Tweeter bot that tweets one Japanese Kana every hour.
It&amp;#39;s written in Node.js and deployed to Heroku. It turned out easier than
expected.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/kanatweeter&quot;&gt;https://twitter.com/kanatweeter&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/norswap/kana-tweeter&quot;&gt;https://github.com/norswap/kana-tweeter&lt;/a&gt;&lt;/p&gt;
      </description>
      <pubDate>2016-12-13T23:00:00.000Z</pubDate>
      <link>http://norswap.com/kana-tweeter-announce</link>
      <guid isPermaLink="true">http://norswap.com/kana-tweeter-announce</guid>
    </item>
    <item>
      <title>Deep Neural Pathways</title>
      <description>
&lt;p&gt;I sometimes worry that by specializing in certain of tasks at the exclusion of
others, I will lose the ability to learn new skills; that my neural pathways
will get frozen in a certain configuration, baking my current skillset into my
brain.&lt;/p&gt;
&lt;p&gt;But maybe it isn&amp;#39;t that bad. You lose flexibility, but you gain efficiency.
People who are great at their job do have it &amp;quot;wired&amp;quot; in them in some sense. They
see what is relevant from so far, it&amp;#39;s eerie. Maybe it&amp;#39;s because they ONLY see
what is relevant to their area of expertise.&lt;/p&gt;
&lt;p&gt;Of course, one should thrive to bake in the &lt;em&gt;right&lt;/em&gt; sets of defaults. And to
know when to reconfigure.&lt;/p&gt;
&lt;p&gt;Yesterday on Slack, a colleague (Simon) linked a video of
&lt;a href=&quot;https://www.youtube.com/watch?v=MFzDaBzBlL0&quot;&gt;a guy learning to ride an inverse bicycle&lt;/a&gt; that turns right when you
steer left and vice-versa. Turns out it&amp;#39;s amazingly hard. But after eight
months, he got it. And guess what: after a while he couldn&amp;#39;t ride the normal
bicycle anymore -- he had to try 20 minutes for it to come back.&lt;/p&gt;
&lt;p&gt;So what he did was not that he became more flexible: he overwrote a set of baked
circuitry with another set. I don&amp;#39;t know what the moral of the story is, but it
certainly makes you think.&lt;/p&gt;
      </description>
      <pubDate>2016-11-08T23:00:00.000Z</pubDate>
      <link>http://norswap.com/deep-neural-pathways</link>
      <guid isPermaLink="true">http://norswap.com/deep-neural-pathways</guid>
    </item>
    <item>
      <title>Robin Hood Hashing on the JVM</title>
      <description>
&lt;p&gt;Robin Hood Hashing, despite its name, isn&amp;#39;t a hashing technique, but rather a
way to implement &lt;a href=&quot;https://en.wikipedia.org/wiki/Linear_probing&quot;&gt;linear-probing hash tables&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In the classical linear probing implementation, whenever a hash table slot is
already taken (due to hash collision), you probe ahead until you find an empty
slot. When the hash table is highly loaded, this can lead to entries being
stored far away from their preferred position.&lt;/p&gt;
&lt;p&gt;Robin Hood Hashing features a notion of &lt;em&gt;displacement&lt;/em&gt;. The displacement of an
entry is the distance between its actual position and its preferred position.
Furthermore, we call &lt;em&gt;probe count&lt;/em&gt; the number of probed slots in order to find a
free slot. When inserting an entry, the final probe count is the diplacement.&lt;/p&gt;
&lt;p&gt;When inserting an entry A using Robin Hood Hashing, if you encounter an entry B
whose displacement is smaller than the probe count, you insert A in B&amp;#39;s
position, and relocate B further in the table (following the same rules).&lt;/p&gt;
&lt;p&gt;The result is that the displacements of all entries in the map tend to even out.
The length of the longest displacement tends to increase as the load increase
but very slowly (around 6 for a load of 0.9 &amp;mdash; see
&lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.130.6339&quot;&gt;this paper (pdf)&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The technique is actually quite old. It was first &lt;a href=&quot;https://cs.uwaterloo.ca/research/tr/1986/CS-86-14.pdf&quot;&gt;published in 1986&lt;/a&gt;.
As for me, I first become aware of Robin Hood Hashing through
&lt;a href=&quot;http://www.sebastiansylvan.com/post/robin-hood-hashing-should-be-your-default-hash-table-implementation/&quot;&gt;a post by Sebastian Sylvan&lt;/a&gt;. Emmanuel Goossaert also has two posts
(&lt;a href=&quot;http://codecapsule.com/2013/11/11/robin-hood-hashing/&quot;&gt;one&lt;/a&gt;, &lt;a href=&quot;http://codecapsule.com/2013/11/17/robin-hood-hashing-backward-shift-deletion/&quot;&gt;two&lt;/a&gt;) analyzing and then improving the technique. If you&amp;#39;re
looking for further information, I highly recommend these posts.&lt;/p&gt;
&lt;p&gt;I was interesting in a more pragmatic question: could I use Robin Hood Hashing
and get a boost in performance? In particular, how would it perform on the JVM,
where I do most of my work these days?&lt;/p&gt;
&lt;p&gt;I implemented two versions of the algorithm (&lt;a href=&quot;https://github.com/ncellar/robinmap&quot;&gt;source&lt;/a&gt;). The first versions
stores entry objects in the table (hence requiring an extra indirection for each
probed slot). The second version used two tables: the first one was an array of
integers, where each table entry occupies two array entries. The first array
entry is the hash, the second is the displacement. The second table is an array
of objects. Here too, each table entry occupies two array entry. The first array
entry is the key, the second is the value. The theory is that most of the time,
when probing, you only need to check the hash and the displacement. Having those
in the primary table avoids extra indirection (and hence cache misses).&lt;/p&gt;
&lt;p&gt;Disappointingly enough, the performance delta between both techniques is too
small to be meaningful. In general however, the technique is almost as fast as
Java&amp;#39;s &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/HashMap.html&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt; implementation. With some performance tweaking, I
believe it would be possible to close the gap. Be warned that my measurements
are very wonky. Nevertheless they gave me confidence enough to come to two
conclusions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Robin Hood Hashing is practical and fast enough to rival separate-chaining
hash table implementation (like Java&amp;#39;s &lt;code&gt;HashMap&lt;/code&gt;) on the JVM.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;However, it is not significantly faster either, and so it&amp;#39;s probably not worth
the trouble of maintaining my own implementation.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note this says nothing about the relative performance of Robin Hood Hashing and
separate-chaining on other platforms than the JVM.&lt;/p&gt;
&lt;p&gt;And off course, you should totally perform you own measurements. You can get
started from &lt;a href=&quot;https://github.com/ncellar/robinmap&quot;&gt;my own code&lt;/a&gt;. If anyone has more data to add to the
discussion, make sure to share it in the comments.&lt;/p&gt;
      </description>
      <pubDate>2016-10-09T22:00:00.000Z</pubDate>
      <link>http://norswap.com/robin-hood-hashing-jvm</link>
      <guid isPermaLink="true">http://norswap.com/robin-hood-hashing-jvm</guid>
    </item>
    <item>
      <title>Learned Optimism</title>
      <description>
&lt;p&gt;Summary of &lt;a href=&quot;https://github.com/raganwald/presentations/blob/master/optimism.md&quot;&gt;Reginald Braithwaite&amp;#39;s presentation&lt;/a&gt; at Nordic Ruby 2016.&lt;/p&gt;
&lt;p&gt;Learned Optimism is a book by Dr. Martin Seligman.&lt;/p&gt;
&lt;p&gt;The book exposes a theory about how people explain things to themselves. We all
do this, it&amp;#39;s part of the whole sentience thing we have going on. Something
happens, and we make up a little theory about why it happened.&lt;/p&gt;
&lt;p&gt;The explanations you produce are classified along the following axis:&lt;/p&gt;
&lt;dl&gt;

  &lt;dt&gt;Personal vs Impersonal&lt;/dt&gt;

  &lt;dd&gt;Whether the explanation makes you responsible for the thing that happened
  (personal) or not (impersonal).&lt;/dd&gt;

  &lt;dt&gt;Specific vs General&lt;/dt&gt;

  &lt;dd&gt;Is the explanation about the thing that happened (specific), or are they
  about you, your beliefs, your methods, ... (general).&lt;/dd&gt;

  &lt;dt&gt;Temporary vs Permanent&lt;/dt&gt;

  &lt;dd&gt;Is the thing that happened temporary? Or is it permanent? Did it happen
  just one time, or is it a pattern that will repeat itself?&lt;/dd&gt;

&lt;/dl&gt;

&lt;p&gt;Seligman research showed that explanations differ depending on whether the
explainer is an optimist or a pessimist, and whether the thing that happened is
good or bad.&lt;/p&gt;
&lt;dl&gt;
    &lt;dt&gt;Optimists&lt;/dt&gt;

    &lt;dd&gt;
    &lt;ul&gt;
    &lt;li&gt;Good things are personal, general, and permanent.&lt;/li&gt;
    &lt;li&gt;Bad things are impersonal, specific, and temporary.&lt;/li&gt;
    &lt;/ul&gt;
    &lt;/dd&gt;

    &lt;dt&gt;Pessimists&lt;/dt&gt;

    &lt;dd&gt;
    &lt;ul&gt;
    &lt;li&gt;Good things are impersonal, specific, and temporary.&lt;/li&gt;
    &lt;li&gt;Bad things are personal, general, and permanent.&lt;/li&gt;
    &lt;/ul&gt;
    &lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Both optimists are pessimists are inconsistent in their explanations, but in a
different way.&lt;/p&gt;
&lt;p&gt;This is a simplified model, and may even seem silly; but if you&amp;#39;re like me
(norswap), it&amp;#39;s hard not to recognize that you flog yourself over your mistakes
more often than you pat yourself on the back for your achievements.&lt;/p&gt;
&lt;p&gt;Seligman says you can train yourself to become an optimist, and this implies
changing the patterns of your explanations. He claims this changes your mood and
your productivity.&lt;/p&gt;
&lt;p&gt;It is not controversial to say that our moods affect the explanations we make up
for things that happen in our lives. Explanatory Theory takes it a step further
and says that the explanations we make up for things also affect our moods and
behaviour.&lt;/p&gt;
&lt;p&gt;To train yourself to become an optimist:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You train yourself to make a note of your explanations, every day. Repetition
and consistency matters.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You analyze whether your explanations for good things are personal, general,
and permanent. You analyze whether your explanations for bad things are
impersonal, specific, and temporary.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You correct your explanations to make them optimistic. And you track your
progress, just as you would track your progress for anything else you are
trying to change in your life.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
      </description>
      <pubDate>2016-09-26T22:00:00.000Z</pubDate>
      <link>http://norswap.com/learned-optimism</link>
      <guid isPermaLink="true">http://norswap.com/learned-optimism</guid>
    </item>
    <item>
      <title>Book Summaries</title>
      <description>
&lt;p&gt;I like to read a lot, notably books about psychology, philosophy, and other
actionable topics. However, I often feel that these book dilute their ideas too
much, in order to make a &amp;quot;proper&amp;quot; (fat) book out of it.&lt;/p&gt;
&lt;p&gt;But now, I have the cure. &lt;a href=&quot;https://www.quora.com/What-are-the-best-book-summary-websites&quot;&gt;This list of book summary websites&lt;/a&gt; covers
a large range of books in the topics that interest me.&lt;/p&gt;
&lt;p&gt;Here&amp;#39;s a copy of the list for posterity:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.deconstructingexcellence.com/&quot;&gt;Deconstructing Excellence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sivers.org/book&quot;&gt;Derek Sivers&amp;#39; Books Read&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.farnamstreetblog.com/&quot;&gt;Farnam Street&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://fourminutebooks.com/all-summaries/&quot;&gt;4 Minute Books&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;www.actionablebooks.com/en-ca/summaries/&quot;&gt;Actionable Books&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://app.blinkist.com/en/library/&quot;&gt;Blinkist (paid)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The first four websites are great, but the selection is limited.&lt;/p&gt;
&lt;p&gt;Actionable Books has a lot of things, but the summaries only include 3/4 bullet
points and sometimes fail to capture the essence of the book, as far as I&amp;#39;ve
seen.&lt;/p&gt;
&lt;p&gt;Blinkist seemed like the most well-rounded option. I made a trial account and
was quite satisfied with the two summaries I read.&lt;/p&gt;
      </description>
      <pubDate>2016-09-23T22:00:00.000Z</pubDate>
      <link>http://norswap.com/book-summaries</link>
      <guid isPermaLink="true">http://norswap.com/book-summaries</guid>
    </item>
    <item>
      <title>briefly</title>
      <description>
&lt;p&gt;As a learning exercise, I implemented the CHAMP (Compressed Hash-Array Mapped
Prefix-tree) data structure in Kotlin.
&lt;a href=&quot;https://github.com/norswap/triemap&quot;&gt;Check it here.&lt;/a&gt;&lt;/p&gt;
      </description>
      <pubDate>2016-09-22T22:00:00.000Z</pubDate>
      <link>http://norswap.com/triemap-champ</link>
      <guid isPermaLink="true">http://norswap.com/triemap-champ</guid>
    </item>
    <item>
      <title>A website for your project with Github</title>
      <description>
&lt;p&gt;Github has a thing called &lt;a href=&quot;https://pages.github.com/&quot;&gt;Github Pages&lt;/a&gt; that lets you publish a static HTML
website directly from your github repository. It&amp;#39;s quite handy, but I&amp;#39;m not
really convinced with the documentation. So here goes the super-duper easy guide
on how to add Github Pages to your existing project and manage it easily.&lt;/p&gt;
&lt;p&gt;Run the following commands:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir pages
cd pages
git init .
git remote add origin git@github.com:USERNAME/REPO.git
git checkout --orphan gh-pages
git commit --allow-empty -m &amp;quot;initial empty commit (pages)&amp;quot;
git push -u origin gh-pages
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Finally, add &lt;code&gt;/pages/&lt;/code&gt; to the &lt;code&gt;.gitignore&lt;/code&gt; file for your project.&lt;/p&gt;
&lt;p&gt;What it does: basically it clones your repo inside the &lt;code&gt;pages&lt;/code&gt; directory and
immediately switches to an empty, commit-less branch called &lt;code&gt;gh-pages&lt;/code&gt; (as
required by Github).&lt;/p&gt;
&lt;p&gt;Github simply serves any file within the &lt;code&gt;gh-pages&lt;/code&gt; branch to the brower through
&lt;code&gt;USERNAME.github.io/PROJECT/&lt;/code&gt;. If you&amp;#39;ve set up a custom domain name with
Github, this domain will be used instead of &lt;code&gt;USERNAME.github.io&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When inside the &lt;code&gt;page&lt;/code&gt; directory, you can make changes to your website, commit
them and publish them with &lt;code&gt;git push&lt;/code&gt;.&lt;/p&gt;
      </description>
      <pubDate>2016-09-21T22:00:00.000Z</pubDate>
      <link>http://norswap.com/github-pages</link>
      <guid isPermaLink="true">http://norswap.com/github-pages</guid>
    </item>
    <item>
      <title>Cruising Blues</title>
      <description>
&lt;p&gt;Completing my series of posts about Robert Pirsig&amp;#39;s
&lt;a href=&quot;https://en.wikipedia.org/wiki/Zen_and_the_Art_of_Motorcycle_Maintenance&quot;&gt;Zen and the Art of motorcycle Maintenance&lt;/a&gt; (&lt;a href=&quot;/stuckness-and-understanding&quot;&gt;1&lt;/a&gt;, &lt;a href=&quot;/peace-of-mind&quot;&gt;2&lt;/a&gt;, &lt;a href=&quot;/gumption-arete&quot;&gt;3&lt;/a&gt;), here&amp;#39;s a
fantastic expert from an article of Pirsig, titled
&lt;a href=&quot;http://www.moq.org/forum/Pirsig/cruisingblues.html&quot;&gt;Cruising Blues and Their Cure&lt;/a&gt; and published in Esquire in 1977.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Virtue here comes from childhood reading about the old days of sailing ships
when young men were sent to sea to learn manliness and virtue. I remember being
skeptical about this. &amp;quot;How could a monotonous passage across a pile of water
produce virtue?&amp;quot; I wondered. I figured that maybe a few bad storms would scare
hell out of the young men and this would make them humble and manly and virtuous
and appreciative of life ever afterward, but it seemed like a dubious
curriculum. There were cheaper and quicker ways to scare people than that.&lt;/p&gt;
&lt;p&gt;Now, however, with a boat of my own and some time at sea, I begin to see the
learning of virtue another way. It has something to do with the way the sea and
sun and wind and sky go on and on day after day, week after week, and the boat
and you have to go on with it. You must take the helm and change the sails and
take sights of the stars and work out their reductions and sleep and cook and
eat and repair things as they break and do most of these things in stormy
weather as well as fair, depressed as well as elated, because there&amp;#39;s no choice.
You get used to it; it becomes habit-forming and produces a certain change in
values. Old gear that has been through a storm or two without failure becomes
more precious than it was when you bought it because you know you can trust it.
The same becomes true of fellow crewmen and ultimately becomes true of things
about yourself. Good first appearances count for less than they ever did, and
real virtue - which comes from an ability to separate what merely looks good
from what lasts and the acquisition of those characteristics in one&amp;#39;s self - is
strengthened.&lt;/p&gt;
&lt;p&gt;Self-discovery is as much a philosopher&amp;#39;s imponderable as reality, but when one
takes away the external stimuli of civilization during long ocean hours at the
helm far from any land, and particularly on overcast nights, every cruising
sailor knows that what occurs is not an evening of complete blankness. Instead
comes a flow of thought drawn forth by the emptiness of the night. Occurrences
of the previous day, meager as they may have been, rise and are thought about
for a while, and then die away to return again later, a little less compelling,
and perhaps another time even weaker, until they die away completely and are not
thought of again. Then older memories appear, of a week past, a month past, of
years past, and these are thought about and sometimes interrelated with new
insights. A problem that has been baffling in the past is now understood
quickly. New ideas for things seem to pop up from nowhere because the rigid
patterns of thought that inhibited them are now weakened by emptiness and
depression. Then in time these new thoughts wear town too, and the empty night
dredges deeper into the subconscious to tug at, loosen and dislodge old
forgotten thoughts that were repressed years ago. Old injustices that one has
had to absorb, old faces now gone, ancient feelings of personal doubt, remorse,
hatred and fear, are suddenly loose and at you. You must face them again and
again until they die away like the thoughts preceding them. This self that one
discovers is in many ways a person one would not like one&amp;#39;s friends to know
about; a person one may have been avoiding for years, full of vanity, cowardice,
boredom, self-pity, laziness, blamingness, weak when he should be strong,
aggressive when he should be gentle, a person who will do anything not to know
these things about himself - the very same fellow who has been having problems
with cruising depression all this time. I think it&amp;#39;s in the day-after-day,
week-after-week confrontation of this person that the most valuable learning of
virtue takes place.&lt;/p&gt;
      </description>
      <pubDate>2016-09-19T22:00:00.000Z</pubDate>
      <link>http://norswap.com/cruising-blues</link>
      <guid isPermaLink="true">http://norswap.com/cruising-blues</guid>
    </item>
    <item>
      <title>Gumption and Areté</title>
      <description>
&lt;p&gt;This post is part 3/3 in a series about Robert Pirsig&amp;#39;s book &lt;a href=&quot;https://en.wikipedia.org/wiki/Zen_and_the_Art_of_Motorcycle_Maintenance&quot;&gt;Zen and the Art of
motorcycle Maintenance&lt;/a&gt;. See also &lt;a href=&quot;/stuckness-and-understanding&quot;&gt;part 1&lt;/a&gt; and &lt;a href=&quot;/peace-of-mind&quot;&gt;part 2&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This post will talk about two notions that Pirsig puts forward: &lt;em&gt;gumption&lt;/em&gt; and
&lt;em&gt;areté&lt;/em&gt;. Gumption is originally a Scottish term, meaning &amp;quot;common sense,
shrewdness&amp;quot;, but also &amp;quot;drive, initiative&amp;quot;.&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;A person filled with gumption doesn&amp;#39;t sit around dissipating and stewing about
things. He&amp;#39;s at the front of the train of his own awareness, watching to see
what&amp;#39;s up the track and meeting it when it comes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Gumption-filling occurs when one is quiet long enough to see, hear and feel the
real universe, not just one&amp;#39;s own stale opinions about it.&lt;/p&gt;
&lt;p&gt;It&amp;#39;s common in people returning from long fishing trips. They seemingly have put
a lot of time for nothing, but in reality they come back with an abundance of
gumption, usually for the very same things they were sick to death of a few
weeks before. It&amp;#39;s not wasted time.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&amp;quot;Gumption is the psychic gasoline that keeps the whole thing going.&amp;quot; It is
necessary to all psychic tasks of interest. If you don&amp;#39;t have it, you might as
well not start. Similarly, its level must be monitored at all times.&lt;/p&gt;
&lt;p&gt;When gumption loss occur: take a long break, don&amp;#39;t rush in to make up for lost
gumption.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;One of the gumption &lt;em&gt;traps&lt;/em&gt; is ego:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To the untrained eye ego-climbing and selfless climbing may appear identical.
Both kinds of climbers place one foot in front of the other. Both breathe in
and out at the same rate. Both stop when tired. Both go forward when rested.
But what a difference! The ego-climber is like an instrument that’s out of
adjustment. He puts his foot down an instant too soon or too late. He’s likely
to miss a beautiful passage of sunlight through the trees. He goes on when the
sloppiness of his step shows he’s tired. He rests at odd times. He looks up
the trail trying to see what’s ahead even when he knows what’s ahead because
he just looked a second before. He goes too fast or too slow for the
conditions and when he talks his talk is forever about somewhere else,
something else. He’s here but he’s not here. He rejects the here, he’s unhappy
with it, wants to be farther up the trail but when he gets there will be just
as unhappy because then it will be “here”. What he’s looking for, what he
wants, is all around him, but he doesn’t want that because it is all around
him. Every step’s an effort, both physically and spiritually, because he
imagines his goal to be external and distant.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(Thanks to my friend Stanislav for bringing this quote to my attention.)&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Areté&lt;/em&gt; is a greek notion that refers to excellence, acquired not as a duty to
others but to oneself.&lt;/p&gt;
&lt;p&gt;Areté implies excelling in many domains in life, a respect for the wholeness of
one&amp;#39;s life. It implies contempt for efficiency, or rather a higher idea for
efficiency, an efficiency which exists not in one department of life but in life
itself.&lt;/p&gt;
      </description>
      <pubDate>2016-09-19T22:00:00.000Z</pubDate>
      <link>http://norswap.com/gumption-arete</link>
      <guid isPermaLink="true">http://norswap.com/gumption-arete</guid>
    </item>
    <item>
      <title>New Publication</title>
      <description>
&lt;p&gt;&lt;strong&gt;Context-Sensitive Languages with Principled Stateful Parsing&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To appear at &lt;a href=&quot;http://conf.researchr.org/track/sle-2016/sle-2016-papers&quot;&gt;SLE 2016&lt;/a&gt;.&lt;br&gt;&lt;a href=&quot;http://norswap.com/pubs/sle2016.pdf&quot;&gt;Pre-print here&lt;/a&gt;.&lt;/p&gt;
      </description>
      <pubDate>2016-09-16T22:00:00.000Z</pubDate>
      <link>http://norswap.com/pub-context-sensitive</link>
      <guid isPermaLink="true">http://norswap.com/pub-context-sensitive</guid>
    </item>
  </channel>
</rss>
